CHƯƠNG 1: TỔNG QUAN VỀ ĐỀ TÀI
1.1 Lý do chọn đề tài
     	Cùng với sự phát triển không ngừng về kỹ thuật máy tính và mạng điện tử, công nghệ thông tin cũng được những công nghệ có đẳng cấp cao và lần lượt chinh phục hết đỉnh cao này đến đỉnh cao khác. Mạng Internet là một trong những sách có giá trị hết sức lớn lao và ngày càng trở thành một công cụ không thể thiếu, là nền tảng chính cho sự truyền tải, trao đổi thông tin trên toàn cầu.
    Bằng internet, chúng ta đã thực hiện được nhiều công việc với tốc độ nhanh hơn và chi phí thấp hơn nhiều so với cách thức truyền thống. Chính điều này, đã thúc đẩy sự khai sinh và phát triển của thương mại điện tử và chính phủ điện tử trên khắp thế giới, làm biến đổi đấng kể bộ mặt văn hóa, nâng cao chất lượng cuộc sống con người.
    Vì lý do đó việc ứng dụng công nghệ thông tin vào thực tiễn đời sống xã hội, giảm thiểu được sức lao động của con người, tăng hiệu quả kinh tế. Đọc sách online cũng là lĩnh vực đang được rất nhiều người quan tâm và được ứng dụng vào thực tế.
    Là những sinh viên đại học ngành công nghệ thông tin, với sự góp ý của các thầy hướng dẫn và cũng xuất phát từ nhu cầu thực tế đó em rất mong muốn có thể tự mình tìm hiểu về công nghệ mới, ngôn ngữ mới PHP, áp dụng framework Laravel trong việc xây dựng website đọc sách online và cho ra đời một sách: “Website sách điện tử online”.
1.2 Mục tiêu của đề tài
- Phân tích được bài toán quản lý đọc sách online, hiểu được quy trình quản lý hệ thống.
- Tìm hiểu cơ sở lý thuyết của hệ quản trị cơ sở dữ liệu MySql, ngôn ngữ lập PHP và web framework Laravel để xây dựng website.
- Phân tích và thiết kế CSDL, các biểu đồ use case và biểu đồ tuần tự.
- Xây dựng Website sách điện tử.
1.3 Giới hạn và phạm vi của đề tài
     Đề tài bước đầu được xây dựng để áp dụng cho việc quản lý và đọc các loại sách trên thị trường online; sau đó có thể phát triển thêm và ứng dụng cho các cửa hàng trong thực tế.
    Đề tài xây dựng sử dụng Công nghệ mới dựa trên ngôn ngữ PHP và phát triển trên web framework Laravel và công cụ lập trình PhpStorm.
1.4 Nội dung thực hiện
   Nội dung thực hiện/ nghiên cứu cụ thể của đề tài:
- Hiểu được cách sử dụng cơ bản của ngôn ngữ php, trong đó có các đối tượng, biến, hàm, phương thức, thuộc tính…
- Tìm hiểu cách sử dụng web framework Laravel trong thiết kế và lập trình website bằng ngôn ngữ PHP.
- Tìm hiểu cách sử dụng phần mềm PhpStorm để thiết kế giao diện và xây dựng các chức năng website thương mại điện tử bằng ngôn ngữ PHP.
- Biết cách sử dụng hệ quản trị CSDL bằng MySql.
- Khảo sát và phân tích yêu cầu quy trình quản lý và bấn hàng online.
- Thiết kế và đặc tả hệ thống.
- Xây dựng cơ sở dữ liệu.
- Lập trình các module của hệ thống.
- Kiểm thử hệ thống.
- Triển khai thực nghiệp hệ thống trên mạng Internet.
1.5 Phương pháp tiếp cận
- Nghiên cứu quy trình quản lý và đọc sách online trên truyền thông và mạng internet, nghiên cứu ngôn ngữ mới PHP, web framework Laravel và mô hình Model - View – Template.
- Sử dụng các phương pháp nghiên cứu: 
o Phương pháp đọc tài liệu.
o Phương pháp phân tích mẫu, thực nghiệm
1.6	Kêt luận chương 1
    Trong chương 1 đã nêu nên lý do chọn đề tài xây dựng “Website sách điện tử”. Cũng như mục tiêu, phạm vi, nội dung và phương pháp thực hiện. Chương tiếp theo là tìm hiểu và giới thiệu về công nghệ mới PHP, web framework Laravel và MySql.


CHƯƠNG 2: CƠ SỞ LÝ THUYẾT
2.1 Giới thiệu về ngôn ngữ PHP
2.1.1 PHP là gì?
    PHP – Hypertext Preprocessor hiểu ra tiếng việt PHP là bộ xử lý siêu văn bản trước đó được viết là Personal Home Pages – trang chủ cá nhân. Đây là ngôn ngữ lập trình được sử dụng chủ yếu trong việc phát triển các ứng dụng bằng một loạt các mã lệnh được viết cho máy chủ hay các mã nguồn mở, dùng trong mục đích phát triển các ứng dụng trang web, các trang web tĩnh hay trang web động. Các tệp lệnh PHP chỉ có thể được diễn giải trên một máy chủ đã cài đặt sẵn PHP. Một tệp lệnh PHP chứa các thẻ PHP được kết thúc bằng đuôi “.php”.
    Ngôn ngữ lập trình PHP phù hợp với các web để có thể dễ dàng ứng dụng vào các trang HTML. Do đó nó được tối ưu hóa cho các ứng dụng web với những tính năng ưu việt như nhanh, gọn, cùng cấu trúc sử dụng tương tự như C hay Java. Đây cũng được xem là ngôn ngữ lập trình khá dễ học và nhanh hơn so với một số ngôn ngữ lập trình khác. Bởi vậy, rất nhanh chóng, PHP trở thành ngôn ngữ lập trình web phổ biến nhất thế giới.
2.1.2 Lịch sử hình thành của PHP
    PHP mà chúng ta biết đến ngày nay là sự kế thừa của một sách có tên là PHP/FI. Được viết bởi Rasmus Lerdorf, bản PHP đầu tiên là một tập hợp đơn giản các Common Gateway Interface (CGI) – một chuẩn giao tiếp giữa client và server – nhị phân viết bằng ngôn ngữ C. Ban đầu, Rasmus sử dụng nó để theo dõi người dùng truy cập vào hồ sơ cá nhân trên internet của mình. Vì vậy, ông đặt tên nó là “Personal Home Page Tools”. Theo thời gian, nhiều tính năng mới được thêm vào, và Rasmus đã viết lại PHP Tools này, tạo ra một công cụ lớn hơn và phong phú hơn về tính năng. Mô hình mới này có khả năng tương tác với cơ sở dữ liệu, và hơn nữa, nó giúp cho người dùng, có thể tạo ra một ứng dụng web động, ví dụ như guestbooks. Thấng 6/1995, Rasmus public mã nguồn của PHP Tools ra cộng đồng, cho phép các nhà phát triển có thể sử dụng và phát triển nó – một cách miễn phí.
    Thấng 9/1995, Rasmus mở rộng PHP, thêm vào công cụ có tên là FI (Forms Interpreter), và một số chức năng như chúng ta biết ngày nay. Nó có các biến kiểu Perl và cú pháp cho phép nhúng mã HTML. Cú pháp này, tương tự Perl, nhưng hạn chế hơn, đơn giản và có phần không phù hợp. Trong thực tế, để nhúng mã lệnh PHP/FI vào một tập tin HTML, các lập trình viên phải sử dụng các comment HTML. Và mặc dù phương pháp này không được hoàn toàn đón nhận, FI vẫn tiếp tục phát triển và đem về lợi nhuận thương mại.
    Vào năm 1997, PHP/FI 2.0, lần viết lại thứ hai của phiên bản C, đã thu hút được hàng ngàn người sử dụng trên toàn thế giới với xấp xỉ 50.000 tên miền đã được ghi nhận là có cài đặt nó, chiếm khoảng 1% số tên miền có trên mạng Internet. Tuy đã có tới hàng nghìn người tham gia đóng góp vào việc tu chỉnh mã nguồn của dự ấn này thì vào thời đó nó vẫn chủ yếu chỉ là dự ấn của một người.
    PHP/FI 2.0 được chính thức công bố vào thấng 11 năm 1997, sau một thời gian khá dài chỉ được công bố dưới dạng các bản beta. Nhưng không lâu sau đó, nó đã được thay thế bởi các bản alpha đầu tiên của PHP 3.0.
    PHP 3.0 là phiên bản đầu tiên cho chúng ta thấy một hình ảnh gần gũi với các phiên bản PHP mà chúng ta được biết ngày nay. Nó đã được Andi Gutmans và Zeev Suraski tạo ra năm 1997 sau khi viết lại hoàn toàn bộ mã nguồn trước đó. Lý do chính mà họ đã tạo ra phiên bản này là do nhận họ thấy PHP/FI 2.0 hết sức yếu kém trong việc phát triển các ứng dụng thương mại điện tử mà họ đang xúc tiến trong một dự ấn của trường đại học. Trong một nỗ lực hợp tác và bắt đầu xây dựng dựa trên cơ sở người dùng đã có của PHP/FI, Andi, Rasmus và Zeev đã quyết định hợp tác và công bố PHP 3.0 như là phiên bản thế hệ kế tiếp của PHP/FI 2.0, và chấm dứt phát triển PHP/FI 2.0.
    Một trong những sức mạnh lớn nhất của PHP 3.0 là các tính năng mở rộng mạnh mẽ của nó. Ngoài khả năng xuất bản cho người dùng cuối một cơ sở hạ tầng chặt chẽ dùng cho nhiều cơ sở dữ liệu, giao thức và API khác nhau, các tính năng mở rộng của PHP 3.0 đã thu hút rất nhiều nhà phát triển tham gia và đề xuất các mô đun mở rộng mới. Hoàn toàn có thể kết luận được rằng đây chính là điểm mấu chốt dẫn đến thành công vang dội của PHP 3.0. Các tính năng khác được giới thiệu trong PHP 3.0 gồm có hỗ trợ cú pháp hướng đối tượng và nhiều cú pháp ngôn ngữ nhất quấn khác.
    Ngôn ngữ hoàn toàn mới đã được công bố dưới một cái tên mới, xóa bỏ mối liên hệ với việc sử dụng vào mục đích cá nhân hạn hẹp mà cái tên PHP/FI 2.0 gợi nhắc. Nó đã được đặt tên ngắn gọn là ‘PHP’, một kiểu viết tắt hồi quy của “PHP: Hypertext Preprocessor”.
    Vào cuối năm 1998, PHP đã phát triển được con số cài đặt lên tới hàng chục ngàn người sử dụng và hàng chục ngàn Web site báo cáo là đã cài nó. Vào thời kì đỉnh cao, PHP 3.0 đã được cài đặt cho xấp xỉ 10% số máy chủ Web có trên mạng Internet.
    PHP 3.0 đã chính thức được công bố vào thấng 6 năm 1998, sau thời gian 9 thấng được cộng đồng kiểm nghiệm.
    Vào mùa đông năm 1998, ngay sau khi PHP 3.0 chính thức được công bố, Andi Gutmans và Zeev Suraski đã bắt đầu bắt tay vào việc viết lại phần lõi của PHP. Mục đích thiết kế là nhằm cải tiến tốc độ xử lý các ứng dụng phức tạp, và cải tiến tính mô đun (modularity) của mã PHP gốc. Những ứng dụng như vậy đã chạy được trên PHP 3.0 dựa trên các tính năng mới và sự hỗ trợ khá nhiều các cơ sở dữ liệu và API của bên thứ ba, nhưng PHP 3.0 đã không được thiết kế để xử lý các ứng dụng phức tạp như thế này một cách có hiệu quả.
    Một “cỗ máy” mới, có tên ‘Zend Engine’ (ghép từ các chữ đầu trong tên của Zeev và Andi), đã đáp ứng được các nhu cầu thiết kế này một cách thành công, và lần đầu tiên được giới thiệu vào giữa năm 1999. PHP 4.0, dựa trên “cỗ máy” này, và đi kèm với hàng loạt các tính năng mới bổ sung, đã chính thức được công bố vào thấng 5 năm 2000, gần 2 năm sau khi bản PHP 3.0 ra đời. Ngoài tốc độ xử lý được cải thiện rất nhiều, PHP 4.0 đem đến các tính năng chủ yếu khác gồm có sự hỗ trợ nhiều máy chủ Web hơn, hỗ trợ phiên làm việc HTTP, tạo bộ đệm thông tin đầu ra, nhiều cách xử lý thông tin người sử dụng nhập vào bảo mật hơn và xuất bản một vài các cấu trúc ngôn ngữ mới. Với PHP 4, số nhà phát triển dùng PHP đã lên đến hàng trăm nghìn và hàng triệu site đã công bố cài đặt PHP, chiếm khoảng 20% số tên miền trên mạng Internet.
    Nhóm phát triển PHP cũng đã lên tới con số hàng nghìn người, và hàng nghìn người khác tham gia vào các dự ấn có liên quan đến PHP như PEAR, PECL và tài liệu kĩ thuật cho PHP.
    Sự thành công hết sức to lớn của PHP 4.0 đã không làm cho nhóm phát triển PHP tự mãn.Cộng đồng php đã nhanh chóng giúp họ nhận ra những yếu kém của PHP 4 đặc biệt với khả năng hỗ trợ lập trình hướng đối tượng (OOP), xử lý XML, không hỗ trợ giao thức máy khách mới của MySQL 4.1 và 5.0, hỗ trợ dịch vụ web yếu. Những điểm này chính là mục đích để Zeev và Andi viết Zend Engine 2.0, lõi của PHP 5.0. Một thảo luận trên Slashdot.org đã cho thấy việc phát triển PHP 5.0 có thể đã bắt đầu vào thời điểm thấng 12 năm 2002 nhưng những bài phỏng vấn Zeev liên quan đến phiên bản này thì đã có mặt trên mạng Internet vào khoảng thấng 7 năm 2002. Ngày 29 thấng 6 năm 2003, PHP 5 Beta 1 đã chính thức được công bố để cộng đồng kiểm nghiệm. Đó cũng là phiên bản đầu tiên của Zend Engine 2.0. Phiên bản Beta 2 sau đó đã ra mắt vào thấng 10 năm 2003 với sự xuất hiện của hai tính năng rất được chờ đợi: Iterators, Reflection nhưng namespaces một tính năng gây tranh cãi khác đã bị loại khỏi mã nguồn. Ngày 21 thấng 12 năm 2003: PHP 5 Beta 3 đã được công bố để kiểm tra với việc phân phối kèm với Tidy, bỏ hỗ trợ Windows 95, khả năng gọi các hàm PHP bên trong XSLT (Extensible Stylesheet Language Transformation), sửa chữa nhiều lỗi và thêm khá nhiều hàm mới. PHP 5 bản chính thức đã ra mắt ngày 13 thấng 7 năm 2004 sau một chuỗi khá dài các bản kiểm tra thử bao gồm Beta 4, RC 1, RC2, RC3. Mặc dù coi đây là phiên bản sản xuất đầu tiên nhưng PHP 5.0 vẫn còn một số lỗi trong đó đấng kể là lỗi xác thực HTTP.
    Ngày 14 thấng 7 năm 2005, PHP 5.1 Beta 3 được PHP Team công bố đấnh dấu sự chín muồi mới của PHP với sự có mặt của PDO, một nỗ lực trong việc tạo ra một hệ thống API nhất quấn trong việc truy cập cơ sở dữ liệu và thực hiện các câu truy vấn. Ngoài ra, trong PHP 5.1, các nhà phát triển PHP tiếp tục có những cải tiến trong nhân Zend Engine 2, nâng cấp mô đun PCRE lên bản PCRE 5.0 cùng những tính năng và cải tiến mới trong SOAP, streams.
2.1.3 Các đặc điểm của PHP
- Mã nguồn mở: PHP là một sách mã nguồn mở (Open – source) nên việc cài đặt và tùy biến PHP là miễn phí và tự do. Vì có ưu thế nguồn mở nên PHP có thể được cài đặt trên hầu hết các Web Server thông dụng hiện nay như Apache, IIS…
- Tính cộng đồng của PHP: Là một ngôn ngữ nguồn mở cùng với sự phổ biến của PHP thì cộng đồng PHP được coi là khá lớn và có chất lượng. Với cộng đồng phát triển lớn, việc cập nhật các bản vá lỗi phiên bản hiện tại cũng như thử nghiệm các phiên bản mới khiến PHP rất linh hoạt trong việc hoàn thiện mình. Cộng đồng hỗ trợ, chia sẽ kinh nghiệm của PHP cũng rất dồi dào. Với rất nhiều diễn đàn, blog trong và ngoài nước nói về PHP đã khiến cho quá trình tiếp cận của người tìm hiểu PHP được rút ngắn nhanh chóng.
- Thư viện phong phú: Ngoài sự hỗ trợ của cộng đồng, thư viện script PHP cũng rất phong phú và đa dạng. Từ những cái rất nhỏ như chỉ là 1 đoạn code, 1 hàm (PHP.net…) cho tới những cái lớn hơn như Framework (Zend, CakePHP, CogeIgniter, Symfony…) ,ứng dụng hoàn chỉnh (Joomla, WordPress, PhpBB…). Với thư viện code phong phú, việc học tập và ứng dụng PHP trở nên rất dễ dàng và nhanh chóng. Đây cũng chính là đặc điểm khiến PHP trở nên khá nổi bật và cũng là nguyên nhân vì sao ngày càng có nhiều người sử dụng PHP để phát triển web.
- Hỗ trợ kết nối nhiều hệ cơ sở dữ liệu: Nhu cầu xây dựng web có sử dụng cơ sở dữ liệu là một nhu cầu tất yếu và PHP cũng đáp ứng rất tốt nhu cầu này. Với việc tích hợp sẵn nhiều Database Client trong PHP đã làm cho ứng dụng PHP dễ dàng kết nối tới các hệ cơ sở dữ liệu thông dụng. Việc cập nhật và nâng cấp các Database Client đơn giản chỉ là việc thay thế các Extension của PHP để phù hợp với hệ cơ sở dữ liệu mà PHP sẽ làm việc. Một số hệ cơ sở dữ liệu thông dụng mà PHP có thể làm việc là: MySQL, MS SQL, Oracle, Cassandra…
- Lập trình hướng đối tượng: Ngày nay, khái niệm lập trình hướng đối tượng (OOP) đã không còn xa lạ với lập trình viên. Với khả năng và lợi ích của mô hình lập trình này nên nhiều ngôn ngữ đã triển khai để hỗ trợ OOP. Từ phiên bản PHP 5, PHP đã có khả năng hỗ trợ hầu hết các đặc điểm nổi bật của lập trình hướng đối tượng như là Inheritance, Abstraction, Encapsulation, Polymorphism, Interface, Autoload…. Với việc ngày càng có nhiều Framework và ứng dụng PHP viết bằng mô hình OOP nên lập trình viên tiếp cận và mở rộng các ứng dụng này trở nên dễ dàng và nhanh chóng.
- Tính bảo mật: Bản thân PHP là mã nguồn mỡ và cộng đồng phát triển rất tích cực nên có thể nói PHP khá là an toàn. PHP cũng xuất bản nhiều cơ chế cho phép bạn triển khai tính bảo mật cho ứng dụng của mình như session, các hàm filter dữ liệu, kỹ thuật ép kiểu, thư viện PDO (PHP Data Object) để tương tác với cơ sở dữ liệu an toàn hơn. Kết hợp với các kỹ thuật bảo mật ở các tầng khác thì ứng dụng PHP sẽ trở nên chắc chắn hơn và đảm bảo hoạt động cho website.
- Khả năng mở rộng cho PHP: Bằng việc xây dựng trên nền ngôn ngữ C và là mã nguồn mở nên khả năng mở rộng cho ứng dụng PHP có thể nói là không có giới hạn. Với thư viện phong phú và khả năng mở rộng lớn, ứng dụng PHP có thể tương tác với hầu hết các loại ứng dụng phổ biến như xử lý hình ảnh, nén dữ liệu, mã hóa, thao tác file PDF, Office, Email, Streaming… Bạn hoàn toàn có thể tự xây dựng cho mình các Extension để tối ưu, bổ sung các chức năng cho PHP cũng như tối ưu luôn Core của PHP để phục vụ cho các mục đích mở rộng website của mình.
2.1.4 Ứng dụng của ngôn ngữ PHP
- Hiện nay, PHP có rất nhiều các CMS (gọi là mã mở nguồn). Vì thế, ngôn ngữ lập trình PHP rất đa dạng và nó sẽ giúp bạn thiết kế dễ dàng các web bấn hàng, tin tức hay blog cá nhân cho tới những trang web giới thiệu công ty, web giới thiệu sách,…
- PHP còn có thể giúp người dùng thực hiện các hàm hệ thống. Ví dụ như từ các file của một hệ thống cụ thể, PHP có thể tạo, mở, đọc, ghi và đóng chúng.
- Cùng với đó, khi tìm hiểu PHP là gì, các bạn sẽ nhận thấy rằng PHP còn có thể xử lý các form một cách nhanh chóng và đơn giản như thu thập dữ liệu từ file hay lưu dữ liệu vào cùng một file,…
- Khi sử dụng ngôn ngữ lập trình PHP, người dùng còn có thể tự thêm, sửa hoặc xóa các phần tử bên trong của Database của mình. Ngoài ra, PHP còn có khả năng thiết lập Cookie và truy cập các biến Cookie. Đồng thời, PHP cũng giúp bạn hạn chế được số lượng người sử dụng truy cập vào trang web của riêng bạn.
2.2 Giới thiệu về web Framework  Laravel
2.2.1 Framework là gì ?
    Framework là một thư viện với các hàm được xây dựng sẵn phục vụ cho công việc lập trình website. Các lập trình viên phát triển web sử dụng các framework để hỗ trợ công việc lập trình được nhanh hơn, tiết kiệm thời gian và đảm bảo bảo mật hơn cho hệ thống phát triển. Thường thì một Framework PDP được xây dựng trên mô hình MVC.
    M là viết tắt của Model: Các thao tác làm việc với cơ sở dữ liệu, Model xử lý dữ liệu được yêu cầu từ Controller và trả về kết quả truy xuất.
    V là từ viết tắt của View: Chức năng hiển thị các thành phần của điều hướng của controller đến với người dùng.
    C là từ viết tắt của Controller: Tức là điều khiển, controller nhận lệnh từ người dùng sau đó xử lý, nếu có thao tác đến cơ sở dữ liệu thì gửi yêu cầu qua Model truy vấn dữ liệu sau đó truyền đến View để show dữ liệu ra màn hình.
    
    
      
2.2.2 Framework Laravel là gì?
    Laravel là 1 open source, là một framework dùng để xây dựng web application, được thiết kế dựa trên mô hình MVC (Model, Controller, View ), toàn bộ source code được đặt trên github. Theo kết qủa khảo sát của các Developer vào thấng 12 năm 2013, thì Laravel Framework đứng top 1 một trong những framework phổ biến nhất, tiếp sau là Phalcon, Symfony2, CodeIgniter và các framework khác. Thấng 8 năm 2014, Laravel Framework được xem như là một dự ấn PHP phổ biến nhất trên Github.
    Cho tới năm 2015, thì Framework laravel hiện đang đứng top 1 thế giới về mức độ phổ biến và ưu dùng. Được cộng đồng hỗ trợ phát triển mạnh mẽ. Thấng 8 năm 2014, Laravel Framework được xem như là một dự ấn PHP phổ biến nhất trên Github.
    Sau nhiều lần được cộng đồng Laravel thế giới hỗ trợ phát triển thì phiên bản mới nhất hiện nay là Laravel 7.x.
2.2.3 Ưu điểm của Larravel framework
- Sử dụng các tính năng mới nhất của PHP: Một trong những tính năng làm cho PHP Lararel framework trở nên nổi bật hơn tất cả đó là nó sử dụng tất cả các tính năng mới của PHP. Các framework khác không tận dụng được điểu này. Sử dụng Laravel 5 bạn sẽ sở hữu một số tính năng mới nhất mà PHP xuất bản, đặc biệt là trong Namespaces, Interfaces, Overloading, Anonymous functions và Shorter array syntax. Đã có rất nhiều .bộ CMS nổi bật được viết trên nền Laravel framework ra đời, từ những bộ CMS đơn giản nhất đến những bộ "siêu mạnh", từ mã nguồn mở đến thương mại.
- Tài liệu tuyệt vời: Tài liệu của Laravel rất thân thiện với nhà phát triển. Tất cả các phiên bản của Laravel được phát hành cùng với các tài liệu phù hợp, bạn sẽ tìm thấy những giải thích chi tiết về coding style, methods và classes.
- Tích hợp với dịch vụ mail: Các ứng dụng web bắt buộc phải thông báo cho người dùng về các deal và offer mới. Đăng ký người dùng mới cũng rất quan trọng (nghĩa là thông báo cho người dùng mới khi anh ấy/ cô ấy đăng ký). Framework được trang bị API sạch trên thư viện SwiftMailer. Và có các driver cho SMTP, Mailgun, SparkPost, Mandrill, PHP's "mail" function, Amazon SES, và "sendmail" giúp bạn gửi thư qua các dịch vụ dựa trên đám mây hoặc dịch vụ local.
- Hỗ trợ cache backend phổ biến: Laravel framework hỗ trợ các cache backend như Memcached và Redis out-of-the-box. Bạn cũng có thể tùy chỉnh nhiều cấu hình cache.
- Công cụ tích hợp do dòng lệnh - Artisan: Các nhà phát triển thường thấy tẻ nhạt khi thực hiện các nhiệm vụ lập trình lặp đi lặp lại vì chúng rất tốn thời gian. Công cụ dòng lệnh có tên Artisan giúp họ tạo khung code và quản lý hệ thống cơ sở dữ liệu hiệu quả. Artisan giúp tạo các tệp MVC cơ bản và quản lý tài sản, bao gồm cả các cấu hình tương ứng của chúng.
- Gói và nguồn lực có sẵn: Bạn sẽ được hưởng lợi ích từ npm package và bower package bằng cách kết hợp framework với Gulp và elixir, giúp trong việc sửa đổi tài nguyên. Việc tích hợp này sẽ giải quyết các phụ thuộc và là nguồn gói đấng tin cậy nhất trong thế giới PHP.
- Giảm chu kỳ phát triền sách: Bạn có thể giảm đấng kể chu kỳ phát triển sách vì framwork giúp tích hợp nhanh hơn, bên cạnh đó là cộng đồng hỗ trợ rất lớn - Laracasts.
- Container IoC: Còn được gọi là Inversion of Control, đây là một phương thức để tạo các đối tượng mới mà không phải khởi động bất kỳ thư viện bên ngoài nào. Nói cách khác, bạn có thể truy cập các đối tượng này từ bất cứ nơi nào bạn đang mã hóa, bạn sẽ không còn gặp khó khăn với các cấu trúc nguyên khối không linh hoạt.
- Reverse routing: Đây là một tính năng rất hữu ích trong framwork, bạn có thể tạo liên kết đến các route được đặt tên. Vì vậy, khi tạo các liên kết, bạn chỉ cần sử dụng tên của bộ định tuyến, framework sẽ tự động chèn URL chính xác. Nếu bạn cần thay đổi các route trong tương lai, những thay đổi sẽ tự động được thực hiện ở mọi nơi.
- Eloquent ORM: Đây là một trong những tính năng tốt nhất của Laravel, xuất bản một triển khai ActiveRecord đơn giản và hiệu quả, làm việc với cơ sở dữ liệu. Các mô hình bạn tạo trong MVC sẽ có một bảng tương ứng trong cơ sở dữ liệu. ORM có các mối quan hệ, nếu bạn thao tác một bảng trong cơ sở dữ liệu, bạn cũng sẽ quản lý các dữ liệu liên quan. Các mối quan hệ đó là: one-to-one, one-to-many, many-to-many, has-many-through, polymorphic, và many-to-many polymorphic.
2.3 Hệ quản trị Cơ sở dữ liệu MySql
2.3.1 MySQL là gì ?
    MySQL là một cơ sở dữ liệu quan hệ miễn phí hiện nay đã được hãng Oracle mua lại từ hãng Sun. Nó thường được sử dụng kết hợp với PHP để lưu trữ dữ liệu của ứng dụng website khi người dùng thao tác trên website của chúng ta. SQL Server - một hệ cơ sở dữ liệu quan hệ của Microsoft - và MySQL được xây dựng giống nhau về tư tưởng, kiến trúc.
▪ Database: là một CSDL (cơ sở dữ liệu), trong CSDL bao gồm các table.
▪ Table: là bảng dữ liệu, trong table bao gồm các field.
▪ Field: là trường dữ liệu.
2.3.2 Lịch sử phát triển của MySQL
- Công ty Thuy Điển MySQL AB phát triển MySQL vào năm 1994.
- Phiên bản đầu tiên của MySQL phát hành năm 1995.
- Công ty Sun Microsystems mua lại MySQL AB trong năm 2008.
- Năm 2010 tập đoàn Oracle thâu tóm Sun Microsystems. Ngay lúc đó, đội ngũ phát triển của MySQL tách MySQL ra thành 1 nhấnh riêng gọi là MariaDB. Oracle tiếp tục phát triển MySQL lên phiên bản 5.5.
- 2013 MySQL phát hành phiên bản 5.6.
- 2015 MySQL phát hành phiên bản 5.7.
- MySQL đang được phát triển lên phiên bản 8.0.
- MySQL hiện nay có 2 phiên bản miễn phí (MySQL Community Server) và có phí (Enterprise Server).
- MySQL là một hệ quản trị cơ sở dữ liệu quan hệ rất phổ biến hiện nay.
▪ Sơ lược các tính năng cơ bản của Laravel framework	
    Bundles: Ở laravel phiên bản 3.x, xuất bản một hệ thống đóng gói các module, với rất nhiều tính năng đi kèm.
    Composer: Ở laravel phiên bản 4.x, được sử dụng như một công cụ quản lý với tính năng như thêm các gói cài đặt, các chức năng PHP phụ trợ cho Laravel có trong kho Packagist.
    Eloquent ORM (object relation mapping): ấnh xạ các đối tượng và quan hệ cơ sở dữ liệu, xuất bản các phương thức nội bộ để thực thi đồng thời cũng bổ sung các tính năng hạn chế về mối quan hệ giữa các đối tượng cơ sở dữ liệu. Eloquent ORM trình bày các bảng trong cơ sở dữ liệu dưới dạng các lớp, xuất bản thêm lựa chọn truy cập cơ sở dữ liệu trực tiếp mới mẻ hơn, chuyên nghiệp hơn.
    Application logic: Là một phần của phát triển ứng dụng, được sử dụng bởi bộ điều khiển controllers.
    Routes: Định nghĩa mối quan hệ giữa các đường dẫn (url), các liên kết (link) . Khi một liên kết được tạo ra bằng cách sử dụng tên của routes, thì một định danh liên kết thống nhất sẽ được tạo ra bởi laravel.
    Restful Controller: xuất bản các tùy chọn để tách các logic phía sau các request HTTP POST, GET
    Class auto loading: xuất bản việc tải tự động các class trong PHP, mà không cần include các class vào. Tùy thuộc vào yêu cầu các class cần thiết sẽ được nạp vào, hạn chế các class không cần thiết.
    View:  chưa các mã html, hiển thị dữ liệu được chỉ định bởi controller
    Migrations: xuất bản một hệ thống kiểm soát các phiên bản lược đồ cơ sở dữ liệu (database cheme), làm cho web ứng dụng có khả năng tương tác phù hợp những thay đổi logic, các đoạn mã code của ứng dụng và những thay đổi cần thiết trong việc bố trícơ sở dữ liệu, triển khai nới lỏng và cập nhật các ứng dụng.
    Unit Testing : đóng một vai trò quan trọng trong Laravel, Unit testting chứa rất nhiều các hệ thống unit testing, giúp phát hiện và ngăn chặn lỗi trong khuôn khổ nhất định. Unit Testing có thể được chạy thông qua tiện ích command-line.
    Automatic pagination : Tính năng tự động phân trang được tích hợp vào Laravel giúp đơn giản hóa các nhiệm vụ thực hiệnphân trang so với các phương pháp thông thường.
2.3.3 Lợi ích của MySQL
- MySQL là CSDL có tốc độ khá cao, ổn định và khá dễ sử dụng có thể hoạt động được trên khá nhiều hệ điều hành.
- Tính bảo mật mạnh và sử dụng được trên nhiều ứng dụng mà MySQL còn hoàn toàn được sử dụng miễn phí..
- MySQL không chỉ dừng lại ở bổ trợ cho PHP và Perl, mà nó còn bổ trợ cho nhiều ngôn ngữ khác, Nó là nơi để lưu trữ thông tin trên các trang web được viết bằng Perl hoặc PHP.
2.4 HTML
- HTML (Hyper Text Markup Languages – tiếng Anh) hay còn gọi là “Ngôn ngữ đánh dấu siêu văn bản” nó được sử dụng để tạo nên các trang web thông qua các thẻ đánh dấu. Do vậy HTML không phải là một ngôn ngữ lập trình mà nó chỉ là ngôn ngữ đánh dấu. Phần mở rộng của tập tin HTML thường là .html hoặc .htm. Các trình duyệt sẽ đọc tập tin HTML và hiển thị chúng dưới dạng trang web. Các thẻ HTML sẽ được ẩn đi, chỉ hiển thị nội dung văn bản và các đối tượng khác: hình ảnh, media. Với các trình duyệt khác nhau đều hiển thị một tập HTML với 1 kết quả nhất định. Các trang HTML được gửi đi qua mạng internet theo giao thức HTTP.
- HTML không những cho phép nhúng thêm các đối tượng hình ảnh, âm thanh mà còn cho phép nhúng các kịch bản vào trong đó như các ngôn ngữ kịch bản như JavaScript để tạo hiệu ứng động cho trang web. Để trình bày trang web hiệu quả hơn thì HTML cho phép sử dụng kết hợp với CSS. HTML chính thức là chuẩn của W3C từ tháng 1 năm 97 với phiên bản HTML 3.2.trước đó thì HTML xuất bản theo chuẩn của RFC.
- HTML được tương thích vỡi mọi hệ điều hành cùng các trình duyệt của nó. Khả năng dễ học, dễ viết là một ưu điểm của HTML. Không những vậy việc soạn thảo đòi hỏi hết sức đơn giản và thông thường sử dụng notepad là đã đủ. HTML vẫn tiếp tục được phát triển, phiên bản hiện tại là HTML 5 – một phiên bản nâng cấp của XHTML. HTML cải tiến khá nhiều đặc biệt hỗ trợ mạnh mẽ các phần tử multimedia mà không cần các plugin. HTML5 nói chung mãnh mẽ hơn nhiều không chỉ về tốc độ và độ thích ứng cao mà chính là khả năng hỗ trợ API (Application Programming Interface - giao diện lập trình ứng dụng) và DOM (Document Object Model – mô hình đối tượng tài liệu hay cây cấu trúc dữ liệu).
2.5 CSS
- CSS - Cascading Style Sheet dùng để trình bày các tài liệu viết bằng HTML hoặc XHTML . Ngoài ra ngôn ngữ định kiểu theo tầng cũng có thể dùng cho XML, SVG, XUL,.. Các đặc điểm kĩ thuật của CSS được duy trì bởi tổ chức W3C.
- CSS có cấu trúc đơn giản và sử dụng các từ tiếng Anh để đặt tên cho các thuộc tính.CSS khi sử dụng có thể viết trực tiếp xen lẫn vào mã HTML hoặc tham chiếu từ một file css riêng biệt. Và hiện nay CSS thường được viết riêng thành một tập tin với mở rộng là .css
- Chính vì vậy mà các trang web có sử dụng CSS thì mã HTML sẽ trở nên ngắn gọn và trong sáng hơn. Ngoài ra có thể sử dụng 1 tập tin CSS đó cho nhiều website tiết kiệm rất nhiều thời gian và công sức. Một đặc điểm quan trọng đó là tính kế thừa của CSS do đó sẽ giảm được số lượng dòng code mà vẫn đạt được yêu cầu.
- Tuy nhiên đối với CSS thì các trình duyệt hiểu theo kiểu riêng của nó. Do vậy việc trình bày 1 nội dung trên các trình duyệt khác nhau là không thống nhất
2.6 JavaSripts, Jquery
JavaScript
- JavaScript là một ngôn ngữ lập trình kịch bản dựa trên các đối tượng, được phát triển từ các ý niệm nguyên mẫu. Được sử dụng rộng rãi trong các trang web, nó được phát triển bởi Brendan Eich của hãng truyền thông Nestcape, đầu tiên tên gọi là Mocha, sau đổi thành LiveScript, và cuối cùng mới có tên gọi là JavaScript. Cú pháp của JavaScript tương tự C, giống Selt hơn là Java. Nó sử dụng có 2 dạng: nhúng trực tiếp vào mã html, hoặc tham chiếu từ một tập tin với phần mở rộng là *.js .
- Phiên bản JavaScript mới nhất là 1.5, tương ứng với các ECMA-262- phiên bản chuẩn hóa của javaScript. Trình duyệt Mozilla 1.8 beta 1 hỗ trợ không đầy đủ cho E4X- phần mở rộng cho JavaScript làm việc với XML, được chuẩn hóa trong ECMA-357.
Jquery
- JQuery là một thư viện JavaScript mở để tạo ra các hiệu ứng có thể tương tác trực tiếp với người dùng một cách nhanh chóng, dễ dàn và hiệu quả hơn nhiều lần với việc sử dụng JavaScript thuần. Để sử dụng ta cần khai báo thư viện của jquery giống như khai báo một tập tin java script.
- Cách khai báo sử dụng từ máy chủ google.
- <scriptsrc="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"type="text/javascript"></script>
- Hoặc bạn có thể tải về thư viện Jquery từ chính trang chủ của nó: http://jquery.com JQuery có đã phát hành các phiên bản khác nhau, phiên bản hiện tại là phiên bản 1.5.2
- Hiện nay Jquery sử dụng rất nhiều trong các ứng dụng web. Với jquery cho phép các nhà phát triển dễ dàng chia sẻ plugin với nhau. Đó là các thư viện jquery được các nhà phát triển sử dụng và chia sẻ với người khác.
- Để tránh tình trạng quá tải tính năng JQuery cho phép người dung tạo và sử dụng các plugin nếu cần. Cách tạo 1 plugin không quá phức tạp và được hướng dẫn cụ thể, chính vì thế mà cộng đồng sử dụng JQuery đã tạo ra rất nhiều các plugin sang tạo và hữu dụng.
- Bạn hoàn toàn có thể triển khai các ứng dụng với Jquery mà không cần phải tìm hiểu quá nhiều về Jquery. Thật đơn giản là sử dụng các Plugin được các nhà phát triển và cộng đồng sử dụng xây dựng và chia sẻ.
2.7 Kết luận chương 2
    Trong chương 2 của đồ ấn đã nên được nội dung lý thuyết quá trình tìm hiểu công nghệ mới về ngôn ngữ lập trình PHP, web framwork Laravel và hệ quản trị cơ sở dữ liệu MySql. Chương tiếp theo sẽ tiến hành xây dựng “Website sách điện tử”



CHƯƠNG 3: XÂY DỰNG WEBSITE SÁCH ĐIỆN TỬ
3.1. Khảo sát và phân tích yêu cầu
3.1.1 Thông tin liên hệ
- Bộ môn CNPM – Khoa Công Nghệ Thông Tin – Trường ĐHSPKT Hưng Yên - Hưng Yên.
3.1.2 Thời gian và địa điểm khảo sát
- Tham khảo một số website đọc sách online trên mạng như: sachhay.com, sachvuimoingay.com…
3.1.3 Thông tin dự án
- Tên dự ấn: “XÂY DỰNG WEBSITE SÁCH ĐIỆN TỬ”
- Người thực hiện: Đỗ Mạnh Quyết.
- Người hướng dẫn: Thạc sĩ Trần Đỗ Thu Hà.
- Ngày thực hiên: 02/03/2020.
- Dự kiến ngày hoàn thành: 30/06/2020.
3.1.4 Yêu cầu của hệ thống sau khảo sát
    Bảng 3. 1: Yêu cầu khách hàng
STTTên yêu cầu1Đăng nhập vào hệ thống quản trị2Hiển thị thông tin loại sách lên thanh menu của website 3Hiển thị nội dung của website như sách mới nhất…4Hiển thị thông tin chi tiết về sách5Hiển thị thông tin kết quả tìm kiếm6Chức năng thống kê báo cáo tổng số sách trên website7Hiển thị thông tin chi tiết sách khi chọn xem một sach nào đó8Hiển thị trang AboutUs giới thiệu về web9Quản lý dữ liệu khách hàng10Quản lý sách11Quản lý loại sách12 Quản lý nhà xuất bản

3.1.5 Mô tả yêu cầu của hệ thống
❖ Các yêu cầu chức năng
    Bảng 3. 2: Các yêu cầu chức năng
STTTên yêu cầuMô tả yêu cầuICác yêu cầu chức năng nghiệp vụLà các chức năng của phần mềm tương ứng với các công việc trong thế sách.1Module sáchHiển thị thông tin và phân loại sách trong gian hàng. Sách hiển thị lên website được hiển thị đầy đủ thông tin về sách đó như: Hình ảnh, tên sách, tác giả, nhà xuất bản, ...2Module đăng nhập hệ thống 
Mỗi khách hàng giao dịch website có quyền đăng ký một tài khoản riêng. Tài khoản này được sử dụng khi hệ thống yêu cầu. Mọt tài khoản khách hàng đăng ký sẽ lưu trữ các thông tin của khách hàng.4Module tìm kiếm sách, tin tức, tư vấn
+ Trang tin tức: Tư vấn cho khách hàng muốn tìm hiểu về sách
+ Trang giới thiệu: Giới thiệu các thông tin về cửa hàng
+ Trang liên hệ: Khách hàng có thể liên hệ nhân viên về các thắc mắc, ý kiến của mình.5Module quản lý sách, đơn hàng
Người quản trị có thể cập nhật thông tin các mặt hàng, loại hàng.6Module quản lý danh mụcLà quản lý thông tin về các danh mục sách.7Báo cáo, thống kêQuản lý thống kê sáchIICác yêu cầu chức năng hệ thốngLà các chức năng của phần mềm được phát sinh thêm khi thực hiện một công việc trên máy tính.1Quản lý hệ thống+ Quản lý thông tin tài khoản
+ Đổi mật khẩu
+ Thêm tài khoản2Quản lý sách+ Quản lý danh mục sách
+ Quản lý thông tin
+ Quản lý đánh giá3Báo cáo+ Báo cáo, thống kê sách4Quản lý tài khoản+ Quản lý người dùng
❖ Các yêu cầu phi chức năng
    Bảng 3. 3: Các yêu cầu phi chức năng
STTTên yêu cầuMô tả yêu cầu1Giao diệnGiao diện hệ thống phải dễ sử dụng, trực quan, thân thiện với mọi người dùng.2Tốc độ xử lýHệ thống phải xử lý nhanh chóng và chính xác.3Bảo mật dữ liệuTính bảo mật và độ an toàn cao.4Tương thíchTương thích với đa phần các trình duyệt web hiện tại.
3.2 Phân tích thiết kế với UML
3.2.1 Biểu đồ Use case
❖ Xác định các tác nhân và tình huống sử dụng Use case 
   Qua khảo sát hiện trạng thực tế, kết hợp với, việc tham khảo tài liệu và phân tích ý kiến của người dùng, hệ thống quản lý đồ ấn có các tác nhân sau:
    Bảng 3. 4: Xác định tác nhân
STTTác NhânDiễn Giải1Những người thuộc nhóm quyền này có thể tạo tài khoản người dùng và phẩm quyền cho từng tài khoản đó2Những người thuộc quyền này sẽ được Admin cấp cho tài khoản và được giới hạn quyền hạn sử dụng.3Những người thuộc nhóm quyền này có thê truy xuất vào trang web đọc sách và thực hiện việc xem, tìm kiếm thông tin.
❖ Các quyền sử dụng 
    Bảng 3. 5: Xác định quyền sử dụng
STTTác nhân chínhTên Use case1Admin thực hiện các chức năng như quản lý danh mục sách, quản lý thông tin, quản lý đấnh giá, quản lý sách, quản lý admin, quản lý khách hàng, quản lý nhà xuất bản, quản lý thống kê. Để thực hiện chức năng này admin phải đăng nhập.2Employeethực hiện các chức năng như quản lý danh mục sách, quản lý thông tin, quản lý đấnh giá, quản lý sách, quản lý nhà xuất bản. Để thực hiện chức năng này nhân viên phải đăng nhập.3Customercó thể thực hiện các chức năng như tìm kiếm sách, xem thông tin chi tiết của sách, gửi thông tin liên hệ.










❖ Biểu đồ Use Case tổng quát

    Hình 3- 1: Biểu đồ Use case cho hệ thống
❖ Biểu đồ Use Case “đăng nhập”

    Hình 3- 2: Biểu đồ Use Case dăng nhập
- Tác nhân: Admin, nhân viên
- Mô tả: Use case cho admin, nhân viên đăng nhập vào hệ thống.
- Điều kiện trước: admin, nhân viên chưa đăng nhập vào hệ thống.
- Dòng sự kiện chính:
+ Chọn chức năng đăng nhập.
+ Giao diện đăng nhập hiển thị.
+ Nhập email, mật khẩu vào giao diện đăng nhập.
+ Hệ thống kiểm tra email và mật khẩu nhập của admin, nhân viên. Nếu nhập sai email hoặc mật khẩu thì chuyển sang dòng sự kiện rẽ nhấnh A1. Nếu nhập đúng thì hệ thống sẽ chuyển tới trang quản trị.
- Use case kết thúc.
- Dòng sự kiện rẽ nhấnh:
+ Dòng rẽ nhấnh A1: admin, nhân viên đăng nhập không thành công.
+ Hệ thống thông báo quá trình đăng nhập không thành công do sai email hoặc mật khẩu.
+ Chọn nhập lại hệ thống yêu cầu nhập lại email, mật khẩu.
- Use case kết thúc.
- Hậu điều kiện: admin, nhân viên đăng nhập thành công và có thể sử dụng các chức năng tương ứng trong trang quản trị.
❖ Biểu đồ Use Case “Quản lý danh mục sách”

    Hình 3- 3: Biểu đồ Use Case quản lý danh mục sách
- Tác nhân: Admin, nhân viên
- Mô tả: use case cho phép xem, thêm, sửa, xóa danh mục sách trong hệ thống.
- Điều kiện trước: admin, nhân viên đã đăng nhập vào hệ thống.
- Dòng sự kiện chính: Người sử dụng chọn kiểu tác động: thêm, sửa, xóa thông tin danh mục sách.
+ Thêm danh mục sách: chọn thêm danh mục sách, hệ thống hiển thị giao diện nhập thông tin danh mục sách, người sử dụng nhập thông tin danh mục sách, nếu thành công hệ thống đưa ra thông báo, nếu sai thực hiện dòng rẽ nhấnh A1, lưu thông tin vào danh sách danh mục sách.
+ Sửa thông tin danh mục sách: hệ thống hiển thị danh sách danh mục sách, chọn danh mục sách cần sửa, nhập các thông tin cần thay đổi, nếu việc thay đổi thông tin thành công hệ thống sẽ đưa ra thông báo, nếu sai thì thực hiện dòng rẽ nhấnh A1, lưu thông tin danh sách danh mục sách.
+ Xóa thông tin danh mục sách: hệ thống hiển thị danh sách danh mục sách, chọn danh mục sách cần xóa, nếu việc thay đổi thông tin thành công hệ thống sẽ đưa ra thông báo, nếu sai thì thực hiện dòng rẽ nhấnh A1, lưu thông tin danh sách danh mục sách.
- Use case kết thúc.
- Dòng sự kiện rẽ nhấnh A1: hệ thống thông báo việc nhập dữ liệu không hợp lệ, nhập lại thông tin, quay lại bước 1 của dòng sự kiện chính.
- Hậu điều kiện: các thông tin về danh mục sách được cập nhật trong cơ sở dữ liệu. 
    
    
    
    
    
    
    
    
    
❖ Biểu đồ Use Case “Quản lý sách”

    Hình 3- 4: Biểu đồ Use case “Quản lý sách”
- Tác nhân: Admin, nhân viên
- Mô tả: use case cho phép xem, thêm, sửa, xóa thông tin sách trong hệ thống.
- Điều kiện trước: admin, nhân viên đã đăng nhập vào hệ thống.
- Dòng sự kiện chính: Người sử dụng chọn kiểu tác động: thêm, sửa, xóa thông tin sách.
+ Thêm thông tin sách: chọn thêm sách, hệ thống hiển thị giao diện nhập thông tin sách, người sử dụng nhập thông tin sách như tên sách, hạn sách,… nếu thành công hệ thống đưa ra thông báo, nếu sai thực hiện dòng rẽ nhấnh A1, lưu thông tin vào danh sách sách.
+ Sửa thông tin sách: hệ thống hiển thị danh sách sách, chọn sách cần sửa, nhập các thông tin cần thay đổi, nếu việc thay đổi thông tin thành công hệ thống sẽ đưa ra thông báo, nếu sai thì thực hiện dòng rẽ nhấnh A1, lưu thông tin danh sách sách.
+ Xóa thông tin sách: hệ thống hiển thị danh sách sách, chọn sách cần xóa, nếu việc thay đổi thông tin thành công hệ thống sẽ đưa ra thông báo, nếu sai thì thực hiện dòng rẽ nhấnh A1, lưu thông tin danh sách sách.
- Use case kết thúc
- Dòng sự kiện rẽ nhấnh A1: hệ thống thông báo việc nhập dữ liệu không hợp lệ, nhập lại thông tin, quay lại bước 1 của dòng sự kiện chính.
- Hậu điều kiện: các thông tin về sách được cập nhật trong cơ sở dữ liệu.
❖ Biểu đồ Use Case “Quản lý chương”

    Hình 3- 5: Biểu đồ Use case “Quản lý chương”
- Tác nhân: Admin, nhân viên
- Mô tả: use case cho phép xem, thêm, sửa thông tin chương trong hệ thống.
- Điều kiện trước: admin, nhân viên đã đăng nhập vào hệ thống.
- Dòng sự kiện chính: Người sử dụng chọn kiểu tác động: thêm, sửa thông tin chương.
+ Thêm thông tin sách: chọn thêm chương, hệ thống hiển thị giao diện nhập thông tin chương, người sử dụng nhập thông tin sách như tên chương, nội dung… nếu thành công hệ thống đưa ra thông báo, nếu sai thực hiện dòng rẽ nhấnh A1, lưu thông tin vào danh sách sách.
+ Sửa thông tin chương: hệ thống hiển thị danh sách chương, chọn chương cần sửa, nhập các thông tin cần thay đổi, nếu việc thay đổi thông tin thành công hệ thống sẽ đưa ra thông báo, nếu sai thì thực hiện dòng rẽ nhấnh A1, lưu thông tin danh sách sách.
- Use case kết thúc
- Dòng sự kiện rẽ nhấnh A1: hệ thống thông báo việc nhập dữ liệu không hợp lệ, nhập lại thông tin, quay lại bước 1 của dòng sự kiện chính.
- Hậu điều kiện: các thông tin về sách được cập nhật trong cơ sở dữ liệu.
- 
❖ Biểu đồ Use Case “Quản lý nhà xuất bản”

    Hình 3- 6: Biểu đồ Use case “Quản lý nhà xuất bản”
- Tác nhân: Admin, nhân viên
- Mô tả: use case cho phép xem, thêm, sửa, xóa thông tin nhà xuất bản.
- Điều kiện trước: admin, nhân viên đã đăng nhập vào hệ thống.
- Dòng sự kiện chính: Người sử dụng chọn kiểu tác động: thêm, sửa, xóa thông tin nhà xuất bản.
+ Thêm thông tin nhà xuất bản: chọn thêm nhà xuất bản, hệ thống hiển thị giao diện nhập thông tin nhà xuất bản, người sử dụng nhập thông tin nhà xuất bản, nếu thành công hệ thống đưa ra thông báo, nếu sai thực hiện dòng rẽ nhấnh A1, lưu thông tin vào danh sách nhà xuất bản.
+ Sửa thông tin nhà xuất bản: hệ thống hiển thị danh sách nhà xuất bản, chọn nhà xuất bản cần sửa, nhập các thông tin cần thay đổi, nếu việc thay đổi thông tin thành công hệ thống sẽ đưa ra thông báo, nếu sai thì thực hiện dòng rẽ nhấnh A1, lưu thông tin danh sách nhà xuất bản.
+ Xóa thông tin nhà xuất bản: hệ thống hiển thị danh sách nhà xuất bản, chọn nhà xuất bản cần xóa, nếu việc thay đổi thông tin thành công hệ thống sẽ đưa ra thông báo, nếu sai thì thực hiện dòng rẽ nhấnh A1, lưu thông tin danh sách nhà xuất bản.
- Use case kết thúc
- Dòng sự kiện rẽ nhấnh A1: hệ thống thông báo việc nhập dữ liệu không hợp lệ, nhập lại thông tin, quay lại bước 1 của dòng sự kiện chính.
- Hậu điều kiện: các thông tin về nhà xuất bản được cập nhật trong cơ sở dữ liệu.
❖ Biểu đồ Use Case “Quản lý thông tin”

    Hình 3- 7: Biểu đồ Use case “Quản lý thông tin”
- Tác nhân: Admin, nhân viên
- Mô tả: use case cho phép xem, thêm, sửa, xóa thông tin sách trong hệ thống.
- Điều kiện trước: admin, nhân viên đã đăng nhập vào hệ thống.
- Dòng sự kiện chính: Người sử dụng chọn kiểu tác động: thêm, sửa, xóa thông tin thông tin sách.
+ Thêm thông tin sách: chọn thêm thông tin, hệ thống hiển thị giao diện nhập thông tin sách như tác giả, nhà xuất bản,… người sử dụng nhập thông tin, nếu thành công hệ thống đưa ra thông báo, nếu sai thực hiện dòng rẽ nhấnh A1, lưu thông tin vào danh sách thông tin.
+ Sửa thông tin sách: hệ thống hiển thị danh sách thông tin, chọn thông tin cần sửa, nhập các thông tin cần thay đổi, nếu việc thay đổi thông tin thành công hệ thống sẽ đưa ra thông báo, nếu sai thì thực hiện dòng rẽ nhấnh A1, lưu thông tin danh sách thông tin.
+ Xóa thông tin sách: hệ thống hiển thị danh sách thông tin, chọn thông tin cần xóa, nếu việc thay đổi thông tin thành công hệ thống sẽ đưa ra thông báo, nếu sai thì thực hiện dòng rẽ nhấnh A1, lưu thông tin danh sách thông tin sách.
- Use case kết thúc
- Dòng sự kiện rẽ nhấnh A1: hệ thống thông báo việc nhập dữ liệu không hợp lệ, nhập lại thông tin, quay lại bước 1 của dòng sự kiện chính.
- Hậu điều kiện: các thông tin về thông tin sách được cập nhật trong cơ sở dữ liệu.
❖ Biểu đồ Use Case “Quản lý Admin”

    Hình 3-8: Biểu đồ Use case cho chức năng “Quản lý Admin”
- Tác nhân: Admin
- Mô tả: use case cho phép thêm, sửa, xóa admin trong hệ thống.
- Điều kiện trước: admin đã đăng nhập vào hệ thống.
- Dòng sự kiện chính: Người sử dụng chọn kiểu tác động: thêm, sửa, xóa admin.
+ Thêm admin: chọn thêm admin, hệ thống hiển thị giao diện nhập thông tin admin, người sử dụng nhập thông tin admin, nếu thành công hệ thống đưa ra thông báo, nếu sai thực hiện dòng rẽ nhấnh A1, lưu thông tin vào danh sách admin.
+ Sửa admin: hệ thống hiển thị danh sách admin, chọn admin cần sửa, nhập các thông tin cần thay đổi, nếu việc thay đổi thông tin thành công hệ thống sẽ đưa ra thông báo, nếu sai thì thực hiện dòng rẽ nhấnh A1, lưu thông tin danh sách admin.
+ Xóa admin: hệ thống hiển thị danh sách admin, chọn admin cần xóa, nếu việc thay đổi thông tin thành công hệ thống sẽ đưa ra thông báo, nếu sai thì thực hiện dòng rẽ nhấnh A1, lưu thông tin danh sách admin.
- Use case kết thúc
- Dòng sự kiện rẽ nhấnh A1: hệ thống thông báo việc nhập dữ liệu không hợp lệ, nhập lại thông tin, quay lại bước 1 của dòng sự kiện chính.
- Hậu điều kiện: các thông tin về admin được cập nhật trong cơ sở dữ liệu.
❖ Biểu đồ Use Case “Quản lý Thống kê”


    Hình 3- 9: Biểu đồ Use case cho chức năng “Quản lý Thống kê”
- Tác nhân: Admin
- Mô tả: use case cho phép xem thống kê trong hệ thống.
- Điều kiện trước: admin đã đăng nhập vào hệ thống.
- Dòng sự kiện chính: Người sử dụng chọn kiểu tác động: xem thống kê.
+ Cho phép xem thống kê: tổng số sách, thành viên, sách, sách mới, top sách xem nhiều.
- Use case kết thúc
- Dòng sự kiện rẽ nhấnh A1: hệ thống thông báo việc nhập dữ liệu không hợp lệ, nhập lại thông tin, quay lại bước 1 của dòng sự kiện chính.
- Hậu điều kiện: các thông tin được cập nhật trong cơ sở dữ liệu.

❖ Biểu đồ Use Case “Chức năng của khách hàng”

    Hình 3- 10: Biểu đồ Use case cho chức năng “Chức năng của khách hàng”
- Tác nhân: khách hàng 
- Mô tả use case cho phép khách hàng thực hiện được các chức năng trên hệ thống.
- Điều kiện trước: khách đã truy cập vào hệ thống.
- Dòng sự kiện chính: Người dùng có thể thực hiện các chức năng sau trên website:
+ Tìm kiếm sách được đăng trên website.
+ Xem sách: chọn sách để xem thông tin chi tiết.
+ Bình luận sách: vào mục xem chi tiết sách, để lại bình luận nếu muốn.
+ Liên hệ: gửi thông tin liên hệ
- Use case kết thúc
- Hậu điều kiện: các thông tin về chức năng khách hàng được cập nhật trong cơ sở dữ liệu.


3.2.2 Biểu đồ lớp
❖ Biểu đồ lớp
    
    Hình 3-11: Biểu đồ lớp
❖ Danh sách các lớp đối tượng
    Bảng 3. 6: Danh sách các lớp
STTTên thực thểMô tả1AdminsMô tả các thuộc tính và các phương thức liên quan tới nghiệp vụ quản lý tài khoản admin2AuthorMô tả các thuộc tính và các phương thức liên quan tới nghiệp vụ quản lý tác giả3Category_has_StoriesMô tả các thuộc tính và các phương thức liên quan tới nghiệp vụ quản lý sách trong danh mục4CategoriesMô tả các thuộc tính và các phương thức liên quan tới nghiệp vụ quản lý danh mục sách5ReviewMô tả các thuộc tính và các phương thức liên quan tới nghiệp vụ quản lý thông tin sách6ChapterMô tả các thuộc tính và các phương thức liên quan tới nghiệp vụ quản lý chương sách7MigrationMô tả các thuộc tính và các phương thức liên quan tới nghiệp vụ quản lý bảng trong csdl8Short_StoryMô tả các thuộc tính và các phương thức liên quan tới nghiệp vụ quản lý sách ngắn, tóm tắt9StoriesMô tả các thuộc tính và các phương thức liên quan tới nghiệp vụ quản lý sách10UserMô tả các thuộc tính và các phương thức liên quan tới nghiệp vụ quản lý người dùng



















3.2.3 Biểu đồ tuần tự
❖ Biểu đồ tuần tự chức năng đăng nhập

    Hình 3- 12: Biểu đồ tuần tự chức năng đăng nhập






❖ Biểu đồ tuần tự cho chức năng quản lý danh mục sách

    Hình 3- 23: Biểu đồ tuần tự cho chức năng quản lý danh mục sách
❖ Biểu đồ tuần tự cho chức năng quản lý sách

    Hình 3-13: Biểu đồ tuần tự cho chức năng quản lý sách
❖ Biểu đồ tuần tự cho chức năng quản lý bài viết

    Hình 3-14: Biểu đồ tuần tự cho chức năng quản lý bài viết
❖ Biểu đồ tuần tự cho chức năng quản lý danh mục bài viết

    Hình 3-15: Biểu đồ tuần tự cho chức năng quản lý danh mục bài viết
❖ Bảng Users: Users
    Bảng 3. 24: Users
STTTên thực thểKiểu dữ liệuRàng buộcMô tả1IDBigint(20)Khóa chínhKhóa chính của bảng2NameVarchar(255)Not nullTên3EmailVarchar(255)Not nullEmail4Email_verified_atTimestampNullKiểm tra email5PasswordVarchar(255)Not nullMật khẩu6Log_loginTextNullLịch sử đăng nhập7Created_atTimestampNullNgày tạo8Updated_atTimestampNullNgày cập nhật9AddressVarchar(255)NullĐịa chỉ10Count_commentTinyint(4)Not nullSố lần bình luận11Remember_tokenVarchar(100)Null12AvatarVarchar(255)NullẢnh13PhoneVarchar(255)Not nullSố điện thoại
3.4 Thiết kế đặc tả giao diện
3.4.1 Chức năng hiển thị trang chủ
❖ Mục đích
   Chức năng này cho phép người dùng khi truy cập vào website sẽ hiển thị giao diện với nội dung danh sách sách, menu, slide...
❖ Phạm vi
   Chức năng này sẽ cho phép người dụng truy cập vào website có thể sử dụng.
❖ Ràng buộc
   Người dùng phải truy cập vào website.
   
   

❖ Giao diện của chức năng
      Hình 3-16: Giao diện trang chủ



❖ Mô tả chức năng
   Khi người dùng truy cập vào website, trang chủ sẽ hiển thị ra với các nội dung bao gồm: khung tìm kiếm; logo website; menu; thông tin sách trên với nội dung tên, hình ảnh, thông tin và phần footer là nội dung thông tin về địa chỉ, nhà xuất bản, hỗ trợ.
3.4.2 Chức năng hiển thị chi tiết sách
❖ Mục đích
   Chức năng này hiển thị thông tin chi tiết sách khi người dụng click vào sách nào đó trên trang chủ để xem thông tin chi tiết về sách đó.
❖ Phạm vi
   Chức năng này cho phép người dùng truy cập vào website có thể sử dụng.
❖ Ràng buộc
Người dùng phải truy cập vào website và click vào sách để xem thông tin chi tiết.
❖ Giao diện của chức năng
❖ Hình 3-17: Giao diện chi tiết sách



❖ Mô tả chức năng
   Khi người dùng ấn vào xem chi tiết sách, giao diện chi tiết sách sẽ hiển thị ra với thông tin về chi tiết về sách; ảnh, tình trạng, tác giả, số chương và bình luận. 
3.4.3 Chức năng hiển thị loại sách
❖ Mục đích
   Giúp người dùng có thể xem hết tất cả sách cùng một loại.
❖ Phạm vi
   Chức năng này cho phép người dùng truy cập vào website có thê sử dụng.
❖ Ràng buộc
   Người dùng phải truy cập vào website và chọn vào mục các loại sách.
   
   
   
   
   
   
   
   
   
❖ Giao diện  chức năng
      Hình 3-18: Giao diện hiển thị loại sách

❖ Mô tả chức năng
   Khi người dùng chọn chức năng xem loại sách, giao diện trang loại sách sẽ hiện ra với tất cả các sách thuộc loại sách mà khác hàng muốn xem. Tại đây khách hàng cũng có thể thực hiện chức năng tìm kiếm theo từ khóa và xem thông tin chi tiết sách mỗi khi click vào hình ảnh của bất kì sách nào.
3.4.4 Chức năng tìm kiếm
❖ Mục đích
   Giúp người dùng có thể tìm kiếm thông tin theo đúng nhu cầu của mình một cách chính sác và nhanh chóng nhất.
❖ Phạm vi
   Chức năng này cho phép người dùng truy cập vào website có thê sử dụng.
❖ Ràng buộc
   Người dùng phải truy cập vào website và nhập thông tin sách cần tìm kiếm.
   
   
   

❖ Giao diện  chức năng
Hình 3-19: Giao diện chức năng tìm kiếm

❖ Mô tả chức năng
   Khi người dùng nhập thông tin muốn tìm vào input rồi click tìm kiêm, giao diện trang tìm kiếm sách sẽ hiện ra với tất cả các sách có liên quan đến thông tin khách hàng xuất bản. Tại đây khách hàng cũng có thể thực hiện chức năng tìm kiếm và xem thông tin chi tiết sách mỗi khi click vào hình ảnh của bất kì sách nào.
3.4.5 Chức năng đăng nhập
❖ Mục đích
   Chức năng này sẽ kiểm tra tài khoản sử dụng hệ thống có hợp lệ hay không? Nhằm bảo mật các thông tin trong hệ thống. Và đảm bảo người dùng sử dụng đúng các chức năng được cấp.
❖ Phạm vi
   Chức năng này sẽ kiểm tra tài khoản sử dụng hệ thống có hợp lệ hay không? Nhằm bảo mật các thông tin trong hệ thống. 
❖ Ràng buộc
   Khi người dùng kích hoạt hệ thống, một cửa sổ “Đăng nhập hệ thống” hiện lên, yêu cầu xuất bản các thông tin để đăng nhập sử dụng hệ thống.
   
❖ Giao diện của chức năng
Hình 3-20: Giao diện chức năng nhập

❖ Mô tả chức năng
   Khi truy cập vào trang web, chức năng này sẽ hiển thị đầu tiên hoặc khi người dùng đang đăng nhập khi click vào  “Đăng xuất” trên giao diện chính thì giao diện chính sẽ bị ẩn đi và giao diện đăng nhập này cũng sẽ hiện nên, Sau khi người dùng đã điền đầy đủ thông tin người dùng nhấn “Đăng nhập” nếu thông tin hợp lệ sẽ vào được hệ thống với các chức năng được cấp hiện nên cho phép người dùng sử dụng.
3.4.6 Chức năng quản lý sách
❖ Mục đích
   Giúp người quản lý quản lý thông tin về sách
❖ Phạm vi
   Nhân viên có quyền được phép truy cập chức năng quản lý sách.
❖ Ràng buộc
   Sau khi đăng nhập vào hệ thống người sử dụng muốn sử dụng chức năng chọn “Quản lý sách” trong mục nhập liệu ở menu bên trái.
   
   
   
❖ Giao diện  chức năng
❖ Hình 3-21: Giao diện chức năng quản lý sách



❖ Mô tả chức năng
Khi vào giao diện quản lý sách, sẽ hiển thị các chức năng thêm, sửa, xóa sách và xem chapter


    		Hình 3-22: Giao diện chức năng thêm mới sách








Hình 3-23: Giao diện chức năng cập nhật sản phẩm



	




    Hình 3-24: Giao diện chức năng xóa sản phẩm

❖ Mô tả chức năng
   Các thao tác người dùng có thể thực hiện khi sử dụng chức năng “Quản lý sách”:
   -	Chức năng thêm: khi thêm các thông tin về tên loại sách,,...khi nhấn vào Save thì sách mới đã được thêm vào database. Khi nhân vào Save and continue editing sách sẽ được lưu lại và tiếp tục sửa thông tin. Khi ấn vào nut Save and add another thì thông tin sẽ được lưu lại và tiếp tục thêm thông tin sách mới.
   -	Chức sửa thêm: khi thêm các thông tin về tên sách, tác giả,...khi nhấn vào Save thì sách mới đã được thêm vào database. Khi nhân vào Save and continue editing sách sẽ được lưu lại và tiếp tục sửa thông tin. Khi ấn vào nut Save and add another thì thông tin sẽ được lưu lại và tiếp tục thêm thông tin sách mới.
   -	Chức năng xoá khi người sử dụng chọn thông tin dưới danh sách khi chọn xoá thì thông tin sẽ xoá trong danh sách.
   - Chức năng tìm kiếm: khi người sử dụng nhập thông tin hoặc chon thông tin muốn tìm kiếm rồi click vào button tìm kiếm. Hệ thống sẽ hiển thị ra những sách mà người dùng muốn tìm.
3.4.7 Chức năng quản lý đối tác
❖ Mục đích
   Chức năng này giúp người quản lý quản lý thông tin đối tác gồm: nhà xuất bản và khác hàng một cách dễ dàng và thuận tiện nhất.
❖ Phạm vi
   Nhân viên có quyền được phép truy cập chức năng quản lý giảm nhà sản xuất.
❖ Ràng buộc
   Sau khi đăng nhập vào hệ thống người sử dụng muốn sử dụng chức năng chọn “Quản lý đối tác” trong mục nhập liệu ở menu bên trái.
❖ Giao diện  chức năng
    Hình 3-25: Giao diện chức năng quản lý đối tác
❖ Mô tả chức năng
   Các thao tác người dùng có thể thực hiện khi sử dụng chức năng “Quản lý nhà đối tác”:
   - Chức năng thêm: khi thêm các thông tin về tên, số điện thoại, địa chỉ, trạng thái. Khi nhấn vào Save thì nhà sản xuất mới đã được thêm vào database. Khi nhân vào Save and continue editing nhà sản xuất sẽ được lưu lại và tiếp tục sửa thông tin. Khi ấn vào nut Save and add another thì nhà sản xuất sẽ được lưu lại và tiếp tục thêm thông tin slide mới.
   -	Chức năng sửa khi người dùng chọn thông tin dưới danh sách các thông tin sẽ hiển thị tương ứng trên điều khiển người dùng có thể sửa tên, số điện thoại, địa chỉ, trạng thái. Thông tin sẽ được hiển thị dưới danh sách.
   -	Chức năng xoá khi người sử dụng chọn thông tin dưới danh sách khi chọn xoá thì thông tin sẽ xoá trong danh sách.
3.4.8 Chức năng quản lý danh mục sách
❖ Mục đích
   Giúp người quản lý quản lý thông tin về danh mục sách
❖ Phạm vi
   Nhân viên có quyền được phép truy cập chức năng quản lý loại sách.
❖ Ràng buộc
   Sau khi đăng nhập vào hệ thống người sử dụng muốn sử dụng chức năng chọn “Quản lý danh mục sách” trong mục nhập liệu ở menu bên trái.
   
❖ Giao diện  chức năng
❖ Hình 3-26: Giao diện chức năng quản lý danh mục sách


Hình 3-27: Giao diện chức năng quản lý thêm danh mục sách



	
Hình 3-28: Giao diện chức năng quản lý sửa danh mục sách


Hình 3-29: Giao diện chức năng quản lý xóa danh mục sách

❖ Mô tả chức năng
   Các thao tác người dùng có thể thực hiện khi sử dụng chức năng “Quản lý danh mục sách”:
   -	Chức năng thêm: khi thêm các thông tin về tên danh mục sách, mô tả, trạng thái. Khi nhấn vào Save thì loại sách mới đã được thêm vào database. Khi nhân vào Save loại sách sẽ được lưu lại và tiếp tục sửa thông tin. Khi ấn vào nut Save and add another thì thông tin sẽ được lưu lại và tiếp tục thêm thông tin danh mục sách mới.
   -	Chức sửa thêm: khi thêm thông tin về tên danh mục sách, mô tả, trạng thái. Khi nhấn vào Save thì loại sách mới đã được thêm vào database. Khi nhân vào Save and continue editing sách sẽ được lưu lại và tiếp tục sửa thông tin. Khi ấn vào nut Save and add another thì thông tin sẽ được lưu lại và tiếp tục thêm thông tin danh mục sách mới.
   -	Chức năng xoá khi người sử dụng chọn thông tin dưới danh sách khi chọn xoá thì thông tin sẽ xoá trong danh sách.
   
3.4.9 Chức năng thống kê, báo cáo
❖ Mục đích 
Chức năng này hỗ trợ shop có thể xem các thông tin một cách trực quan về số lượng sách… 
❖ Phạm vi 
Chức năng này cho phép admin truy cập vào website có thê sử dụng.
3.4.10 Chức năng quản lý chương
❖ Mục đích
   Giúp người quản lý quản lý thông tin về danh sách chương.
❖ Phạm vi
   Nhân viên có quyền được phép truy cập chức năng quản lý chương
❖ Ràng buộc
   Sau khi đăng nhập vào hệ thống người sử dụng muốn sử dụng chức năng chọn “Quản lý sách” trong mục nhập liệu ở menu bên trái.
   
   
   
   
   
   
❖ Giao diện  chức năng

	sau đó chọn chapter để vào danh sách chapter

    Hình 3-30: Giao diện chức năng quản lý chương

    	Hình 3-31: Giao diện chức năng quản lý thêm chương

Hình 3-32: Giao diện chức năng quản lý sửa chương
❖ Mô tả chức năng
   Các thao tác người dùng có thể thực hiện khi sử dụng chức năng “Quản lý danh sách chương”:
   -	Chức năng thêm: khi thêm các thông tin về tên chương, mô tả, nội dung tên chương. Khi nhấn vào Save thì loại sách mới đã được thêm vào database. 
   -	Chức sửa thêm: khi thêm thông tin về tên chương, mô tả. Khi nhấn vào Save thì chương mới đã được thêm vào database. Khi nhân vào Save and continue editing sách sẽ được lưu lại và tiếp tục sửa thông tin. Khi ấn vào nut Save and add another thì thông tin sẽ được lưu lại và tiếp tục thêm thông tin danh mục sách mới.


   Kết luận chương 3.
   Trong chương 3 của báo cáo đã thực hiện việc Xây dựng Website sách điện tử. Từ các kết quả đã thực hiện, có thể tóm tắt quá trình xây dựng hệ thống đã cài đặt như sau:
- Tiến hành được quá trình khảo sát và phân tích yêu cầu bài toấn bấn hàng online. Chỉ ra được yêu cầu của hệ thống khảo sát và mô tả chi tiết các yêu cầu.
- Đã sử dụng ULM để phân tích thiết kế hệ thống với các biểu đồ use case tổng quát, use case chi tiết cho từng chức năng. Xác định được các lớp cần quản lý tương ứng với các bảng trong cơ sở dữ liệu. Và sử dụng biểu đồ tuần tự để mô tả luồng đi của hệ thống trong từng sự kiện.
- Thiết kế được cơ sơ dữ liệu từ các yêu cầu của khách hàng cần quản lý.
- Đã Thiết kế và đặc tả được giao diện của website.
   

CHƯƠNG 4: KẾT LUẬN
4.1 Kết quả đạt được của đề tài
    Sau một thời gian tìm hiểu và nghiên cứu đề tài “Xây dựng Website sách điện tử” đề tài đã đạt được một số kết quả sau:
- Phía khách hàng: Tạo được địa chỉ cho khách hàng truy cập. Thực hiện một số chức năng trên giao diện như: hiển thị menu loại sách, hiển thị loại sách hiển thị sách mới nhất, tìm kiếm.
- Phía Admin và nhân viên: Giúp cho thao tác nhanh hơn, thực hiện được phân nhóm, thêm user, quản lý các chức năng như: quản lý sách, loại sách.
         Ngoài những kết quả trên, qua quá trình thực hiện đề tài “Xây dựng Website sách điện tử” em đã có được:
- Những kinh nghiệm quý báu về quy trình và nghiệp vụ quản lý website đọc sách online.
- Trau dồi kiến thức về PHP và biết lập trình bằng ngôn ngữ PHP trên Framework Laravel.
- Rèn luyện kỹ năng làm việc cá nhân, khả năng tư duy và sấng tạo.
4.2 Hạn chế của đề tài
     Do thời gian nghiên cứu chưa được nhiều, bên cạnh những kết quả đạt được còn tồn tại một số vấn đề hạn chế:
- Tìm kiếm trong trang chủ chưa được tối ưu hóa nhất.
- Chưa triển khai hệ thống thực tế được.
4.3 Hướng phát triển
    Với mục đích ngày càng hoàn thiện để đáp ứng tốt nhất cho việc tin học hóa quản lý bấn điện thoại online, trong tương lai em sẽ cố gắng tìm hiểu kỹ hơn, đi sâu hơn và cố gắng hoàn thành tốt đề tài hơn.

TÀI LIỆU THAM KHẢO
[1]  Trần Đình Quế, Phân tích và thiết kế hệ thông thông tin, học viện Công nghệ Bưu chính Viễn Thông, 2007.
[2]  Nguyễn Văn Ba, “Phát triển hệ thống hướng đối tượng với UML 2.0 và C++” , Nhà xuất bản đại học quốc gia hà nội, 2005.
[3]  Lê Đăng Doanh, “Thương mại điện tử cho giai đoạn Việt Nam là thành viên WTO”, Hội thảo thương mại điện tử Hà nội, Hà nội - 17/01/2007.
[4]  Hệ quản trị cơ sở dữ liệu SQL Server – Khoa CNTT, Trường ĐHSPKT Hưng Yên
[5]  Thạc Bình Cường, Phân tích và thiết kế hệ thống, NXB Thống Kê, 2004
[6]  Đặng Văn Đức, Phân tích thiết kế hướng đối tượng bằng UML, NXB Giáo Dục.
[7] 	https://laravel.com/docs/5.8,
[8] 	https://vi.wikipedia.org/wiki/PHP, 
[9] 	https://funnytuts.com/sublime-text-la-gi-gioi-thieu-ve-sublime-text/, 
[10] 	https://quocbuugroup.com/tim-hieu-xampp-va-cach-cai-dat-xampp-de-phat-trien-website-tren-local.html, 
[11] 	http://kienthucweb.net/tim-hieu-ve-co-du-lieu-mysql.html, 
[12] 	https://www.w3schools.com/, 
[13] 	https://stackoverflow.com/, 
[14]	 https://www.highcharts.com/demo/column-drilldown/dark-unica, 
[15] 	https://fontawesome.com/v4.7.0/icons/, 
[16] 	https://codemyui.com/tag/button/
[17] 	http://php.net
[18] 	http://wikipedia.org
[19] 	http://jquery.com
[20] 	http://jqueryui.com

67


