CHƯƠNG 1: TỔNG QUAN VỀ ĐỀ TÀI
1.1 Lý do chọn đề tài
➢ Hiện nay ngành công nghệ thông tin đang rất phát triển, mọi thứ đều được công nghệ hóa,ngay cả đến vấn đề giải trí cũng vậy, nó cũng được người tiêu dùng đánh giá rất khắt khe.Ngành công nghệ game không còn quá xa lại với mọi người nữa và nó đang dần có thị trường riêng của mình. Để có 1 sản phẩm game hay chúng ta cần rất nhiều yếu tố một trong số đó phải nói tới Game Engine. 
➢ Game Engine là một công cụ hỗ trợ, một Middleware giúp người phát triển viết Game một cách nhanh chóng và đơn giản, đồng thời cung cấp khả năng tái sử dụng các tài nguyên và mã nguồn cao do đó có thể phát triển Game từ một Game Engine.Do đó game Đại chiến Dragon đã bắt đầu được hình thành và xây dung.
1.2 Mục tiêu của đề tài
Ứng dụng Game Đại chiến Dragon cần đạt được những mục tiêu sau:
➢ Chuyển động của các nhân vật trong game hoạt động uyển chuyển, mượt mà, linh hoạt, không lặp đi lặp lại hành động gây nhàm chán.
➢ Hình ảnh, âm thanh sinh động tạo hứng thú cho người chơi.
➢ Ứng dụng chạy mượt, không bị lag, giật.
1.3 Giới hạn và phạm vi của đề tài
➢ Môi trường phần cứng
• CPU: Snapdrgon 400 trở lên
• RAM: tối thiểu 1GB
• HDD: dung lượng tối thiểu trống 1GB
➢ Môi trường phần mềm
• Hệ điều hành: Android
1.4 Nội dung thực hiện
	Nội dung thực hiện/nghiên cứu cụ thể như sau:
➢ Nghiên cứu công nghệ lập trình Game Unity trên nền tảng C#.
➢ Thiết kế giao diện, xây dựng đúng chủ đề.
➢ Lập trình chuyển động, âm thanh, hình ảnh, thuộc tính cho các đối tượng có trong Game.
➢ Kiểm thử hệ thống.
1.5 Phương pháp tiếp cận
➢ Cách tiếp cận: Nghiên cứu các ngôn ngữ lập trình C#, java,…
➢ Sử dụng các phương pháp nghiên cứu: 
• Phương pháp đọc tài liệu;
• Phương pháp phân tích mẫu;
• Phương pháp thực nghiệm.
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT
TỔNG QUAN VỀ ENGINE UNITY VÀ KHÔNG GIAN 2D, 3D
2.1 Tổng quan về Engine Unity
2.1.1 Unity là gì?
➢ Đã qua rồi thời kì làm game trên nền Flash căn bản và buồn chán với những chuyển động cứng nhắc. Unity muốn mang lại sức mạnh kì diệu cho nhân vật mà chúng ta muốn thể hiện sống động hơn trong không gian 3 chiều đầy huyền ảo. Công nghệ cao này tạo ra một bước đột phá mới về sự khác biệt trong công nghệ làm game hiện nay, mang đến cho người chơi một cảm giác rất lạ và hào hứng trong từng chuyển động, tương lai công nghệ này được áp dụng vào game Việt Nam sẽ mở ra một trang mới trong thế hệ game 2D, 3D huyền ảo.
➢ Unity được dùng để làm video game, hoặc những nội dung có tính tương tác như thể hiện kiến trúc, hoạt hình 2D, 3D thời gian thực. Unity hao hao giống với Director, Blender game engine, Virtools hay Torque Game Buidler trong khía cạnh dùng môi trường đồ họa tích hợp ở quá trình phát triển làm game là chính.
➢ Unity là một trong những engine được giới làm game không chuyên cực kỳ ưa chuộng bởi khả năng tuyệt vời của nó là phát triển trò chơi đa nền. Trình biên tập có thể chạy trên Windows và Mac OS, và có thể xuất ra game cho Windows, Mac, Wii, iOS, Android. Game cũng có thể chơi trên trình duyệt web thông qua plugin Unity Web Player. Unity mới bổ sung khả năng xuất ra game trên widget cho Mac, và cả Xbox 360, PlayStation 3.
      
Hình 2. 1: Hình minh họa đa nền
➢ Chỉ với khoản tiền bỏ ra khá khiên tốn (1.500 USD) là phiên bản pro đã nằm trong tay của chúng ta, dĩ nhiên tại Việt Nam số tiền này vẫn là quá lớn nhưng thật may là đã có phiên ban Unity Free. Tuy nhiên, nhiều tính năng quan trọng (Network) bị cắt giảm nhưng đó không phải là vấn đề quá lớn nếu muốn phát triển một ựa game tầm trung.
➢ Vào năm 2009, Unity nằm trong top 5 game engine tốt nhất cho việc sản xuất game với chỉ 4 năm phát triển. Unity đứng thứ 4, xếp sau Unreal Engine 3, Gamebryo Engine (được VTC Studio mua về phát triển SQUAD) và Cry Engine 2. Lượng tài liệu hướng dẫn Unity rất phong phú. Hơn thế nữa nó còn có sẵn một cộng đồng cực lớn với diễn đàn riêng. Bất cứ điều gì không hiểu chúng ta có thể thoải mái hỏi và nhận được câu trả lời nhanh chóng, tận tâm.
➢ Quá trình tạo địa hình cũng như truy xuất từ các phần mềm 3DSMax, Mây, Cinema4D,… rất nhanh chóng. Sức mạnh và sự tiện lợi của Unity là vô cùng lớn.
•      Sức mạnh: Unity có thể tạo ra được nhiều loại game 2D, 3D đa dạng, dễ sử dụng với người làm game chưa chuyên nghiệp, chất lượng cao, chạy hầu hết trên các hệ điều hành.
•      Sự tiện lợi: nếu chứng ta là một người chuyên dùng 3Dmax, hay Maya hoặc phần mềm mã nguồn mở Blender thì quả là thật tuyệt, chúng ta sẽ có một lợi thế lớn khi viết game trên Unity này, bởi công việc tạo các mô hình 2D, 3D sẽ trở lên dễ dàng hơn rất nhiều, việc kết hợp lập trình và người thiết kế các mô hình sẽ nhanh và hiệu quả hơn. 
➢ Trong Unity chúng ta có thể import trực tiếp các file mô hình đang thiết kế sẽ thiết kế hoàn thiện tiếp nếu chưa xong trong khi đó công việc import chỉ diễn ra một lần. Không như việc phải dùng các công cụ khác để thực hiện viết game chúng ta sẽ phải xuất chúng ra một dạng nào đó và mỗi lần sửa lại phần mô hình chúng ta lại phải import lại, và như thế là quá mất thời gian cho việc tạo và chỉnh sửa các mô hình theo ý muốn. Ngoài ra Unity còn cho chúng ta trực tiếp tạo các mô hình nếu muốn. Việc đặt các thuộc tính vật lí trong Unity cũng cực kì dễ dàng và hỗ trợ sẵn nhiều chức năng.
2.1.2 Sơ lược lịch sử hình thành và phát triển của Unity 
a) Hình thành
 Phần lõi của Unity ban đầu được viết bởi Joachim Ante vào năm 2001. Sau đó công ty được hình thành vào năm 2005 và bắt đầu với phiên bản 1.0. Đến năm 2007, Unity được nâng cấp lên phiên bản 2.0. Unity bắt đầu hỗ trợ iPhone vào năm 2008. Vào tháng 6/2010, Unity chính thức hỗ trợ Android và cho ra đời phiên bản 3.0 có hỗ trợ Android vào tháng 9/2010 và bây giờ là phiên bản Unity 5. Có thể thấy tốc độ phát triển của Unity khá nhanh.



b) Giải thưởng
         Unity đã đạt được nhiều giải lớn với những giải chính sau:
➢ Năm 2006, Unity đạt “ Best Use of Mac OS X Graphics” tại Apple’s WWDC, Đây là lần đầu tiên một công cụ phát triển game đạt được chất lượng do giả thưởng uy tín này đưa ra.
➢ Năm 2009, Unity Technologies có tên trong “Top 5 công ty game của năm” do Gamasutra tổ chức.
➢ Năm 2010, Unity đạt giải Best Engine Finalist do Develop Managzine bình chọn, giải Technology Innovation Award của Wall Street Journal ở thể loại phần mềm.
c) Khách hàng.
➢ Unity được trên 250.000 người đăng ký sử dụng gồm Bigpoint, Cartoon Network, Coca-Cola, Disney, Electronic Arts, LEGO, Microsoft, NASA, Ubisoft, Warner Bros, các hãng phim lớn nhỏ, các chuyên gia độc lập, sinh viên và những người đam mê.
2.1.3. Tính năng của Engine 
➢   Môi trường phát triển được tích hợp với tính năng kế thừa, khả năng chỉnh sửa đồ họa, chức năng kiểm tra chi tiết, và đặc biệt là tính năng xem trước game ngay trong lúc xây dựng (live game preview).
➢ Triển khai được trên nhiều nền tảng:
• Chương trình độc lập trên Window và Mac OS.
• Trên web, thông qua Unity Web Player plugin cho Internet Explorer, Firefox, Safari, Opera, Chrome, cho cả Windows và Mac OS.
• Trên Mac OS Dashboad widget.
• Cho Nintendo Wii (cần mua license thêm).
• Cho iPhone, iPab application (cần mua license thêm).
• Cho Google Android (cần mua license thêm).
• Cho Microsoft Xbox 360 (cần mua license thêm).
•  Cho Sony PlayStation 3 (cần mua license thêm).
➢ Tài nguyên (model, âm thanh, hình ảnh,…) được tải vào trong Unity và tự động cập nhật nếu tài nguyên có sự thay đổi, Unity hỗ trợ các kiểu định dạng từ 3DS Max, Maya, Blender, Cinema 4D và Cheetah3D.
➢ Graphics engine sử dụng Direct3D (Windows), OpenGL (Mac, Windows), OpenGL ES (iPhone OS), và các API khác trên Wii.
➢ Hỗ trợ bump mapping, reflection mapping, parallax mapping, screen space Ambient Occlusion v…v…
➢ Unity Asset Server: Đây là một tính năng khá mới của Unity, theo đó Unity sẽ cung cấp một hệ thống quản lí theo dạng phên bản cho tất cả asset và cả script. Đây là một kho chứa các tài nguyên của asset ngay lập tức được cập nhật. Server chạy trên database opensource PostgreSQL và có thể truy cập đến Mac lẫn Window, Linux, Asset Server đòi hỏi 1 khoản phí phụ trội là $499 cho mỗi bản copy Unity, và một linsenve UnityPro.
2.2 Tổng quan về Game Engine
2.2.1 Khái niệm
➢ Một Game Engine (hay công cụ tạo game/ động cơ game) là một phần mềm được viết cho mục đích thiết kế và phát triển video game. Có rất nhiều loại Game Engine dùng để thiết kế Game cho các hệ máy như hệ Consoles hay máy tính cá nhân (PC). 
➢ Chức năng cốt lõi của Game Engine phần lớn nằm trong công cụ dựng hình (kết xuất đồ họa) cho các hình ảnh 2 chiều (2D) hay 3 chiều (3D), công cụ vật lý (hay công cụ tính toán và phát hiện va chạm), âm thanh, mã nguồn, hình ảnh động (Animation), trí tuệ nhân tạo, phân luồng, tạo dòng dữ liệu xử lý, bộ nhớ, dựng ảnh đồ thị, và kết nối mạng.
➢  Quá trình phát triển game tiết kiệm được rất nhiều thời gian và kinh phí vào việc tái sử dụng và tái thích ứng một Engine để tạo nhiều Game khác nhau.
2.2.2 Mục đích
➢ Game Engine cúng cấp một bộ dụng cụ phát triển trực quan và có thể tái sử dụng từng thành phấn trong đó. Nói chung các bộ công cụ này cung cấp một môi trường phát triển được đơn giản hóa. Phát triển ứng dụng nhanh (Rapid Application Development) cho game theo cách lập trình hướng dữ liệu. 
➢ Những Game Engine này đôi khi được gọi là các “phần mềm trung gian cho Game” ( Game Middleware), như ý nghĩa của thuật ngữ chúng cung cấp một nền tảng phần mềm linh hoạt và dễ dàng sử dụng lại với mọi chức năng cốt lõi cần thiết ngay trong nó để có thể phát triển  một ứng dụng Game đồng thời giảm giá thành, độ phức tạp, và kịp thời hạn phát hành.
➢ Tất cả các yếu tố quan trọng trong ngành công nghiệp Game, đầy cạnh tranh, Giống như các phần mềm trung gian khác, Game Engine thường cung cấp một nền tảng trìu tượng hóa, cho phép một Game có thể chạy trên nhiều hệ máy bao gồm các hệ console hoặc máy tính các nhân với một vài thay đổi (nếu cần) trong mã nguồn của Game đó. 
➢ Thông thường, phần mềm trung gian cho Game được thiết kế với một nền tảng kiến trúc dựa trên các thành phần khác, cho phép các hệ thống khác nhau trong Engine có thể thay thế hoặc mở rộng với các phần mềm trung gian khác chuyên biệt hơn như là Havok cho hệ thống vật lý trong game, Miles Sound System cho âm thanh hay Bink cho các đoạn video.
➢ Một số Game Engine chỉ cung cấp khả năng dựng hình (kết xuất) 3D thời gian thực hay một khả năng riêng biệt nào khác thay vì rất nhiều chức năng trong phạm vi rộng mà Game Engine yêu cầu. Loại Engine này thường được gọi là: “Graphics Engine”, “Rendering Engine”, hay “3D Engine” thay vi thuật ngữ bao quát hơn là “Game Engine”. Một vài ví dụ cho các Engine đồ hạo là: RealmForge, Truevision3D, OGRE, Crystal Space, Genesis3D, Vision Engine, Irrlicht và Jmonkey Engine.
2.2.3 Ảo hóa phần cứng 
Thông thường, Engine 3D hay hệ thống hết xuất đồ họa trong Game Engine thường được xây dựng trên một nền tảng giao diện lập trình ứng dụng đồ họa như direct 3D hay OpenGL cung cấp sẵn một hệ ảo hóa cho GPU hay card đồ họa. Thư viện mã nguồn cấp thấp ( cấp cơ bản) như: DirectX, SDL, và OpenAL ( thư viện âm thanh mã nguồn mở) cũng thường được sử dụng trong các Game khi chúng cung cấp khả năng truy cập phần cứng độc lập.
2.2.4 Lịch sử
➢ Thuật ngữ “Game Engine” xuất hiện vào giữa những năm 90, đặc biệt là trong mối quan hệ giữa Game 3D. Như các thương hiệu nổi tiếng của id Software: Doom và Quake, thay vì phải làm việc ngay từ đầu, các nhà phát triển khác ( nếu được cấp phép) sẽ có quyền truy cập vào phần lõi ( mã nguồn) của Game và thiết kế hình ảnh, nhân vật, vũ khí, các màn chơi của riêng họ - gọi là Game Content ( nội dung của Game) hay “Game Assets” ( tài sản Game). 
➢ Các Game sau này, như Quake III Arena và sản phẩm năm 1998 của Epic Game: Unreal được thiết kế với cách tiếp cận mới này, Game Engine và nội dung Game được chia thành các phần riêng biệt để phát triển. 
➢ Engine có thể tái sử dụng khiến việc phát triển Game tiếp theo nhanh hơn và dễ dàng hơn, một thuận lợi to lớn trong ngành công nghiệp cạnh tranh này Game Engine hiện đại là một trong những ứng dụng được viết ra (bằng các ngôn ngữ lập trình) phức tạp nhất, thường xuyên phải có rất nhiều tinh chỉnh trong hệ thống để đảm bảo kiểm soát chính xác trải nghiệm người dùng. 
➢ Sự phát triển liên tục của Game Engine đã tạo ra một sự phân chia mạnh mẽ giữa các công việc dựng hình, viết kịch bản, thiết kế hình ảnh, và thiết kế màn chơi. 
➢ Hiện nay thông thường một đội ngũ phát triển Game điển hình phải có số lượng họa sĩ gấp vài lần số lượng lập trình viên.
2.2.5 Xu hướng hiện đại
➢ Với công nghệ tạo Game Engine càng phát triển và trở nên thân thiện hơn với người sử dụng, ứng dụng của nó càng được mở rộng, và giờ đây được sử dụng để tạo các Game mang mục đích khác với giải trí đơn thuần như mô phỏng, huấn luyện ảo, y tế ảo, và mô phỏng ứng dụng quân sự.
➢  Nhiều Game Engine đang được tạo ra bằng các ngôn ngữ lập trình cấp cao như Java và C# hay .NET (Ví dụ: TorqueX, và Visual3D.NET) hay Python (Panda3D). Vì hầu hết các Game 3D hiện nay đều có giới hạn cho GPU ( giới hạn bởi sức mạnh của card đồ họa), khả năng gây chậm máy của các ngôn ngữ lập trình cấp cao trở nên không đáng kể, trong khi việc tăng năng xuất được cung cấp bởi ngôn ngữ này lại có lợi cho các nhà phát triển Game Engine.
2.2.6 Phần mềm trung gian
➢ Một số hãng hiện nay chuyên tập trung vào phất triển các bộ phần mềm gọi là phần mềm trung gian (Middleware). Các nhà phát triển Middleware cố gắng phát triển thành một bộ phần mềm mạnh mẽ bao gồm hầu hết các yếu tố mà một nhà phát triển Game cần đến để xây dựng một Game. Phần lớn các Middleware cung cấp các cơ sở dữ liệu các cơ sở để phát triển một cách nhẹ nhàng như: hình ảnh, âm thanh, hệ thống vật lý và chức năng AI. 
➢ Gamebryo và Renderware là hai phần mềm trung gian được sử dụng rộng rãi. Một số Middleware chỉ làm một chức năng nhưng nó còn hiệu quả hơn cả toàn bộ Engine. Ví dụ, SpeedTree được sử dụng để dựng hình ảnh cây cối thêm thực tế trong Game nhập vai The Elder Scrolls IV: Oblivion. 
➢ Bốn gói phần mềm trung gian được sử dụng rộng rãi nhất, thường được cung cấp dưới dạng một chức năng bổ trong hệ thống Engine gồm có Bink của RAD Game Tools, hãng Firelight với FMOD, Havok và GFx của Scaleform. RAD Game Tools phát triển Bink cho dựng hình video cơ bản, đi cùng với âm thanh Miles và dựng hình 3D Granny. FMOD của Firelight là một thư viện và bộ công cụ phần mềm âm thanh mạnh mẽ giá rẻ. Havok cung cấp một hệ thống mô phỏng vật lí mạnh, cùng với các bộ phần mềm về hình ảnh động và mô phỏng hành vi. 
➢ Scaleform đem lại GFx dùng cho các biểu diễn cao cấp trên nền giao diện Flash, cùng với các giải pháp trình chiếu video chất lượng cao, và một input Method Editor (IME) phần bổ sung nhằm hỗ trợ trò chuyện trong Game bằng ngôn ngữ Châu Á.
2.2.7 Phân loại Game Engine theo mức độ chuyên biệt
     a, Roll-your-own Game Engine 
➢ Roll-your-own Engine có thể được xem như những Engine ở mức thấp nhất. 
➢ Ngày nay rất nhiều công ty tự tạo ra Engine cho riêng họ với những thứ có thể. Họ tận dụng những gói ứng dụng phổ biến, các API như XNA, DirectX, OpenGL, các API và SDL của Windows và Linux. Ngoài ra, họ có thể dùng những thư viện từ nhiều nguồn khác nhau, được mua hoặc Open- Source. Những thư viện đó có thể bao gồm cả những thư viện vật lý như Havok và ODE, những thư viện Scene-Graph như OpenSceneGraph và các thư viện GUI như AntTweakBar.
➢  Thực tế, những hệ thống “tự sản xuất” đó cho phép những lập trình viên dễ tương tác hơn rất nhiều vì họ biết cần gì và chọn những thành phần phù hợp từ đó tạo nên chính xác thứ cần thiết. Nhưng cũng vì vậy mà tốn rất nhiều thời gian. Thêm vào đó, những lập trình viên thường gặp rất nhiều lỗi khi các thư viện từ nhiều nguồn không tương thích với nhau. Điều này đã góp phần làm cho những Engine dạng này kém hiệu quả và không được ưa chuộng ngay cả với Engine được thiết kế một cách chuyên nghiệp. 
   b. Mostly-ready Game Engine 
➢ Mostly-ready Game Engine, những Engine nằm ở tầng trung. Các nhà thiết kế Game nghiệp dư rất thích những Engine dạng này. Chúng được thiết kế rất đầy đủ với mọi tính năng cần thiết, vẽ, tương tác, GUI, vật lý... ngoài ra chúng còn kèm theo rất nhiều tool mạnh. 
➢ Những Engine tầng này khá phong phú từ ORGE và Genesis3D (open-source), rẻ tiền như Torge hoặc đắc tiền như Unreal, id Tech và Gamebryo. 
➢ Về mức độ, những Engine kể trên đều cần lập trình thêm để gắn kết mọi thứ với nhau nhằm tạo nên một Game hoàn chỉnh. 
➢ Hầu như mọi Mostly-ready Game Engine đều có phần hạn chế một ít so với roll-your-own Engine. Vì mặc dù nó là sản phầm của rất nhiều người tham gia phát triển trải qua thời gian dài nhằm mang đến cho khách hàng những “tiện nghi” tốt nhất nhưng không phải khách hàng nào cũng giống nhau và phát triển những Game tương tự nhau. 
   c. Point-and-click Game Engine 
➢ Point-and-click Engine được xếp ở tầng cao nhất. Những Engine này ngày càng trở nên phổ biến. Nó có tất cả mọi tool với đầy đủ chức năng cho phép chúng ta chỉ việc chọn, click và chọn để tạo ra Game. 
➢ Những Engine như vậy, kể cả GameMaker, Torque Game Builder, và Unity3D được thiết kế để càng thân thiện với người dùng càng tốt. Nó cũng yêu cầu ít lập trình hơn. Điều này không có nghĩa việc lập trình không cần, nhưng nếu so với 2 loại Engine kể trên trên thì loại Engine này cần ít nhất. 
➢ Nhược điểm rất lớn của những Engine point-and-click này đến từ việc những nhà phát triển bị hạn chế rất nhiều, vì với loại Engines này, chúng chỉ có thể cho ra một loại giao diện như tương tự nhau hoặc khác nhau một ít. Nhưng điều này không có nghĩa chúng vô dụng. Vì khi đối mặt với những hạn chế đó, những sáng tạo của con người sẽ càng được kích thích cao. Ngoài ra, Engine này cho phép chúng ta có thể làm việc nhanh hơn, làm ra Game nhanh hơn mà không phải làm quá nhiều.
2.3. Tổng quan kiển trúc Game engine 
2.3.1. Kiến trúc tổng quan
➢        Engine Unity hỗ trợ cho chúng ta UnityAPI để viết script game. UnityAPI là API lập trình game trong Unity rất mạnh. UnityAPI chứa các đối tượng vầ phương thức hỗ trợ hầu hết các loại thành phần trong Unity.
➢       Trong một scence thường có nhiều đối tượng game. Mỗi đối tượng này đều có thể có hoặc không các đoạn script nào gắn lên đó. Nếu muốn gắn script vào đối tượng, ta bắt buộc phỉ kế thừa class đó từ lớp MonoBehaviour của UnityAPI và tên class phải trùng với tên file script. Mỗi script khi gắn lên đối tượng game đều được đối tượng game xem như một thành phần bên trong và được cấp phát vùng nhớ khi chạy game.

Hình 2. 2: Tổng quan kiến trúc Unity

-Bên trong UnityAPI chứa rất nhiều lớp hỗ trợ lập trình game, trong đó có một số lớp quan trọng như:
MonoBehaviour: tất cả các script muốn gắn vào một đối tượng game bắt buộc phải kế thừa từ lớp này.
GameObject: lớp cha của tất cả các thực thể trong scence.
Component: lớp cha của tất cả các thành phần gắn vào đối tượng.
Tranform: giúp thay đổi vị trí, xoay, biến đổi tỉ lệ mô hình.
Input: hỗ trợ lập trình với chuột, cảm ứng đa điểm, cảm biến gia tốc.
Camera: giúp lập trình camera.
Light: giúp tạo ánh sáng trong game.
Projector: giúp chiếu texture lên bề mặt vật thể.
ParticleEmitter: hỗ trợ tạo các hiệu ứng particle đẹp mắt.
Audio: hỗ trợ lập trình với âm thanh.
Pigidbody: giúp tạo hiệu ứng vật lí liên quan đến trọng lực như bóng nẩy, lăn,…
CharacterController: giúp điều khiển nhân vật di chuyển theo độ cao địa hình.
Collider: hỗ trợ lập trình va chạm giữa các vật thể.
GUI: giúp lập trình giao diện người dùng trên Unity.
2.4. Tìm hiểu Unity3D – Engine game đa nền tảng xuất sắc hiện nay
2.4.1. Unity 3D là gì?
➢ Unity 3D là phần mềm làm games trực tiếp theo thời gian thực, mà không cần render, cho phép người  design game có thể thiết kế InterfaceGraphic, map hay character … Từ một phần mềm thứ 2 (thường là các phần mềm thiết kế đồ họa chuyên nghiệp như 3Dsmax, Blender, Maya, XSL,Cinema4D,Cheetah3D, Modo, Autodesk FBX, LightWave…) sau đó chỉ việc import nó vào trong Unity với định dạng của tập tin là *.FBX hay *.dae, *.3DS, *.dxf và *.obj, nhưng định dạng *.FBX hay được dùng vì được tối ưu hóa hơn, còn dùng các định dạng khác ngoài FBX thì phải cài phần mền thiết kế character tưng ứng thì mới dùng được (tức là dùng Maya có định dạng *.mb, *.ma thì muốn dùng được phải cài Maya).
➢ Ngoài ra khi bạn design được một game thì bạn có thể xuất được ra một file.exe và có thể chạy và chơi được trên PC khác.
➢ Một thế mạnh nữa của Unity là bạn có thể chạy demo game của bạn ngay trongkhi design, nó có hỗ trợ hai chế độ là Scene và Game, rất thuận tiện cho việc test thử các modulGame.
➢ Nếu chúng ta coi mỗi tựa game là một ngôi nhà thì engine game chính là hệ thống cung cấp vật liệu xây dựng, trang thiết bị và các phương thức lắp ghép cơ bản. Các kỹ sư làm game chỉ việc vẽ ra bản thiết kế, tự mình lắp ghép các vật liệu, trang trí hay sắp đặt chúng thành một ngôi nhà hoàn chỉnh.
➢ Chức năng cốt lõi của engine game bao gồm: cung cấp công cụ dựng hình (kết xuất đồ họa) cho các hình ảnh 2D hoặc 3D, công cụ vật lý (tính toán và phát hiện va chạm), âm thanh, mã nguồn, hình ảnh động, trí tuệ nhân tạo, phân luồng, tạo dò ng dữ liệu xử lý, quản lý bộ nhớ, dựng ảnh đồ thị và kết nối mạng. Nhờ có các engine mà công việc làm game trở nên ít tốn kém và đơn giản hơn. Một số engine nổi bật hiện nay có thể kể đến như Cry Engine, Unreal Engine, Source Engine, Id Tech Engine, IW Engine, Unity Engine, Dead Engine….
2.4.2. Unity 3d có mất chi phí không?
➢ Unity 3D có 2 loại phiên bản, một cho người dùng free, và một phiên bản pro thì mất phí.
➢ Khi tải Unity về các bạn cài đặt bình thường, đến khi kết thúc cài đặt nền các bạn chọn phiên bản Pro thì cần phải mua, còn nếu là người dùng free thì các bạn chọn kích hoạt qua web, chỉ cần có kết nối mạng internet, sau đó chọn cài đặt thủ công và nhập mail, chọn free là bạn có thể sử dụng một bản Unity free.
2.4.3. Giới thiệu chung về unity 3D
- Tại sao Unity3D được đánh giá cao?
➢ Unity hay Unity3D chắc chắn không phải engine đỉnh cao nhất về mặt đồ họa. Về mặt này, Cry Engine vẫn đang dẫn đầu với ưu thế đồ họa 3D cực kỳ chân thực. Có thể cảm nhận rõ ràng điều này qua chất lượng hình ảnh các tựa game gần đây sử dụng Cry Engine như Far Cry hay Crysis 3. Tuy nhiên, những engine khủng như Cry hay Unreal rất kén chọn và yêu cầu cấu hình cũng khủng không kém. Hơn nữa cái giá để được cấp phép sử dụng Cry Engine chắc chắn cũng không dễ chịu chút nào.
• Tuy đồ họa không thể so sánh với Cry Engine nhưng chất lượng hình ảnh Unity3D mang lại cũng quá đủ để thỏa mãn game thủ hiện nay. Hơn nữa, Unity3D còn có những ưu điểm mà không phải engine game nào cũng có.
• Hỗ trợ đa nền tảng: Một trong các thế mạnh của Unity3D chính là khả năng hỗ trợ gần như toàn bộ các nền tảng hiện có bao gồm: PlayStation 3, Xbox 360, Wii U, iOS, Android, Windows, Blackberry 10, OS X, Linux, trình duyệt Web và cả Flash. Nói cách khác, chỉ với một gói engine, các studio có thể làm game cho bất kỳ hệ điều hành nào và dễ dàng convert chúng sang những hệ điều hành khác nhau. Đồng thời, đây cũng là giải pháp cho các game online đa nền tảng – có thể chơi đồng thời trên nhiều hệ điều hành, phần cứng khác nhau như Web, PC, Mobile, Tablet….
• Dễ sử dụng: Unity3D được built trong một môi trường phát triển tích hợp, cung cấp một hệ thống toàn diện cho các lập trình viên, từ soạn thảo mã nguồn, xây dựng công cụ tự động hóa đến trình sửa lỗi. Do được hướng đến đồng thời cả lập trình viên không chuyên và studio chuyên nghiệp, nên Unity3D khá dễ sử dụng. Hơn nữa, đây là một trong những engine phổ biến nhất trên thế giới, người dùng có thể dễ dàng tìm kiếm kinh nghiệm sử dụng của “tiền bối” trên các forum công nghệ.
• Tính kinh tế cao: Unity Technologies hiện cung cấp bản miễn phí engine Unity3D cho người dùng cá nhân và các doanh nghiệp có doanh thu dưới 100.000 USD/năm. Với bản Pro, người dùng phải trả 1.500 USD/năm – một con số rất khiêm tốn so với những gì engine này mang lại.
• Có thể thấy, tuy không phải engine “khủng” nhất, nhưng nếu xét toàn diện, Unity3D đích thực là một trong những engine game đa nền tảng tốt nhất hiện nay.





           CHƯƠNG 3: NỘI DUNG THỰC HIỆN
3.1 Phát biểu bài toán
   3.1.1.	Tổng quan về hệ thống mới
Game đại chiến Dragon là một ứng dụng mang lại những trải nhiệm thú vị cho người chơi với rất nhiều thử thách và chướng ngại vật cản trở, đặc biệt là tạo các map chơi mang tính chinh phục, thử thách cho người chơi.
➢ Người chơi cần điều khiển nhân vật của mình tiêu diệt các con quái vật bằng những khẩu súng trên tay, họ phải trải nghiệm tường màn 1 với những nguy hiểm không thể lường trc.
   3.1.2. Các mục tiêu chính của hệ thống
   Ứng dụng Game đại chiến Dragon cần đạt được những mục tiêu sau:
➢ Chuyển động của boss dễ dàng thực hiện và hành động nhanh, dứt khoát, không lặp đi lặp lại hành động gây nhàm chán.
➢ Hình ảnh, âm thanh sinh động tạo hứng thú cho người chơi.
   3.1.3. Môi trường phát triển
➢ Môi trường phần cứng
• CPU: Snapdrgon 400 trở lên
• RAM: tối thiểu 1GB
• HDD: dung lượng tối thiểu trống 1GB
➢ Môi trường phần mềm
• Hệ điều hành: Android
• Công cụ phát triển: Unity
3.2 Yêu cầu của hệ thống
Hệ thống game đại chiến Dragon cung cấp các chức năng các thao tác như điều khiển nhân vật, chọn map chơi, … Hệ thống thao tác 1 cách dễ dàng cùng với 1 giao diện đẹp mắt dễ sử dụng. Game sẽ đáp ứng được nhu cầu giải trí của người chơi.
Ứng dụng game đại chiến Dragon trên Unity cần đạt được những mục tiêu sau:
➢ Hệ thống cho người chơi chọn màn.
➢ Hệ thống cung cấp chức năng nhặt đồ.
➢ Hệ thống cung cấp chức năng cho phép di chuyển nhân vật khi tham gia màn chơi.
➢ Hệ thống cung cấp việc tạm dừng.
➢ Xử lý hiệu ứng khi bắn súng tương tác giống thật có độ giật nhẹ.
➢ Xử lí việc tính đạn khi nhặt được vật phẩm.
➢ Xử lí việc ra vào cửa.
➢ Xử lí mất máu khi bị tấn công, tăng máu khi nhặt được vật phẩm.
➢ Xử lý game khi hoàn màn chơi.
3.2.1 Yêu cầu về các chức năng
3.2.1.1 Menu trong game
Hiển thị menu khi vào game cho phép người chơi chọn chơi (play) hoặc chọn thoát game(quit).
    3.2.1.2. Chức năng nhặt vật phẩm
Cung cấp chức năng nhặt vật phẩm cho người chơi, sẽ có nhưng vật phẩm ngẫu nhiên xuất hiện trên đường đi người chơi có thể nhặt vật phẩm để giúp ích cho mình, nhưng vật phẩm này có thể tăng đạn hoặc tăng máu cho người chơi
        3.2.1.3. Chức năng nhiệm vụ 
Cung cấp chứ năng nhiệm vụ để tang tính thích thú cho người chơi, ở mỗi màn sẽ có những nhiệm vụ quy định sẵn và người chơi cần vượt qua.
       
     3.2.1.4. Chức năng tạm dùng khi chơi game
Cho phép người chơi tạm dùng khi đang chơi game và hiển thị bảng chọn(menu). Bảng menu cho phép người chơi chơi tiếp (resume) chơi lại (restart) hoặc thoát về menu chính (exit).
        3.2.1.5. Kết thúc game 
Khi người chơi kết thúc màn chơi, họ sẽ được chuyển sang 1 màn chơi khác.
3.3 Biểu đồ UseCase
3.3.1 Danh sách các Actor 
STTTên ActorÝ nghĩa/Ghi chú1UserNgười sử dụng ứng dụngBảng 3. 1: Danh sách Actor 
3.3.2. Danh sách các Use-case
STTTên Use-caseÝ nghĩa/Ghi chú1Manage LevelQuản lý màn chơi2Manage EnemyQuản lý enemy3Manage weaponsQuản lý vũ khíBảng 3. 2: Danh sách các Use-case
3.3.3 Biểu đồ UseCase mức tổng quát

Hình 3. 1: UseCase mức tổng quát
3.3.4 Đặc tả UseCase
3.3.4.1. Đặc tả Use-case “Manage Enemy”


Hình 3. 2: Usecase “Manage Enemy”

➢ Quản lý đối thủ: khi bắt đầu vào game và chơi game sau 1 khoảng thời gian nhất định hệ thống sẽ tự sinh enemy.
➢ Dòng sự kiện
➢ Dòng sự kiện chính
• Tự sinh Enemy tại những vị trí cho phép.
• Trong lúc chơi hệ thống vẫn tiếp tục sinh ra Enemy, khi bị bắn trúng quân enemy sẽ biến mất.
• 
• Các dòng sự kiện khác: tự động cập nhật số lượng enemy.
• Các yêu cầu đặc biệt: 
• Giảm sự tràn các enemy
• Tránh việc đơ game khi chơi
Trạng thái hệ thống sau khi bắt đầu thực hiện Use-case
➢ Hệ thống không yêu cầu người dùng đăng nhập. 
➢ Sinh enemy ở các vị trí khác nhau.

3.3.4.2. UseCase “Manager weapons”

Hình 3. 3: Usecase “Manage weapons”

➢ Quản lý weapons: vũ khi sẽ được đặt sẵn chỗ quy định người chơi sẽ sử dụng tay để điều khiển và bán đạn ra theo hướng mình muốn.
➢ Dòng sự kiện
➢ Dòng sự kiện chính
• Tự điều khiển vũ khí bán đạn.
➢ Các dòng sự kiện khác: 
• Không có
➢ Các yêu cầu đặc biệt: 
• Không có
3.4 Biểu đồ lớp
3.4.1 Biểu đồ lớp (mức phân tích)

Hình 3. 4: Biểu đồ lớp mức phân tích


3.4.2 Danh sách các lớp đối tượng và quan hệ
STTTên lớp/quan hệÝ nghĩa/Ghi chú1EnemyLớp quái2WeaponsLớp vũ khíBảng 3. 3: Danh sách các lớp đối tượng và quan hệ
3.4.3 Mô tả chi tiết từng lớp đối tượng
3.4.3.1. Lớp Enemy
STTTên thuộc tínhLoạiRàng buộcÝ nghĩa/ghi chú1IDeNvarchar(50)Không trùngMã xe đua2NameNvarchar(50)Tên xe đua3MoneyeNvarchar(50)Giá tiền xe đua4SpeedNvarchar(50)Tốc độ tối đa5HpNvarchar(50)Máu của quái vật6idlNvarchar(50)Khóa ngoại tham chiếu tới bảng LevelBảng 3. 4: Mô tả chi tiết lớp Enemy
3.4.3.2. Lớp Weapons

STTTên thuộc tínhLoạiRàng buộcÝ nghĩa/ghi chú1IDwNvarchar(50)Không trùngMã Weapons2NameNvarchar(50)Tên Weapons3RangeNvarchar(50)Phạm vi của Weapons4TypewNvarchar(50)Kiểu Weapons5idlNvarchar(50)Khóa ngoại tham chiếu tới bảng LevelBảng 3. 5: Mô tả chi tiết lớp Weapons







3.5 Biểu tuần tự
3.5.1 Biểu đồ tuần tự Manage enemy


Hình 3. 5: Biểu đồ tuần tự enemy



3.5.2 Biểu đồ tuần tự Manage weapons


Hình 3. 6: Biểu đồ tuần tự weapons


3.6. Thiết kế giao diện
3.6.1. Một số giao diện chính của chương trình

3.6.1.1. Giao diện menu


Hình 3.7: Giao diện menu

STTTên controlSự kiệnÝ nghĩa1btnplayClickBắt đầu trò chơi2btoptionsClickChức năng hướng dẫn chơi game 3btnexitClickThoát khỏi trò chơi

➢ Chức năng: Giúp người dùng dễ dàng thực hiện việc bắt bầu chơi.
➢ Sự kiện: 
•    Nhấn “Play”: Người dùng có thể bắt đầu start game.
•    Nhấn “Options”: Hiển thị hướng dẫn trò chơi giúp người dùng dễ hiểu cách chơi hơn khi chưa chơi bao giờ.
•    Nhấn “Exit”: Thoát khỏi game.
3.6.1.2. Giao diện phòng sách

Hình 3. 8. Giao diện phòng sách
➢ Khi bắt đầu trò chơi, người dùng vào level 1.
➢ Vị trí nhắm bắt của súng bắt đầu từ giữa màn hình.
➢ Khu vưc này cũng hay xuất hiện nhưng vật phẩm hữu ích.
➢ Khu vực này cũng dễ gặp phải nhưng nguy hiểm không lường trước được.


3.6.1.3. Giao diện ngoại cảnh

Hình 3. 9. Giao diện ngoại cảnh
➢ Khi người chơi ra khỏi khu vực bị ngăn chặn bở tường, rào bao quanh thì sẽ được gọi là ngoại cảnh.
➢ Người chơi sẽ bị chặn lại nếu muốn di chuyển qua tường.
➢ Nếu muốn di chuyển sang phía bên kia để vào phía bên trong của tường thì người chơi phải tìm cách trèo qua hoặc dùng các vật bất kì xung quanh nào để bật qua tường.



3.6.1.4. Giao diện nội cảnh


Hình 3. 10. Giao diện nội cảnh
➢ Khi người chơi đã di chuyển vào trong khu vực ma trận thì sẽ bị bao quanh bởi những bức tường, những chướng ngại vật.
➢ Người chơi dễ dàng ẩn nấp, nhắm bắn đối thủ khi vào những địa hình này.
➢ Khu vực này cũng có thể xuất hiện nhưng vật phẩm hữu ích cho bạn.


3.6.1.5. Giao diện địa hình trang trại


Hình 3. 11. Giao diện địa hình trang trại

➢ Khung cảnh của địa hình này được dựa trên bối cảnh của một trang trại, có giếng nước, lều, hàng rào, …
➢ Những chướng ngại vật như hàng rào, giếng nước làm giảm độ sát thương của viên đạn.
➢ Quái vật ở ngoài rào sẽ không được phép di chuyển vào phía bên trong hàng rào.
➢ Ở địa hình này rất dễ cho việc nhắm bắn vì người chơi luôn giữ được khỏang cách đối với quái vật qua hàng rào.







3.6.1.6. Giao diện địa hình phòng bếp


      Hình 3. 12. Giao diên phòng bếp

➢ Ở giao diện này, địa hình có các đồ vật như trong phòng bếp, ví dụ tủ lạnh, bàn ghế, bồn rửa bát, …
➢ Quái thú xuất hiện ngẫu nhiên trong lúc bạn khám phá địa hình.
➢ Nhiều đồ vật trong bếp dẫn sẽ khó bắn trúng quái thú hơn nên đòi hỏi bạn phải thật chuẩn xác trong từng viên đạn vì só lượng đạn có hạn.







3.6.1.7. Giao diện địa hình trong hẻm

      Hình 3. 13. Giao diện hẻm

➢ Địa hình trong hẻm dễ bắn quá thú hơn các địa hình khác vì có thể dễ dàng nhìn thấy quái thú hơn.
➢ Vì địa hình này thuộc dạng mở nên trường hợp bị sát thương cũng tương đối cao.
➢ Địa hình này giống như ma trận, người chơi càng tiến sâu thì sẽ càng khó tìm được đường ra. Nếu muốn thoát khỏi địa hình này, người chơi sẽ phải sử dụng bản đồ.






3.6.1.8. Giao diện địa hình ngõ cụt

      Hình 3. 14. Giao diện ngõ cụt
➢ Địa hình này hiện lên khi người chơi di chuyển đến ngõ cụt, bị chắn bởi bức tường ngay trước mắt và sẽ không thể di chuyển thẳng được nữa.
➢ Để thoát khỏi địa hình này, người chơi buộc phải đi ngược lại hoặc rẽ sang hướng khác để tiếp tục di chuyển.
➢ Nếu đứng mãi một chỗ mà không có cách giải quyết thì sẽ tốn thời gian chơi game.
➢ Người chơi nếu gặp phải ngõ cụt như thế này nên di chuyển bằng đường khác nhanh vì  tình thế sẽ rất bất lợi khi quái thú xuất hiện sẽ gây sát thương đến người chơi một cách dễ dàng.


3.6.1.9. Giao diện nhắm bắn qua cửa sổ

      Hình 3. 15. Giao diện góc phòng
➢ Ở giao diện này, người chơi có thể nhắm bắn qua cửa sổ một cách dễ dàng.
➢ Trường hợp quái thú xuất hiện ngẫu nhiên cũng có thể tháo chạy bằng cách nhảy qua khung cửa sổ.
➢ Người chơi có thể ẩn nấp bên dưới, trái hoặc phải khung để nhắm bắn.
➢ Khung cửa có kích thước không quá lớn khiến cho quá thú không thể chui qua được nên người chơi sẽ giảm được trường hợp quái xuất hiện và chui qua cửa sổ.
➢ Nếu như không muốn ở địa hình này bạn có thể nhảy qua khung hoặc quay lại đi đường khác.
➢ Âm thanh khi nhảy lên cửa khác với âm thanh bước trên đường bằng phẳng, tạo cảm giác hồi hộp, gay cấn như chính mình đang ở trong game




3.6.1.10. Giao diện địa hình phòng tắm



      Hình 3. 16. Giao diện phòng tắm
➢ Ở địa hình này có tất cả các đò dùng trong phòng tắm như: đèn, bồn vệ sinh, bồn tắm, …
➢ Địa hình này rất chật hẹp và nhiều chướng ngại vật, cản trở độ chính xác của viên đạn.
➢ Nếu di chuyển vào địa hình này bạn cần bước đi này lập tức nếu không quái thú xuất hiện sẽ rất khó khi tiêu diệt chúng.
➢ Nếu quái vật xuất hiện mà người chơi chưa kịp di chuyển thì có thể dùng các chướng ngại vật sẵn có để ẩn nấp, nhưng việc ẩn nấp sẽ không được lâu nếu quái thú không bỏ đi mà tiếp tục đi quanh nhà tắm, việc này sẽ rất tốn thời gian chơi game.
➢ Giải pháp tốt nhất nếu như gặp phải tình huống này là bạn phải ngắm bắn thật chuẩn xác khi bắn quái thú nếu không bạn sẽ chịu sát thương.


Hình 3. 17. Giao diện di chuyển trong nhà tắm
➢ Khu vực càng tối tăm này thì càng dễ dàng nhặt được vật phẩm hữu ích.
➢ Bạn nên chú ý ở nhưng góc khuất và tối, nơi đây dù có thể chứa nhưng nguy hiểm dình dập nhưng cũng có thể là nguồn sống mãnh liệt.
➢ Cửa sổ cũng có thể giúp bạn quan sát bên ngoài 1 cách kĩ lưỡng nhưng cũng cẩn thận vì có thể bạn sẽ đụng độ quái vật.



3.6.1.11. Giao diện địa hình vườn cây


Hình 3. 18. Giao diện địa hình vườn cây
➢ Khu vực vườn cây này có nhiều vật cẩn dẫn đế di chuyển khó khăn.
➢ Khu vực này cũng là một nơi lí tưởng để ẩn lấp và chạy trốn quái vật vì do thân hình to lớn nên quái vật di chuyển 1 cách chậm chạp.
➢ Với khung cảnh rộng chúng ta có thể dễ dàng quan sát từ xa và tránh việc gặp phải quái vật.


3.6.1.12. Giao diện địa hình vách nhà

Hình 3. 19. Giao diện địa hình vách nhà
➢ Giao diện này là chuyển giao giữa hai địa hình ví dụ địa hình phòng khách và địa hình nhà bếp.
➢ Giao diện này có vùng khuất rất lớn nên dễ bị quái thú xuất hiện bất ngờ sát thương, người chơi cần  tập trung khi bước vào điạ hình này.
➢ Địa hình này cũng có rất nhiều cách để tháo chạy như di chuyển lên phía trước để tới địa hình khác nhiều vật cản hơn để ẩn nấp hoặc nhảy qua khung cửa hoặc di chuyển ngược lại để dụ quái vật đến địa hình khác có lợi cho mình hơn.


3.6.1.13. Giao diện xuất hiện nhiều quái thú

Hình 3. 20. Giao diện xuất hiện nhiều quái thú
➢ Khung cảnh này là một nơi rất là nguy hiểm do hành lang chống nên dễ dàng thu hút nhiều quái vật.
➢ Ở khung cảnh này bạn cần sự khéo léo để có thể tiêu diệt và vượt qua nhưng con quái vật 1 cách hợp lý nhất.
➢ Đây mặc dù là nhưng con quái vật cấp đầu với lượng máu thấp và sát thương nhỏ nhưng do chúng rất đông nên bạn hết sức chú ý giữ máu để cho nhưng lút thắt tiếp theo.
CHƯƠNG 4: KẾT LUẬN
4.1 Kết quả đạt được của đề tài
➢ Tìm hiểu, nắm bắt được các công cụ thiết kế game 
➢ Biết được cách thiết kế game động và cách tổ chức dữ liệu
➢ Game tương đối dễ điều khiển phù hợp với nhiều lứa tuổi khác nhau
➢ Tương thích nhiều màn chơi, giúp người chơi có nhưng trải nghiệm khác nhau.
➢ Âm thanh sống động tạo cảm giác như thật.
➢ Hiệu ứng giúp người chơi trải nghiệm cảm giác mới.
➢ Game chạy mượt mà, không giật lag
➢ Có nhiều hiệu ứng trong game
4.2 Hạn chế của đề tài
➢ Hệ thống game Đại chiến Dragon mới dừng lại ở giải các module cơ bản của game, chưa phong phú ở các loại súng và enemy.
➢ Chưa có bảng xếp hạng.
➢ Chưa có sự kết nối nhiều người chơi.
➢ Giao diện game còn tương đối đơn giản và chưa thật sự phong phú.
4.3 Hướng phát triển của đề tài
➢ Xây dựng thêm các phần bổ trợ thêm cho game cũng như số lượng các loại vũ khí, enemy. Bổ sung các module hỗ trợ cho các game.
➢ Xây dựng tương tác nhiều người chơi.
➢ Xây dựng bảng xếp hạng giúp người chơi có sự ganh đua.
➢ Thiết kế giao diện 1 cách chân thực hơn.


TÀI LIỆU THAM KHẢO
1. Tài liệu lập trinh GameUnity2D cơ bản:
➢ 1.http://forum.unity3d.com/threads/unity-jump-start-video tutorials.26785/
➢ 2.http://www.raywenderlich.com/61532/unity-2d-tutorial-getting-started
2.    Lập Trình Game Mobile Đà Nẵng
nguon: http://www.unity3d.com.vn/2014/03/tong-hop-tai-lieu-unity3d.html
3.  Nguyễn Văn Hậu, Java nâng cao. Hưng Yên, Việt Nam: Khoa Công nghệ Thông tin- UTEHY.
4. Cuốn ngôn ngữ lập trình C# của APTECH | TIẾNG VIỆT 
Link download: 
https://www.dropbox.com/s/dpf6jt5al2elzs1/NgonngulaptrinhC%23.pdf
5.  Cuốn PROFESSIONAL PROGRAMMING FOR REAL LIFE C# | TIẾNGVIỆT 
Link download: 
https://www.dropbox.com/s/o1wkskck7lj1bwu/PROFESSIONAL%20PROGRAMMING%20FOR%20REAL%20LIFE.pdf
6. C# 3.0 Cookbook, 3rd Edition của Jay Hilyard, Stephen Teilhet
Link download: 
https://www.dropbox.com/s/lnxii4zwefuq128/C%23%203.0%20Cookbook%2C%203rd%20Edition.pdf

Xây dựng game Đại chiến Dragon trên Unity

7


