chương tổng_quan về đề_tài lý_do chọn đề_tài hiện_nay từ việc quản_lý thông_tin trên sổ_sách việc quản_lý thông_tin sinh_viên trên các hệ_thống thông_tin đã trở_nên phổ_biến hơn và mang lại nhiều ưu_điểm hơn cách lưu_trữ giấy_tờ truyền_thống các hệ_thống quản_lý hiện_tại chủ_yếu xây_dựng trên bộ công_cụ microsoft office của microsoft bộ công_cụ này rất dễ sử_dụng và dễ quản_lý tuy_nhiên để sử_dụng lâu_dài phải kèm theo chi_phí bản_quyền và cả chi_phí nâng_cấp phần_cứng cho hệ_thống tới thời_điểm hiện_tại các lập_trình_viên đã phát_triển nhiều bộ công_cụ cũng như các framework open source có các đặc_điểm không có chi_phí bản_quyền triển_khai trên các dự_án thực_tế dễ_dàng hiệu_suất của sản_phẩm cũng không thua_kém gì các phần_mềm trả phí và đặc_biệt hơn cộng_đồng hỗ_trợ cho các open source rất là lớn có_thể kể đến một_số framework cho lập_trình web được giới lập_trình_viên ưu_ái như spring framework lavarel framework zend framework ra_đời từ năm spring framework đã làm cho ứng_dụng doanh_nghiệp đơn_giản và dễ_dàng hơn spring framework là mã nguồn mở phổ_biến nhất hiện_nay để xây_dựng ứng_dụng cho doanh_nghiệp chiếm thị_phần đến các dự_án viết bằng java web từ các lợi_ích của spring framework việc phát_triển một hệ_thống quản_lý sinh_viên thay_thế cho các hệ_thống quản_lý hiện_tại trở_nên khả_thi hơn và cần_thiết phải thay_đổi mục_tiêu của đề_tài tìm_hiểu về spring framework tìm_hiểu về hibernate framework tìm_hiểu về cách tích_hợp hibernate framework vào trong dự_án spring framwork tìm_hiểu về cách xây_dựng trang_web với html css javascript phân_tích hệ_thống quản_lý sinh_viên dựa vào những kiến_thức đã tìm_hiểu được thực_hiện triển_khai hệ_thống quản_lý với spring framework giới_hạn và phạm_vi của đề_tài nền_tảng phát_triển web application web service giao_diện sử_dụng html css bootsrap jquery ngôn_ngữ lập_trình java công_nghệ phát_triển sử_dụng spring framework tích_hợp thêm các công_nghệ khác như hibernate jsp servlet công_cụ phát_triển intellij sql server management tomcat server nội_dung thực_hiện nội_dung thực hiệnnghiên cứu cụ_thể như sau nghiên_cứu các web framework trên các nền_tảng công_nghệ khác như java php phân_tích yêu_cầu và đề_xuất giải_pháp web framework trên công_nghệ net thiết_kế đặc_tả hệ_thống xây_dựng cơ_sở dữ_liệu lập_trình cho các module của hệ_thống kiểm thử hệ_thống triển_khai thực_nghiệm hệ_thống trên mạng internet phương_pháp tiếp_cận sử_dụng các phương_pháp nghiên_cứu và thực_hành o phương_pháp đọc tài_liệu o phương_pháp phân_tích chức_năng o phương_pháp thực_nghiệm chương tổng_quan về một_số framework và công_cụ java tổng_quan về maven giới_thiệu về maven maven là công_cụ quản_lý và thiết_lập tự_động dự_án phần_mềm chủ_yếu dùng cho các lập_trình_viên java nhưng nó cũng có_thể được dùng để xây_dựng và quản_lý các dự_án dùng c ruby scala hay ngôn_ngữ khác maven phục_vụ mục_đích tương_tự như apache ant nhưng nó dựa trên khái_niệm khác và cách hoạt_động khác maven hỗ_trợ việc tự_động_hóa các quá_trình tạo dự_án ban_đầu thực_hiện biên_dịch kiểm thử đóng_gói và triển_khai sản_phẩm được phát_triển bằng ngôn_ngữ java cho_phép maven chạy trên nhiều nền_tảng khác nhau windows linux và mac os maven hoạt_động như nào maven dùng khái_niệm project object model pom để mô_tả việc build project các thành_phần phụ_thuộc và các module nó định_nghĩa các target cho việc khai_báo task trình biên_dịch đóng_gói và thứ_tự hoạt_động để mọi việc diễn ra tốt nhất trong mỗi project maven tạo ra một file pom trong file này định_nghĩa ra những task như task khi chạy test task khi build và khi chạy maven sẽ dựa vào những định_nghĩa này để thao_tác với project tại_sao cần maven khi một project do nhiều nhóm phát_triển ví_dụ có team cùng tham_gia dự_án team đó ở quốc_gia khác nhau vì_thế chúng_ta luôn cần có một sự liên_lạc để thông nhất trong việc lập_trình vì_thế phải có một cái chuẩn nào đó để tất_cả mọi người cùng tuân theo như trong việc sử_dụng những thư_viện nào version của thư_viện tất_cả những thứ như_vậy đều được maven quản_lý đối_với những hệ_thống lớn phức_tạp sử_dụng nhiều thư_viện lại đòi_hỏi phải release liên_tục cho_nên công_việc đóng_gói build deploy quản_lý nâng_cấp và bào trì chúng rất mất thời_gian và lúc đó ta có maven các lệnh command của maven cấu_trúc lệnh mvn options một_số lệnh hay dùng build một project mvn package deploy một project lên tomcat mvn tomcat deploy chạy unit test mvn test clean project mvn clean dependency trong maven dependency chính là cách import thư_viện vào project thông_qua maven cơ_chế import thư_viện thông_qua maven ví_dụ để import thư_viện redis bình_thường ta sẽ dowload file redis jar về rồi buildpath trong eclipse nhưng với thẻ dependency maven sẽ tự_động dowload thư_viện đó về thư_mục m trên máy local và buildpath vào project repository http mvnrepository comartifactredis clientsjedis thư_mục mrepository sẽ chứa tất_cả các thư_viện mà maven dowload về từ server center các dependency sẽ tự_động được buildpath trong project tổng_quan về jpa java persistence api khái_quát về jpa jpa là một đặc_tả của sun ra_đời cùng với bản đặc_tả jee jpa không phải là một sản_phẩm và không_thể nó như thành_phần persistence nó cần phải có một cài_đặt orm để hoạt_động và persist các đối_tượng java các framework orm có_thể sử_dụng cho jpa như hibernate toplink open jpa ngày_nay đa_số các nhà_cung_cấp đều hỗ_trợ cài_đặt jpa cho framework persistence của họ vì vây người lập_trình có_thể lựa_chọn nhà cung_cấp tốt nhất tùy thuộc yêu_cầu ứng_dụng của mình lợi_ích của jpa đơn_giản_hóa công_nghệ cho tầng persistence tầng dữ_liệu không phụ_thuộc vào các framework orm có nhiều nhà cung_cấp hỗ_trợ cài_đặt jpa dữ_liệu có_thể được lưu_trữ thông_qua việc orm phiên_bản hiện_tại của jpa hiện_tại jpa đã có phiên_bản cung_cấp nhiều tính_năng hữu_ích cho người lập_trình kiến_trúc jpa jpa sử_dụng metadata để ánh_xạ các đối_tượng persistence với các bảng trong cơ_sở dữ_liệu jpa hỗ_trợ sql như_là một ngôn_ngữ truy_vấn để dễ_dàng xử_lý các truy_vấn cơ_sở dữ_liệu ngôn_ngữ truy_vấn jpa có_thể dùng thực_thi cả truy_vấn tĩnh và truy_vấn động các khái_niệm jpa entity entity là các đối_tượng persistence thể_hiện một mẫu tin trong cơ_sở dữ_liệu entity chỉ là các lớp pojo đơn_giản dễ_dàng tạo dưới đây là một_số đặc_điểm của một entity o entity có_thể tương_tác với cơ_sở dữ_liệu quan_hệ o entity được xác_định thông_qua một định_danh tương_đương với khóa chính trong table của cơ_sở dữ_liệu quan_hệ o entity hỗ_trợ giao_tác transaction o entity hỗ_trợ kế_thừa giống như những lớp thường khác entitymanager entitymanager là một giao_diện interface cung_cấp các api cho việc tương_tác với các entity một_số chức_năng cơ_bản của entitymanager như o persist phương_thức này dùng để lưu một thực_thể mới tạo vào cơ_sở dữ_liệu o merge dùng để cập_nhật trạng_thái của entity vào cơ_sở dữ_liệu o remove xóa một thể_hiện của entity enitymanagerfactory entitymanagerfactory được dùng để tạo ra một thể_hiện của entitymanager các tính_năng của jpa việc giới_thiệu jpa vào trong đặc_tả jee là một bước tiến lớn trong việc đơn_giản_hóa các quy_trình phát_triển ứng_dụng jpa đơn_giản_hóa mô_hình thực_thể dữ_liệu và cộng thểm một_số tính_năng mới mà phiên_bản ejb trước ejb không có giờ_đây người lập_trình có_thể ánh_xạ trực_tiếp các đối_tượng persistence với cơ_sở dữ_liệu quan_hệ jpa có_thể sử_dụng bên ngoài container điều này không dễ thực_hiện trong ejb bạn cũng có_thể sử_dụng jpa trong các ứng_dụng swing một_số tính_năng của jpa jpa hỗ_trợ pluggable tức_là có_thể sử_dụng nhiều nhà hãng cung_cấp thứ ba như hibernate hay toplink hỗ_trợ annotation giảm bớt số lớp yêu_cầu cho việc phát_triển persistence không cần phải viết các mô_tả triển_khai trong xml annotation dựa trên metadata đã hỗ_trợ trong các ứng_dụng jpa đã chuẩn hóa_orm và dễ_dàng phát_triển hơn jpa hỗ_trợ truy_vấn động và tĩnh nhiều ide hỗ_trợ phát_triển ứng_dụng jpa và có_thể tự_động sinh code ánh_xạ từ cơ_sở dữ_liệu thành các entity và ngược_lại các jpa anotation chính các anotation liên_quan đến khai_báo entity o entity biến một javabean trở_thành một entity để chúng_ta có thể thao_tác với database thông_qua việc sử_dụng entity này o table định_nghĩa một entity tương_ứng với một bảng trong cơ_sở dữ_liệu nếu một entity không có anotation này mặc định tên bảng trong database được map có tên tương_ứng với tên của entity o column định_nghĩa một thuộc_tính trong một entity sẽ tương_ứng là một trường của một bảng tương_ứng trong cơ_sở dữ_liệu o id định_nghĩa một thuộc_tính trong một entity sẽ là trường khóa chính tương_ứng trong cơ_sở dữ_liệu o generatedvalue định_nghĩa một thuộc_tính có giá_trị tăng tự_động tương_ứng với trường tăng tự_động trong cơ_sở dữ_liệu tùy cơ_sở dữ_liệu khác nhau các strategy truyền vào cũng khác nhau o embeddable định_nghĩa một composite key chứa các thuộc_tính là các khóa chính của một bảng trong cơ_sở dữ_liệu o idclass chức_năng tương_tự như embeddable tuy_nhiên nó chỉ khai_báo một class khác là composite key của một entity và class khác đó có định_nghĩa các thuộc_tính là khóa chính các anotation liên_quan đến relationship o manytoone định_nghĩa mối quan_hệ nhiều một giữa các entity tương_ứng với mối quan_hệ gữa các bảng trong cơ_sở dữ_liệu o onetomany định_nghĩa mối quan_hệ một nhiều giữa các entity tương_ứng với mối quan_hệ gữa các bảng trong cơ_sở dữ_liệu o onetoone định_nghĩa mối quan_hệ một một giữa các entity tương_ứng với mối quan_hệ gữa các bảng trong cơ_sở dữ_liệu o manytomany định_nghĩa mối quan_hệ nhiều nhiều giữa các entity tương_ứng với mối quan_hệ gữa các bảng trong cơ_sở dữ_liệu _hình ví_dụ về định_nghĩa một entity với các jpa anotation hibernate framework khái_quát về hibernate hibernate ra_đời năm bởi nhà sáng_lập gavin king như một sự thay_thế cho ejb kiểu thực_thể bean hiện_nay phiên_bản mới nhất của hibernate là final hibernate framework là một giải_pháp orm mã nguồn mở gọn_nhẹ hibernate giúp đơn_giản_hóa_sự phát_triển của ứng_dụng java để tương_tác với cơ_sở dữ_liệu giúp đơn_giản_hóa_việc tạo dữ_liệu thao_tác_dữ_liệu và truy_cập dữ_liệu đó là một kĩ_thuật lập_trình để ánh_xạ đối_tượng vào dữ_liệu được lưu_trữ trong cơ_sở dữ_liệu các tool orm sử_dụng jdbc api để tương_tác với cơ_sở dữ_liệu _hình mô_hình tương_tác của hibernate trong ứng_dụng lợi_ích của hibernate framework hibernate framework có các lợi_ích như dưới đây mã nguồn mở và nhẹ hibernate framework là mã nguồn mở có giấy_phép lgpl và nhẹ hiệu_suất nhanh hiệu_suất của hibernate freameworj là nhanh bởi_vì bộ_nhớ cache được sử_dụng trong nội_bộ framework có hai loại bộ_nhớ cahce trong hibernate gồm bộ_nhớ cache cấp một và bộ_nhớ cache cấp hai bộ_nhớ cache cấp một được bật bằng lệnh mặc định truy_vấn cơ_sở dữ_liệu đọc lập hql là phiên_bản hướng đối_tượng cả sql nó tạo ra các truy_vấn dữ_liệu độc_lập vì_vậy bạn không cần phải viết các truy_vấn cơ_sở dữ_liệu cụ_thể trước hibernate nếu dự_án có cơ_sở dữ_liệu bị thay_đổi chúng_ta cần phải thay_đổi truy_vấn sql dẫn đến sự_cố bảo_trì tạo bảng tự_động hibernate framework cung_cấp phương_tiện để tạo ra các bảng cơ_sở dữ_liệu tự_động vì_vậy không cần phải tạo ra các bảng trong cơ_sở dữ_liệu bằng tay đơn_giản lệnh join phức_tạp có_thể lấy dữ_liệu từ nhiều bảng một_cách dễ_dàng với hibernate framework cung_cấp thống_kê truy_vấn và trạng_thái cơ_sở dữ_liệu hibernate hỗ_trợ bộ_nhớ cache truy_vấn và cung_cấp số_liệu thống_kê về truy_vấn và trạng_thái cơ_sở dữ_liệu nhược_điểm của hibernate không hỗ_trợ các câu truy_vấn phức_tạp một_số trường_hợp vẫn phải dùng native sql do hibernate không_thể cover hết tất_cả các cú_pháp của các hệ quản_trị cơ sử dữ_liệu bị hạn_chế sự can_thiệp vào câu_lệnh sql do nó được tự_động sinh ra các database mà hibernate hỗ_trợ hibernate hỗ_trợ hầu_hết các rbdms chính dưới đây là danh_sách vài cơ_sở dữ_liệu quan_hệ được hỗ_trợ bới hibernate hsql database engine dbnt mysql postgresql oracle microsoft sql server database sybase sql server informix dynamic server kiến_trúc của hibernate kiến_trúc hibernate bao_gồm nhiều đối_tượng như đối_tượng persistent session factory transaction factory connection factory session transaction có tầng trong kiến_trúc hibernate đó là tầng ứng_dụng java tầng hibernate framework tầng backhand api và tầng database dưới đây là sơ_đồ kiến_trúc hibernate hình kiến_trúc của hibernate dưới đây là một hình_ảnh chi_tiết về kiến_trúc ứng_dụng hibernate với vài lớp core quan_trọng hình kiến_trúc chi_tiết của hibernate hibernate sử_dụng các api java hiện có như jdbc java transaction api jta và jndi jdbc cung_cấp một mức_độ trừu_tượng cơ_bản của cơ_sở dữ_liệu quan_hệ cho_phép hầu_hết các cơ_sở dữ_liệu với trình điều_khiển jdbc được hỗ_trợ bởi hibernate jndi và jta cho_phép hibernate được tích_hợp với các máy_chủ ứng_dụng jee các thành_phần trong kiến_trúc của hibernate để tạo ứng_dụng hibernate đầu_tiên chúng_ta phải biết các thành_phần của kiến_trúc hibernate chúng là như sau đối_tượng configuration là đối_tượng hibernate đầu_tiên bạn tạo trong bất_kỳ ứng_dụng hibernate nào và chỉ cần tạo một lần trong quá_trình khởi tạo ứng_dụng nó đại_diện cho một tập tin cấu_hình hoặc thuộc_tính yêu_cầu của hibernate đối_tượng configuration cung_cấp hai thành_phần chính o database connection thao_tác này được xử_lý thông_qua một hoặc nhiều tệp cấu_hình được hibernate hỗ_trợ các tệp này là hibernate properties và hibernate cfg xml o class mapping setup thành_phần này tạo ra kết_nối giữa các lớp java và các bảng cơ_sở dữ_liệu sessionfactory là một đối_tượng luồng an_toàn và được sử_dụng bởi tất_cả các luồng của một ứng_dụng sessionfactory là đối_tượng nặng nên thường nó được tạo ra trong quá_trình khởi_động ứng_dụng và lưu_giữ để sử_dụng sau_này bạn sẽ cần một đối_tượng sessionfactory cho mỗi cơ_sở dữ_liệu bằng cách sử_dụng một tập tin cấu_hình riêng_biệt vì_vậy nếu bạn đang sử_dụng nhiều cơ_sở dữ_liệu thì bạn sẽ phải tạo nhiều đối_tượng sessionfactory session sử_dụng để có được một kết_nối vật_lý với một cơ_sở dữ_liệu đối_tượng session là nhẹ và được thiết_kế để được tạo ra thể_hiện mỗi khi tương_tác với cơ_sở dữ_liệu các đối_tượng liên_tục được lưu và truy_xuất thông_qua một đối_tượng session transaction đại_diện cho một đơn_vị làm_việc với cơ_sở dữ_liệu và hầu_hết các rdbms hỗ_trợ chức_năng transaction các transaction trong hibernate được xử_lý bởi trình quản_lý transaction và transaction từ jdbc hoặc jta đây là một đối_tượng tùy chọn và các ứng_dụng hibernate có_thể chọn không sử_dụng interface này thay vào đó quản_lý transaction trong code ứng_dụng riêng query các đối_tượng query sử_dụng chuỗi truy_vấn sql hoặc hql để lấy dữ_liệu từ cơ_sở dữ_liệu và tạo các đối_tượng ví_dụ truy_vấn được sử_dụng để ràng_buộc các tham_số truy_vấn giới_hạn số_lượng kết_quả được trả về bởi truy_vấn và cuối_cùng thực_hiện truy_vấn criteria đối_tượng criteria được sử_dụng để tạo và thực_hiện truy_vấn các tiêu_chí định_hướng đối_tượng để lấy các đối_tượng cấu_hình hibernate khi tích_hợp hibernate vào trong ứng_dụng các cấu_hình của hibernate phải được thiết_lập mặc định trong file xml với tên mặc định là hibernate cfg xml cấu_trúc của file hibernate cfg xml gồm phần chính phần khai_báo thẻ head thẻ và thẻ là các thẻ bắt_buộc của file xml phục_vụ cho việc cấu_hình của hibernate các thẻ là các thẻ thực_hiện cấu_hình cho hibernate bao_gồm cấu_hình các thuộc_tính như tên driver class url của database username của database password dialect các thẻ mapping các thẻ này sẽ khai_báo các entity đã được cấu_hình bởi jpa anotation hình nội_dung một file cấu_hình cho kết với mysql database mapping dữ_liệu với jpa anotation trong hibernate như đã nói trong phần java persistence api hay jpa là một đăc tả java cho việc ánh_xạ giữa các đối_tượng java tới cơ_sở dữ_liệu quan_hệ sử_dụng cộng nghệ phổ_biến là orm object relational mapping jpa api cung_cấp đầy_đủ các công_cụ cho_phép người lập_trình có_thể tạo cơ_sở dữ_liệu một_cách đơn_giản và nhanh_chóng jpa api có_thể dùng để persist một đối_tượng business pojo vào trong cơ_sở dữ_liệu hoặc lấy dữ_liệu từ cơ_sở dữ_liệu và ánh_xạ ra các đối_tượng business một_cách đơn_giản bất_kỳ một ứng_dụng doanh_nghiệp enterprise nào cũng đều cần phải thực_hiện các tháo tác crud đến database bằng việc lưư trữ trích rút lượng lớn dữ_liệu các nhà phát_triển developers cần phải viết nhiều code để thực_hiện các việc này với công_nghệ jdbc trước đây developers sẽ phải chủ_động thực_hiện các việc từ mở kết_nối vào database tạo các statement resultset cho đến đóng tất_cả các thứ đó lại và code sẽ trở_nên cồng_kềnh developers cần phải làm_việc với cả java code và sql thực_tế từng database khác nhau thì câu sql có một_số phần khác nhau nên đòi_hỏi developers phải nắm được sự khác_biệt này để viết code cho phù_hợp khi ứng_dụng muốn chuyển từ database sang database khác ví_dụ từ oracle sang ms sql server thì chắc_chắn sẽ có một_số phần của câu sql cần phải đổi công_việc sửa code lại đòi_hỏi developers phải test lại ứng_dụng điều này sẽ tốn thời_gian phát_triển để khắc_phục nhược_điểm này đã có rất nhiều frameworks ra_đời với mục_đích giúp xóa đi vấn để về tương_thích giữa các database giúp developers tập_trung vào phần xử_lý nghiệp_vụ tổng_quan về servlet định servlet servlet có_thể xem như_là một sự mở_rộng của cgi tùy vào ngữ_cảnh sevlet có_thể được mô_tả bằng nhiều cách servlet là một công_nghệ được sử_dụng để tạo ra ứng_dụng web servlet là một api cung_cấp các interface và lớp bao_gồm các tài_liệu servlet là một thành_phần web được triển_khai trên máy_chủ để tạo ra trang web động có nhiều interface và các lớp trong api servlet như servlet genericservlet httpservlet servletrequest servletresponse kiến_trúc của servlet hình vị_trí của servlet trong một ứng_dụng web trong công_nghệ servlet có hai gói quan_trọng là javax servlet và javax servlet http hai gói này cung_cấp các interface và lớp để tạo ra các servlet interface servlet định_nghĩa các phương_thức trong vòng đời của một servlet lớp genericservlet thực_thi servlet lớp httpservlet kế_thừa genericservlet cung_cấp các phương_thức để xử_lý các phương_thức http như doget xử_lý get dopost xử_lý post để tạo một servlet chúng_ta cần phải thực_thi interface servlet trực_tiếp hoặc gián_tiếp thông_qua genericservlet hoặc httpservlet trong thực_tế lớp servlet của chúng_ta thường kế_thừa httpservlet để có_thể xử_lý các phương_thức http nhiệm_vụ của servlet servlet thực_hiện các nhiệm_vụ chính sau đây đọc dữ_liệu rõ_ràng do khách_hàng trình duyệt gửi điều này bao_gồm một mẫu html trên một trang_web hoặc nó cũng có_thể đến từ một applet hoặc một chương_trình khách_hàng http tùy chỉnh đọc dữ_liệu yêu_cầu http ẩn được gửi bởi khách_hàng trình duyệt điều này bao_gồm các cookie loại phương_tiện truyền_thông và các chương_trình nén mà trình duyệt hiểu được xử_lý dữ_liệu và tạo ra các kết_quả quá_trình này có_thể yêu_cầu nói_chuyện với một cơ_sở dữ_liệu thực_hiện một cuộc gọi rmi hoặc corba gọi một dịch_vụ web hoặc tính trực_tiếp phản_hồi gửi dữ_liệu rõ_ràng tức_là tài_liệu tới khách_hàng trình duyệt tài_liệu này có_thể được gửi bằng nhiều định_dạng bao_gồm văn_bản html hoặc xml nhị_phân hình_ảnh gif excel gửi phản_hồi http ẩn cho khách_hàng trình duyệt điều này bao_gồm nói với trình duyệt hoặc các trình khách khác loại tài_liệu đang được trả về ví_dụ html thiết_lập cookie và các tham_số bộ_nhớ đệm và các tác vụ khác nhược_điểm của servlet lập_trình_viên phải code và html trong cùng một java file làm cho việc phát_triển cũng như bảo_trì phần_mềm trở_nên khó_khăn tổng_quan về jsp giới_thiệu về jsp jsp javaserver pages là một công_nghệ để phát_triển các trang web động jsp giúp các nhà phát_triển chèn java code vào các trang html bằng cách sử_dụng các thẻ jsp đặc_biệt jsp là một kiểu java servlet được thiết_kế để tạo ra giao_diện người dùng cho một ứng_dụng java web các nhà phát_triển web viết các jsp như các tệp văn_bản kết_hợp mã html hoặc xhtml các phần_tử xml các action và lệnh jsp sử_dụng jsp bạn có_thể thu_thập_dữ_liệu đầu_vào từ người dùng thông_qua các form của trang_web trình_bày các bản ghi từ một cơ_sở dữ_liệu hoặc một nguồn khác và tạo các trang web động các thẻ jsp có_thể được sử_dụng cho nhiều mục_đích khác nhau chẳng_hạn như truy_xuất thông_tin từ cơ_sở dữ_liệu hoặc đăng_ký mới truy_cập các thành_phần javabeans kiểm_soát giữa các trang và chia_sẻ thông_tin giữa các request các trang các trang javaserver thường_phục_vụ cùng một mục_đích như các chương_trình được thực_hiện bằng cách sử_dụng cgi nhưng jsp cung_cấp một_số lợi_thế so với cgi hiệu_suất tốt hơn đáng_kể vì jsp cho_phép nhúng các thành_phần động trong các trang html thay_vì có các tệp cgi riêng_biệt jsp luôn được biên_soạn trước khi chúng được xử_lý bởi máy_chủ không giống như cgi perl yêu_cầu máy_chủ tải một trình thông_dịch và tập lệnh đích mỗi khi trang được request giống như servlet jsp cũng có quyền truy_cập vào tất_cả các enterprise java apis bao_gồm jdbc jndi ejb jaxp các trang jsp có_thể được sử_dụng kết_hợp với các servlet xử_lý logic nghiệp_vụ model được hỗ_trợ bởi java servlet jsp là một phần của java ee một nền_tảng hoàn_chỉnh cho các ứng_dụng enterprise kiến_trúc của jsp sơ_đồ sau cho thấy vị_trí của jsp container và các tệp jsp trong một ứng_dụng web hình kiến_trúc của jsp quá_trình xử_lý của một trang jsp giống như trang bình_thường trình duyệt của bạn gửi một http request đến máy_chủ web máy_chủ web nhận ra rằng yêu_cầu http là dành cho một trang jsp và chuyển nó tới một công_cụ jsp điều này được thực_hiện bằng cách sử_dụng url hoặc trang jsp kết_thúc bằng jsp thay_vì html công_cụ jsp tải trang jsp từ đĩa và chuyển nó sang một nội_dung servlet chuyển_đổi này rất đơn_giản trong đó tất_cả các văn_bản được chuyển_đổi thành các câu_lệnh println và tất_cả các phần_tử jsp được chuyển_đổi sang mã java mã này thực_hiện hành_vi tương_ứng của trang công_cụ jsp biên_dịch servlet thành một lớp thực_thi và chuyển_tiếp yêu_cầu ban_đầu đến một công_cụ servlet một phần của máy_chủ web được gọi_là công_cụ servlet nạp lớp servlet và thực_thi nó trong quá_trình thực_thi servlet tạo ra một đầu_ra ở định_dạng html kết_quả đầu_ra được chuyển_tiếp đến máy_chủ web bằng servlet engine bên trong http response máy_chủ web chuyển_tiếp phản_hồi http tới trình duyệt của bạn về nội_dung html cuối_cùng trình duyệt web xử_lý và hiển_thị trang html tới người dùng hình sơ_đồ xử_lý một trang jsp thông_thường jsp container kiểm_tra xem liệu một servlet cho tệp jsp đã tồn_tại và liệu ngày sửa_đổi trên jsp cũ hơn servlet hay không nếu jsp lớn hơn servlet được tạo ra của nó jsp container giả_định rằng jsp không thay_đổi và servlet được tạo ra vẫn phù_hợp với nội_dung của jsp điều này làm cho quá_trình này hiệu_quả hơn với các ngôn_ngữ kịch_bản khác như php và do_đó nhanh hơn vì_vậy nói cách khác một trang jsp thực_sự là một cách khác để viết một servlet mà không cần phải là một chương_trình lập_trình java ngoại_trừ giai_đoạn dịch từ jsp sang servlet một trang jsp được xử_lý chính_xác như một servlet thông_thường ưu_điểm của jsp các lợi_ích khác của việc sử_dụng jsp đối_với các công_nghệ khác active server pages asp có lợi_thế của jsp so với asp thứ nhất phần động được viết bằng java không phải visual basic hoặc ngôn_ngữ cụ_thể khác vì_vậy nó mạnh hơn và dễ sử_dụng hơn thứ hai nó là khả_chuyển cho hệ điều_hành khác và máy_chủ web không phải của microsoft servlet thuần jsp thuận_tiện hơn servlet thuần để viết và để sửa_đổi html hơn là sử_dụng lệnh println để tạo ra html rối_rắm server side includes ssi ssi thực_sự chỉ dành cho những thứ đơn_giản không phải cho các chương_trình thực sử_dụng form dữ_liệu tạo các kết_nối cơ_sở dữ_liệu và những thứ tương_tự tổng_quan về spring framework giới_thiệu về spring framework spring framework là một framework phát_triển các ứng_dụng java enterprise ban_đầu nó được viết bới rod johnson và lần đầu_tiên được phát_hành theo giấy_phép apache vào tháng năm spring có kích_thước thường nhẹ phiên_bản cơ_bản của nó có kích_thước khoảng mb ngoài_ra nó còn là một java platform mã nguồn mở một giải_pháp gọn_nhẹ dành cho java enterprise với spring framework các nhà phát_triển có_thể tạo ra các mã có hiệu_suất cao dễ kiểm thử và có_thể sử_dụng lại được các tính_năng core của spring có_thể sử_dụng trong việc phát_triển bất_kì các ứng_dụng java bên cạnh đó phần mở_rộng được sử_dụng để xây_dựng các ứng_dụng web trên nền_tảng java ee mục_tiêu của spring là làm cho việc phát_triển ứng_dụng jee dễ_dàng hơn và thúc_đẩy việc lập_trình tốt hơn bằng mô_hình pojo based lợi_ích của spring spring cho_phép các nhà phát_triển tạo các ứng_dụng cấp enterprise sử_dụng các pojo lợi_ích của việc sử_dụng các pojo là bạn không cần một sản_phẩm chứa ejb như một máy_chủ ứng_dụng mà bạn chỉ có_thể sử_dụng một bộ chứa servlet mạnh_mẽ như tomcat hoặc một_số sản_phẩm thương_mại khác spring được tổ_chức theo kiểu module mặc_dù số_lượng các gói và các lớp là khá nhiều nhưng bạn chỉ cần quan_tâm đến những gì bạn cần và không cần quan_tâm đến phần còn lại spring sử_dụng một_số công_nghệ hiện có như một_số orm framework logging frameworks jee quartz jdk timers và các công_nghệ view khác dễ_dàng kiểm thử một chương_trình được viết bằng spring web framework của spring là một web mvc framework có thiết_kế tốt nó là một thay_thế tuyệt_vời cho struts và các công_nghệ kém phổ_biến khác spring cung_cấp một api thuận_tiện để dịch các ngoại_lệ công_nghệ cụ_thể ném bởi jdbc hibernate hoặc jdo chẳng_hạn vào các trường_hợp ngoại_lệ nhất_quán không được kiểm_soát ioc container có trọng_lượng nhẹ điều này có lợi cho việc phát_triển và triển_khai các ứng_dụng trên các máy_tính có bộ_nhớ và tài_nguyên cpu hạn_chế spring cung_cấp một giao_diện quản_lý transaction nhất_quán có_thể mở_rộng đến một local transaction ví_dụ như sử_dụng một cơ_sở dữ_liệu và mở_rộng lên các global transaction sử_dụng jta sơ qua về di và ioc di dependency injection là một design pattern để loại_bỏ sự phụ_thuộc vào mã lập_trình vì_vậy nó giúp rễ ràng quản_lý và test ứng_dụng dependency injection giúp mã lập_trình liên_kết lỏng với nhau ioc inversion of control hay ioc container có trách_nhiệm khởi tạo configure gắn_kết các đối_tượng có hai kiểu của ioc containers là beanfactory và applicationcontext các module của spring framework spring framework bao_gồm nhiều tính_năng được tổ_chức thành khoảng module các module này được phân nhóm thành core container data accessintegration web aop instrumentation messaging và test spring được chia làm nhiều module khác nhau tùy theo mục_đích sử_dụng mà ta dùng trong trong các module đó dưới đây là kiến_trúc tổng_thể của spring framework hình các module của spring framework core container bao_gồm các module spring core spring beans spring context springcontext support và spring expression spring expression language o module spring core và spring beans cung_cấp những phần cơ_bản của framework bao_gồm ioc và dependency injection o module spring context xây_dựng trên một nền_tảng vững_chắc được cung_cấp bởi các module core và beans được sử_dụng để truy_cập vào các đối_tượng trong framework style tương_tự như việc đăng_ký một jndi spring context support hỗ_trợ tích_hợp libraries của bên thứ third party vào ứng_dụng spring như caching ehcache guava jcache mailing javamail schedule commonj quatz và các template engine freemarker jasperreports velocity o module spring expression cung_cấp một expression language mạnh_mẽ cho việc truy_vấn và tính_toán một đồ_thị đối_tượng lúc runtime nó được kế_thừa và mở_rộng từ unified expression language unified el ngôn_ngữ này hỗ_trợ setting và getting giá_trị các property gọi phương_thức truy_cập vào nội_dung của mảng tập_hợp và chỉ mục operator logic và tính_toán đặt tên biến và truy_xuất các đối_tượng theo tên từ ioc container của spring core container bao_gồm các module jdbc orm oxm jms và transaction o module spring jdbc cung_cấp một lớp jdbc abstraction để loại_bỏ những code tẻ_nhạt cả jdbc và phân_tích những mã lỗi cụ_thể của database vendor o module spring orm cung_cấp lớp tích_hợp với các orm api phổ_biến như jpa jdo và hibernate o module spring oxm cung_cấp lớp abstraction hỗ_trợ triển_khai objectxml mapping o module spring jms chứa các tính_năng tạo và sử_dụng các message từ spring framework nó được tích_hợp với spring messaging o module spring transaction hỗ_trợ quản_lý giao_dịch theo chương_trình và khai_báo cho các lớp mà thực_hiện các giao_diện đặc_biệt và cho tất_cả các pojo của bạn web tầng này bao_gồm các module spring web spring webmvc spring websocket và springwebmvc portlet o module spring web cung_cấp tính_năng tích_hợp web theo định_hướng cơ_bản như chức_năng tập tin tải lên nhiều phần dữ_liệu và khởi tạo các container ioc sử_dụng nghe servlet và một bối_cảnh ứng_dụng web theo định_hướng o module spring webmvc bao_gồm việc triển_khai model view controller mvc của spring cho các ứng_dụng web o module spring websocket cung_cấp hỗ_trợ cho websocket based giao_tiếp hai chiều giữa client và server trong các ứng_dụng web o module springwebmvc portlet cung_cấp việc triển_khai mvc được sử_dụng trong môi_trường portlet và ánh_xạ chức_năng của module web servlet các module khác có vài module quan_trọng khác như module aop các khía_cạnh instrumentation web và test mô_tả chi_tiết như sau o module aop cung_cấp một thực_hiện lập_trình hướng khía_cạnh cho_phép bạn xác_định phương pháp chặn và pointcuts để sạch tách mã thực_hiện chức_năng đó nên được tách ra o module aspects cung_cấp tích_hợp với aspectj mà_lại là một khuôn_khổ aop mạnh_mẽ và trưởng_thành o module instrumentation cung_cấp thiết_bị đo_đạc lớp hỗ_trợ và triển_khai lớp bộ nạp được sử_dụng trong các máy_chủ ứng_dụng nhất_định o module messaging cung_cấp hỗ_trợ cho stomp như websocket sub protocol để sử_dụng trong các ứng_dụng nó cũng hỗ_trợ một mô_hình lập_trình chú_thích cho việc định_tuyến và xử_lý tin nhắn stomp từ các máy khách websocket o module test hỗ_trợ việc kiểm_tra các thành_phần mùa xuân với junit hoặc testng khuôn_khổ các project trong hệ_sinh_thái của spring spring mvc giúp cho các nhà phát_triển xây_dựng ứng_dụng web thao mô_hình mvc mà vẫn giữ được các đặc_điểm của spring dựa trên mô_hình mvc kinh_điển spring mvc sẽ giúp các nhà phát_triển xấy dựng các web spring security cung_cấp các cơ_chế xác_thực authentication và phân_quyền authorization cho ứng_dụng web spring boot dựa vào spring sử_dụng automatic configuration để loại_bỏ configuration truyền_thống chuyển_đổi application thành dạng executable spring test với unit test bạn có một tập_hợp các mock implementation để viết unit test tương_thích với jndi servlet portlets còn với integration test module này hỗ_trợ việc load các bean theo nhiều context khác nhau ngoài_ra còn rất nhiều các dự_án khác như spring integration spring io spring cload spring mobile spring restful service spring social tổng_quan về spring mvc giới_thiệu về spring mvc spring mvc là một framework project mã nguồn mở của spring framework mvc lần_lượt là ba chữ_cái đầu_tiên của ba từ model view và controller mvc là một mô_hình ứng_dụng mà ở đó các thành_phần được phân_tách ra thành các lớp riêng_biệt với các nhiệm_vụ đặc_trưng view sẽ là lớp cho các thành_phần có chức_năng hiển_thị giao_tiếp trực_tiếp với người dùng nhiệm_vụ của các thành_phần trong view là trình_bày các dữ_liệu từ model đến người dùng cuối model là các thành_phần có khả_năng lưu_trữ và vận_chuyển thông_tin quá_trình ném dữ_liệu vào model sẽ được thực_hiện bởi controller controller là các thành_phần giúp cho việc xử_lý logic các thao_tác_nghiệp_vụ nhiệm_vụ của controller là lấy dữ_liệu từ model xử_lý dữ_liệu và cập_nhật lại dữ_liệu vào model đối_với spring mvc view sẽ là các trang jsp giúp cho việc hiển_thị dữ_liệu lên browser _dữ_liệu được lấy ra từ model là các pojo hay ta còn gọi_là các domain object cụ_thể hơn nó là các đối_tượng có các thuộc_tính có khả_năng mang vác dữ_liệu trong các luồng nghiệp_vụ của ứng_dụng cuối_cùng là controller là các lớp đặc_biệt có chứa các phương_thức có khả_năng nhận yêu_cầu xử_lý yêu_cầu cập_nhật dữ_liệu và chuyển_tiếp dữ_liệu trong ứng_dụng flow trong spring mvc hình luồng thực_thi trong spring mvc bất_kỳ request nào tới ứng_dụng web đều sẽ được gửi tới front controller dispatcher servlet front controller sẽ sử_dụng handler mapping để biết được controller nào sẽ xử_lý request đó controller nhận request gọi tới các class service thích_hợp xử_lý yêu_cầu sau khi xử_lý xong controller sẽ nhận được model từ tầng service hoặc tầng dao controller gửi model vừa nhận tới front controller dispatcher servlet dispatcher servlet sẽ tìm các mẫu view sử_dụng view resolver và truyền model vào nó view template model view page được build và gửi trả lại front controller front controller gửi một page view tới trình duyệt để hiển_thị nó cho người dùng trong mô_hình mvc thì model là các file pojo service dao thực_hiện truy_cập database xử_lý business view là các file jsp html control là dispatcher controller handler mapping controller thực_hiện điều hướn các request lợi_ích của spring mvc các tầng trong spring mvc độc_lập nên việc unit test dễ_dàng hơn phần view có_thể tích_hợp với nhiều framework về giao_diện như jsf freemarker themeleaf spring mvc base trên các pojo class nên các hành_động của nó khá đơn_giản hỗ_trợ cả annotation và xml config giúp_việc phát_triển nhanh hơn sạch hơn cung_cấp việc phân_chia một_cách rõ_ràng linh_hoạt giữa controller service data access layer chương phân_tích và thiết_kế hệ_thống quản_lý sinh_viên thử_nghiệm cho đhspkt hưng yên phát_biểu bài_toán xây_dựng website quản_lý các thông_tin liên_quan tới sinh_viên trong các trường đại_học sử_dụng spring framework thử_nghiệm cho khoa công_nghệ_thông_tin trường đại_học sư_phạm kỹ_thuật hưng yên các hoạt_động chính của hệ_thống để có_thể sử_dụng thay_đổi các dữ_liệu trong hệ_thống phải đăng nhập tài_khoản có loại tài_khoản tài_khoản admin và tài_khoản user tài_khoản admin khi đăng nhập có_thể thêm và xóa các tài_khoản user tài_khoản user khi đăng nhập có_thể cập_nhật quản_lý thông_tin tài_khoản cá_nhân quản_lý thông_tin lớp và quản_lý thông_tin của sinh_viên việc xóa_dữ_liệu của lớp hoặc sinh_viên trên hệ_thống sẽ không được triển_khai thay vào đó dữ_liệu sẽ được thêm trường trạng_thái để phân_biệt dữ_liệu cũ và dữ_liệu còn khả_dụng quản_lý_tài_khoản cá_nhân có_thể thay_đổi cập_nhật các thông_tin của tài_khoản thay_đổi mật_khẩu quản_lý thông_tin lớp bao_gồm thêm và cập_nhật thông_tin của lớp quản_lý thông_tin sinh_viên bao_gồm thêm và cập_nhật thông_tin của sinh_viên cung_cấp các tính_năng tìm_kiếm các thông_tin liên_quan đến lớp_học và sinh_viên ngoài_ra hệ_thống còn có các api cung_cấp dữ_liệu của hệ_thống dưới dạng json yêu_cầu của hệ_thống yêu_cầu về môi_trường môi_trường phần_cứng o cpu pentium iv ghz hoặc cao hơn o ram tối_thiểu gb o hdd dung_lượng tối_thiểu trống g môi_trường phần_mềm o ngôn_ngữ java o cơ_sở dữ_liệu microsoft sql server o môi_trường phát_triển jdk yêu_cầu về trang hiển_thị đăng nhập o cho_phép người dùng đăng nhập vào hệ_thống o yêu_cầu người dùng phải đăng nhập mới có_thể sử_dụng được các chức_năng của hệ_thống o người dùng ẩn_danh có_thể lấy dữ_liệu từ api của hệ_thống mà không cần phải có sự cho_phép của hệ_thống quản_lý_tài_khoản hệ_thống o cung_cấp chức_năng tạo xóa tài_khoản của hệ_thống o yêu_cầu người dùng phải đăng nhập hệ_thống và tài_khoản đăng nhập có quyền là admin hiển_thị thông_tin của sinh_viên o cung_cấp các thông_tin của sinh_viên o người dùng khi đăng nhập có_thể quản_lý được các thông_tin của sinh_viên thông_tin qua phần hiển_thị yêu_cầu quyền đăng nhập là user hiển_thị thông_tin lớp_học và khoa o hiển_thị các thông_tin của lớp_học và khoa o người dùng khi đăng nhập có_thể quản_lý được các thông_tin của lớp_học và khoa yêu_cầu quyền đăng nhập là user hiển_thị_phần tìm_kiếm thông_tin o hiển_thị_phần tìm_kiếm của hệ_thống o hiển_thị các thông_tin nếu có trong cơ_sở dữ_liệu khi được người dùng tìm_kiếm đến o yêu_cầu người dùng phải đăng nhập với quyền là user hiển_thị dữ_liệu của api thông_qua url o truy_xuất dữ_liệu từ api thông_qua url hợp_lệ dữ_liệu json sẽ được trả lại cho người dùng o không yêu_cầu đăng nhập hoặc quyền quản_lý của tài_khoản biểu_đồ usecase biểu_đồ usecase mức tổng_quát hình biểu_đồ usecase tổng_quát đặc_tả usecase usecase quản_lý đăng nhập bảng đặc_tả usecase quản_lý đăng nhập usecase quản_lý đăng nhập mô_tả là chức_năng cho_phép người dùng đăng nhập người dùng không yêu_cầu điều_kiện đầu na sự_kiện chính người dùng truy_cập vào website điều_kiện cuối o đăng nhập không đúng tài_khoản yêu_cầu nhập lại thông_tin đăng nhập o đăng nhập đúng tài_khoản với quyền quản_trị là admin hiển_thị trang quản_lý_tài_khoản o đăng nhập đúng tài_khoản với quyền quản_trị là user hiển_thị trang danh_sách lớp mà người đó đang quản_lý usecase quản_lý_tài_khoản bảng đặc_tả usecase quản_lý_tài_khoản usecase quản_lý_tài_khoản mô_tả là chức_năng cho_phép người fungd quản_lý_tài_khoản người dùng tất_cả người dùng phải đăng nhập điều_kiện đầu o người dùng admin chọn tài_khoản o người dùng user chọn xem sự_kiện chính o trang_web hiển_thị thông_tin của tài_khoản mà người dùng xem điều_kiện cuối o thông_tin tài_khoản sẽ được cập_nhật nếu có sự thay_đổi thông_tin o tài_khoản mới sẽ được tạo nếu người dùng admin thực_hiện tạo tài_khoản usecase quản_lý khoa bảng đặc_tả usecase quản_lý khoa usecase quản_lý khoa mô_tả cung_cấp chức_năng quản_lý đối_tượng khoa trong hệ_thống người dùng người dùng đăng nhập với quyền là admin điều_kiện đầu người dùng thực_hiện chọn xem thông_tin của một khoa hoặc tạo mới khoa sự_kiện chính thông_tin của khoa sẽ được hiển_thị trên trang_web điều_kiện cuối o người dùng xem thông_tin của khoa trang_web sẽ hiển_thị thông_tin chi_tiết của khoa o người dùng tạo mới khoa thông_tin khoa sẽ được lưu lại nếu hợp_lệ usecase quản_lý lớp bảng đặc_tả usecase quản_lý lớp usecase quản_lý lớp mô_tả cung_cấp chức_năng quản_lý đối_tượng lớp trong hệ_thống người dùng người dùng đăng nhập với quyền là user điều_kiện đầu người dùng nhấp chọn hiển_thị thông_tin của một lớp sự_kiện chính o hệ_thống sẽ gọi đến controller quản_lý sinh_viên của lớp o trang_web hiển_thị thông_tin của lớp và danh_sách các sinh_viên từ dữ_liệu trả ra của controller điều_kiện cuối o trang_web sẽ hiển_thị các thông_tin o các thay_đổi dữ_liệu sẽ được thực_hiện nếu dữ_liệu phù_hợp usecase quản_lý sinh_viên bảng đặc_tả usecase quản_lý sinh_viên usecase quản_lý sinh_viên mô_tả cung_cấp chức_năng quản_lý đối_tượng sinh_viên trong hệ_thống người dùng người dùng đăng nhập với quyền là user điều_kiện đầu người dùng duyệt trang quản_lý lớp sự_kiện chính o hệ_thống sẽ gọi controller quản_lý lớp lấy ra thông_tin lớp và danh_sách các sinh_viên của lớp đó o hệ_thống hiển_thị các thông_tin đã lấy được từ controller lên_trang web điều_kiện cuối o trang_web sẽ hiển_thị các thông_tin o thực_hiện thay_đổi dữ_liệu nếu người dùng có thay_đổi dữ_liệu usecase quản_lý điểm bảng đặc_tả usecase quản_lý điểm usecase quản_lý điểm mô_tả cung_cấp chức_năng quản_lý đối_tượng điểm trong hệ_thống người dùng người dùng đăng nhập với quyền là user điều_kiện đầu người dùng duyệt trang quản_lý sinh_viên sự_kiện chính o hệ_thống gọi đến controller quản_lý sinh_viên o controller trả ra dữ_liệu của sinh_viên điều_kiện cuối dữ_liệu của sinh_viên sẽ được tải lên web bao_gồm dữ_liệu cá_nhân và các điểm usecase tìm_kiếm bảng đặc_tả usecase tìm_kiếm usecase tìm_kiếm mô_tả cung_cấp chức_năng tìm_kiếm dữ_liệu trong hệ_thống người dùng người dùng đăng nhập với quyền là user và admin usecase thống_kê dữ_liệu bảng đặc_tả usecase thống_kê dữ_liệu usecase thống_kê dữ_liệu mô_tả cung_cấp chức_năng thống_kê các dữ_liệu liên_quan đến các đối_tượng trong hệ_thống người dùng người dùng đăng nhập với quyền là user và admin usecase lấy dữ_liệu từ api bảng đặc_tả usecase lấy dữ_liệu từ api usecase lấy dữ_liệu từ api mô_tả cung_cấp chức_năng lấy dữ_liệu json qua api người dùng không yêu_cầu điều_kiện đầu duyệt dường dẫn của web sự_kiện chính hệ_thống lọc các dữ_liệu liên_quan từ các thông_tin truyền đến server bằng url điều_kiện cuối server trả ra trang_web có dữ_liệu json biểu_đồ lớp biểu_đồ lớp mức phân_tích hình biểu_đồ lớp mức phân_tích danh_sách các lớp đối_tượng và quan_hệ bảng danh_sách các lớp đối_tượng và quan_hệ stt tên lớpquan hệ loại ý nghĩaghi chú account lớp tài_khoản faculty lớp khoa class lớp lớp_học student lớp sinh_viên subject lớp môn_học score lớp điểm mô_tả chi_tiết từng_lớp đối_tượng lớp account bảng mô_tả chi_tiết lớp account stt tên thuộc_tính loại ràng_buộc ý nghĩaghi chú user_id int khóa chính mã tài_khoản user_name string duy_nhất tên tài_khoản password string không trống mật_khẩu user_role string quyền truy_cập user_full_name string tên của người dùng user_address string địa_chỉ user_phone string số điện_thoại user_email string email update_day date ngày cập_nhật status boolean trạng_thái lớp faculty bảng mô_tả chi_tiết lớp faculty stt tên thuộc_tính loại ràng_buộc ý nghĩaghi chú faculty_id int khóa chính mã khoa faculty_name string tên khoa create_day date ngày tạo update_day date ngày cập_nhật lớp class bảng mô_tả chi_tiết lớp class stt tên thuộc_tính loại ràng_buộc ý nghĩaghi chú class_id int khóa chính mã lớp class_name string tên lớp class_status string trạng_thái của lớp start_year int năm bắt_đầu end_year int năm kết_thúc update_day date ngày cập_nhật lớp student bảng mô_tả chi_tiết lớp student stt tên thuộc_tính loại ràng_buộc ý nghĩaghi chú student_id int khóa chính mã sinh_viên student_full_name string tên đầy_đủ student_birthday date ngày_sinh student_gender bit giới_tính student_address string địa_chỉ student_hometown string quê_quán student_email string email student_phone string số điện_thoại student_status boolean trạng_thái update_day date ngày cập_nhật lớp subject bảng mô_tả chi_tiết lớp subject stt tên thuộc_tính loại ràng_buộc ý nghĩaghi chú subject_id int khóa chính mã môn_học subject_name string tên môn_học learn_unit int đơn_vị tín_chỉ update_day date ngày cập_nhật lớp score bảng mô_tả chi_tiết lớp score stt tên thuộc_tính loại ràng_buộc ý nghĩaghi chú score float điểm fail boolean qua môn create_day date ngày tạo update_day date ngày cập_nhật biểu_đồ tuần_tự đăng nhập hình biểu_đồ tuần_tự đăng nhập thêm tài_khoản hình biểu_đồ tuần_tự một_số phần quản_lý mô_hình thực_thể liên_kết danh_sách các thực_thể của hệ_thống bảng danh_sách các thực_thể stt tên thực_thể ý nghĩaghi chú account tài_khoản faculty khoa class lớp student sinh_viên subject môn_học score điểm chi_tiết hóa thực_thể hệ_thống thực_thể account bảng chi_tiết_thực_thể account stt tên thuộc_tính loại ràng_buộc ý nghĩaghi chú user_id int khóa chính mã tài_khoản user_name varchar duy_nhất tên tài_khoản password varchar không trống mật_khẩu faculty_id int khóa phụ mã khoa user_role varchar quyền truy_cập user_full_name nvarchar tên của người dùng user_address nvarchar địa_chỉ user_phone varchar số điện_thoại user_email varchar email update_day date ngày cập_nhật status bit trạng_thái thực_thể faculty bảng chi_tiết_thực_thể faculty stt tên thuộc_tính loại ràng_buộc ý nghĩaghi chú faculty_id int khóa chính mã khoa faculty_name varchar tên khoa create_day date ngày tạo update_day date ngày cập_nhật thực_thể class bảng chi_tiết_thực_thể class stt tên thuộc_tính loại ràng_buộc ý nghĩaghi chú class_id int khóa chính mã lớp faculty_id int khóa phụ mã khoa class_name varchar tên lớp manager_id int mã account class_status varchar trạng_thái của lớp start_year smallint năm bắt_đầu end_year smallint năm kết_thúc update_day date ngày cập_nhật thực_thể student bảng chi_tiết_thực_thể student stt tên thuộc_tính loại ràng_buộc ý nghĩaghi chú student_id int khóa chính mã sinh_viên class_id int khóa phụ mã lớp faculty_id int khóa phụ mã_khoa student_full_name nvarchar tên đầy_đủ student_birthday date ngày_sinh student_gender bit giới_tính student_address nvarchar địa_chỉ student_hometown nvarchar quê_quán student_email varchar email student_phone varchar số điện_thoại student_status bit trạng_thái update_day date ngày cập_nhật thực_thể subject bảng chi_tiết_thực_thể subject stt tên thuộc_tính loại ràng_buộc ý nghĩaghi chú subject_id int khóa chính mã môn_học faculty_id int khóa phụ mã khoa subject_name nvarchar tên môn_học learn_unit smallint đơn_vị tín_chỉ update_day date ngày cập_nhật thực_thể score bảng chi_tiết_thực_thể score stt tên thuộc_tính loại ràng_buộc ý nghĩaghi chú student_id int khóa phụ mã học_sinh class_id int khóa phụ mã lớp subject_id int khóa phụ mã môn_học faculty_id int khóa phụ mã khoa score float điểm fail bit qua môn create_day date ngày tạo update_day date ngày cập_nhật liên_kết cơ_sở dữ_liệu hình lược_đồ er của hệ_thống các module chính của hệ_thống module đăng nhập phương_thức kiểm_tra tài_khoản đăng nhập module quản_lý_tài_khoản phương_thức lấy thông_tin tài_khoản phương_thức tạo thông_tin tài_khoản phương_thức cập_nhật thông_tin tài_khoản module quản_lý khoa phương_thức tạo thông_tin khoa phương_thức cập_nhật thông_tin khoa module quản_lý lớp phương_thức tạo thông_tin lớp phương_thức cập thông_tin nhật lớp module quản_lý sinh_viên phương_thức tạo thông_tin sinh_viên phương thúc cập_nhật thông_tin sinh_viên module quản_lý môn_học phương_thức tạo thông_tin môn_học phương_thức cập thông_tin nhật môn_học module quản_lý điểm phương_thức tạo thông_tin điểm phương_thức cập_nhật thông_tin điểm module tìm_kiếm phương_thức tìm_kiếm theo tên từng đối tương module lấy dữ_liệu từ api phương_thức lấy dữ_liệu cho account phương_thức lấy dữ_liệu cho faculty phương_thức lấy dữ_liệu cho class phương_thức lấy dữ_liệu cho student phương_thức lấy dữ_liệu cho subject phương_thức lấy dữ_liệu cho score thiết_kế đặc_tả giao_diện một_số giao_diện chính của hệ_thống giao_diện trang đăng nhập gồm input là username và password yêu_cầu người dùng nhập đầy_đủ và chính_xác thông_tin hình giao_diện đăng nhập giao_diện quản_lý các tài_khoản giao_diện có các nút chọn o nút làm mới làm mới lại danh_sách o nút create tạo mới một đối_tượng tài_khoản o thẻ truyền account người dùng truyền vào tên tài_khoản để tìm_kiếm tài_khoản o thẻ truyền full name người dùng truyền vào tên sẽ thực_hiện tìm_kiếm tên trong danh_sách o nút trạng_thái thay_đổi trạng_thái của một tài_khoản hình giao_diện quản_lý_tài_khoản giao_diện phần cập_nhật thông_tin tài_khoản giao_diện chứa các thẻ truyền vào thông_tin của một tài_khoản khi nhấn nút save dữ_liệu sẽ thực_hiện được thay_đổi các thẻ này đều yêu_cầu người dùng thực_hiện nhập đúng dữ_liệu _hình giao_diện hiển_thị quản_lý thông_tin tài_khoản giao_diện phần quản_lý thông_tin khoa tương_tự như phần giao_diện của quản_lý_tài_khoản hình giao_diện hiển_thị quản_lý khoa giao_diện tạo thông_tin tài_khoản tương_tự như phần giao_diện hiển_thị thông_tin tài_khoản giao_diện khi lấy dữ_liệu từ api dữ_liệu hiển_thị dạng json nếu đường_dẫn không trả ra được dữ_liệu giao_diện sẽ bị trống _hình giao_diện hiển_thị dữ_liệu api giao_diện quản_lý thông_tin sinh_viên tương_tự như các phần giao_diện khác các thông_tin được hiển_thị và có_thể thực_hiện cập_nhật thông_tin ngay trong phần quản_lý hình giao_diện phần quản_lý thông_tin sinh_viên chương kết_luận kết_quả đạt được của đề_tài sau thời_gian nghiên_cứu và phát_triển tác_giả đã hoàn_thành cơ_bản các mục_tiêu ban_đầu đề ra của đề_tài nghiên_cứu các java framework và đề ra giải_pháp thiết_kế web dựa trên các framework đã nghiên_cứu thiết_kế cơ_sở dữ_liệu và tổ_chức dữ_liệu của hệ_thống trên hệ quản_trị cơ_sở dữ_liệu microsoft sql server thiết_kế hệ_thống theo mô_hình mvc và đã triển khải được các phần liên_quan đến backend thiết_kế được các rest api cần_thiết cho một hệ_thống cung_cấp dữ_liệu cho các nền_tảng khác hạn_chế của đề_tài trong việc triển_khai hệ_thống một_số hạn_chế vẫn còn tồn_tại hệ_thống mới dừng lại ở mức triển_khai mẫu chưa được tối_ưu giao_diện các chức_năng của website chưa hoàn_chỉnh hướng phát_triển của đề_tài trong thời_gian nghiên_cứu và thực_hiện đề_tài các hướng phát_triển tiếp_theo của đề_tài như sau áp_dụng thêm spring security để tăng_cường tính bảo_mật cập_nhật lại giao_diện hiển_thị đẹp hơn hiện_đại hơn bổ_sung thêm các phần giao_diện quản_lý cập_nhật lại thiết các đối_tượng và các quan_hệ trở_nên chặt_chẽ hơn trở_nên phù_hợp hơn với nhiều môi_trường trường_học trong thực_tế tài_liệu tham_khảo spring in action craig walls java hibernate cookbook vishal ranapariya and yogesh prajapati hibernate in action christian bauer and gavin king head first servlets and jsp head first servlets and jsp phụ_lục phát_triển hệ_thống quản_lý sinh_viên