chương tổng_quan về đề_tài lý_do chọn đề_tài ngày_nay khách_hàng mong_đợi các công_ty phần_mềm chuyển_giao phần_mềm chất_lượng với chi_phí thấp nhất và thời_gian ngắn nhất để đáp_ứng cho nhu_cầu doanh_nghiệp của họ tuy_nhiên nhiều công_ty phần_mềm chỉ hội_tụ vào khía_cạnh chức_năng qua vài phép kiểm thử như kiểm thử đơn_vị kiểm thử tích_hợp kiểm thử hệ_thống trong môi_trường phát_triển của họ ít để_ý tới cách phần_mềm sẽ làm_việc trong môi_trường người dùng nhiều lần phần_mềm đáp_ứng các yêu_cầu chức_năng nhưng thất_bại trong kiểm thử chấp_nhận của người dùng vì môi_trường kiểm thử không tương_hợp nắm_bắt được yêu_cầu thực_tế em chọn đề_tài kiểm thử chấp_nhận tự_động với selenium webdriver và specflow cho ứng_dụng web làm đồ_án tốt_nghiệp của mình mục_tiêu của đề_tài hiểu được khái_quát kiến_thức về kiểm thử phần_mềm kiểm thử tự_động và kiểm thử chấp_nhận sử_dụng được ngôn_ngữ gherkin công_cụ kiểm thử tự_động cho ứng_dụng web selenium webdriver và specflow sử_dụng được ngôn_ngữ gherkin và công_cụ mã nguồn mở selenium webdriver specflow để viết kịch_bản kiểm thử và chạy ứng_dụng xây_dựng được framework kiểm thử chấp_nhận tự_động với selenium webdriver và specflow cho ứng_dụng web giới_hạn và phạm_vi của đề_tài đề_tài kiểm thử chấp_nhận tự_động với selenium webdriver và specflow cho ứng_dụng web được xây_dựng trên công_cụ mã nguồn mở selenium webdriver specflow công_cụ lập_trình visual studio và sử_dụng ngôn_ngữ gherkin đề_tài được triển_khai trên web nội_dung thực_hiện đưa ra báo_cáo khái_quát kiến_thức về kiểm thử phần_mềm kiểm thử tự_động và kiểm thử chấp_nhận ngôn_ngữ gherkin và các công_cụ kiểm thử tự_động cho ứng_dụng web selenium webdriver và specflow sử_dụng được ngôn_ngữ gherkin và công_cụ mã nguồn mở selenium webdriver specflow để viết kịch_bản kiểm thử và chạy ứng_dụng xây_dựng được framework kiểm thử tự_động chấp_nhận cho ứng_dụng web phương_pháp tiếp_cận đề_tài đã ứng_dụng những kiến_thức đã học trong công_nghệ_phần_mềm kiểm thử phần_mềm góp_phần nghiên_cứu khả_năng tự_động_hóa_kiểm thử chấp_nhận cho ứng_dụng web cách tiếp_cận tìm_hiểu về kiểm thử chấp_nhận thông_qua việc thu_thập nghiên_cứu các tài_liệu liên_quan các phương_pháp tiếp_cận phương_pháp đọc tài_liệu phương_pháp thực_nghiệm phương_pháp phân_tích mẫu chương cơ_sở lý_thuyết kiểm thử phần_mềm kiểm thử phần_mềm là gì phần_mềm software theo nghĩa thông_thường là những chương_trình ứng_dụng website được viết cài_đặt và thực_thi trên môi_trường điện_toán computing như máy_tính computer điện_thoại_di_động mobile phone các hệ_thống nhúng firmware ngoài những điểm trên khái_niệm software trong kiểm thử phần_mềm còn mở_rộng ra bao_gồm cả các tài_liệu documentation dữ_liệu data phù_hợp và liên_quan đến hoạt_động của hệ_thống điện_toán kiểm thử phần_mềm software testing kiểm thử phần_mềm là quá_trình thực_thi một chương_trình với mục_đích tìm lỗi theo the art of software testing nghệ_thuật kiểm thử phần_mềm có_thể định_nghĩa một_cách dễ hiểu như sau kiểm thử phần_mềm là hoạt_động nhằm tìm_kiếm phát_hiện các lỗi của phần_mềm được kiểm thử về thiết_kế mã nguồn chức_năng dữ_liệu bảo_mật thân_thiện với người dùng tài_liệu kèm theo môt trường hoạt_động tốc_độ hoạt_động khả_năng tải của hệ_thống mục_tiêu của kiểm thử phần_mềm phát_hiện càng nhiều lỗi càng tốt trong thời_gian kiểm thử xác_định trước chứng_minh rằng sản_phẩm phần_mềm phù_hợp với các đặc_tả yêu_cầu của nó xác_thực_chất_lượng kiểm thử phần_mềm đã dùng chi_phí và nỗ_lực tối_thiểu tạo các kịch_bản kiểm thử test case chất_lượng cao thực_hiện kiểm thử hiệu_quả và tạo ra các báo_cáo vấn_đề đúng và hữu_hạn phân_loại kiểm thử phần_mềm kiểm thử phần_mềm được chia làm loại kiểm thử tĩnh và kiểm thử động kiểm thử tĩnh static testing là tester làm mọi công_việc hoàn_toàn bằng tay từ viết test case đến thực_hiện test mọi thao_tác như nhập điều_kiện đầu_vào thực_hiện một_số sự_kiện khác như nhấn nút và quan_sát kết_quả thực_tế sau đó so_sánh kết_quả thực_tế với kết_quả mong_đợi trong test case điền kết_quả test các kĩ_thuật sử_dụng trong kiểm thử tĩnh walkthough phương_pháp review giữa các kiểm thử_viên với nhau sẽ phát_hiện ra vấn_đề và năng_lực của từng người để giao nhiệm_vụ task phù_hợp với từng người inspacetion là phương_pháp tìm lỗi ở source code đảm_bảo thực_hiện theo bản đặc_tả yêu_cầu bản đặc_tả hệ_thống đảm_bảo tính đúng_đắn và xử_lý logic kiểm thử động dynamic testing là kiểm thử dựa trên các ca kiểm thử xác_định bằng sự thực_hiện của đối_tượng kiểm thử hay chạy các chương_trình các kĩ_thuật trong kiểm thử động kiểm thử đơn_vị unit testing là việc kiểm thử ở mức_độ thấp nhất các phương_thức method hàm function lớp class trong mã nguồn nhằm đảm_bảo các thành_phần trên hoạt_động đúng như yêu_cầu việc kiểm_tra ở mức_độ này thường do chính lập_trình_viên deverloper thực_hiện trong quá_trình mã_hóa coding implement các kĩ_thuật unit test bao_phủ câu_lệnh statement coverage trong trường_hợp test case được thực_thi theo cách mà mỗi câu_lệnh của code là thực_thi ít_nhất một lần bao_phủ nhánh quyết_định branch decision coverage điều_kiện bao_phủ test yêu_cầu đủ các test case như là mỗi điều_kiện trong nhánh quyết_định lấy tất_cả các nhánh có_thể ít_nhất một lần bao_phủ đường đi path coverage test case được thực_thi theo cách mà mỗi đường đi được thực_thi ít_nhất một lần kiểm thử tích_hợp intergration testing là việc kiểm thử nhằm xem_xét các vấn_đề có_thể xảy ra khi hai hoặc nhiều thành_phần component module của hệ_thống tương_tác với nhau loại kiểm thử tích_hợp intergration testing kiểm thử cấu_trúc structure kiểm_tra nhằm đảm_bảo các thành_phần bên trong của chương_trình chạy đúng kiểm thử chức_năng functional kiểm_tra chỉ chú_trọng đến chức_năng của chương_trình mà không quan_tâm đến cấu_trúc bên trong kiểm_tra hiệu_năng performance kiểm_tra việc vận_hành của hệ_thống kiểm_tra khả_năng chịu_tải stress kiểm_tra các giới_hạn của hệ_thống các kĩ_thuật intergration test tích_hợp từ trên xuống dưới top down gộp dần các module từ trên xuống theo trật_tự dòng điều_khiển bắt_đầu từ module điều_khiển main gắn với module phụ_trợ vào module điều_khiển thượng_cấp hình mô_hình kĩ_thuật tích_hợp từ trên xuống dưới top down tích_hợp từ dưới lên bottom up bắt_đầu xây_dựng và kiểm thử từ các module nguyên_tố ở mức thấp trước thông_thường người_ta thường nhóm các module tầng dưới thành các nhóm_chức_năng tích_hợp và kiểm thử chúng theo từng nhóm hình mô_hình kĩ_thuật tích_hợp từ dưới lên bottom up tích_hợp kẹp sandwuch là một phương_pháp kiểm thử kết_hợp cả top down và bottom up tất_cả các module và giao_diện đều phải kiểm thử bằng phương_pháp top down cả driver và stub đều được sử_dụng khi cần_thiết tất_cả các module đều được xậy dựng và kiểm thử unit bắt_đầu từ mức thấp nhất sử_dụng chiến_thuật bottom up kiểm thử hệ_thống system testing là mức_độ kiểm thử toàn_bộ các chức_năng của hệ_thống phần_mềm bao_gồm tất_cả các thành_phần tương_tác với nhau và hoạt_động trong môi_trường giống như môi_trường thực_tế hệ điều_hành cơ_sở dữ_liệu kết_nối mạng khả_năng tương_thích với các phần_mềm khác bên cạnh đó kiểm thử hệ_thống cũng chú_ý đến vấn_đề bảo_mật thân_thiện khả_năng đáp_ứng tốc_độ thực_hiện của hệ_thống phần_mềm kiểm thử chấp_nhận acceptance testing là việc kiểm thử để chứng_minh phần_mềm có thỏa_mãn tất_cả yêu_cầu của khách_hàng và khách_hàng chấp_nhận sản_phẩm so_sánh kiểm thử tự_động và kiểm thử thủ_công ưu_điểm độ tin_cậy cao trong trường_hợp có quá nhiều test case cần phải thực_hiện thì độ tin_cậy của kiểm thử tự_động thường cao hơn so với kiểm thử thủ_công khả_năng lặp công_cụ kiểm thử tự_động ra_đời để giúp cho các tester không phải lặp_đi_lặp_lại các thao_tác như nhập_liệu click check kết_quả một_cách nhàn chán với độ tin_cậy và ổn_định cao tốc_độ cao do thực_thi bởi máy nên tốc_độ của kiểm thử tự_động nhanh hơn nhiều so với tốc_độ của con_người chi_phí thấp nếu áp_dụng kiểm thử tự_động đúng cách có_thể tiết_kiệm được nhiều chi_phí thời_gian và nhân_lực nhược_điểm khó mở_rộng khó bảo_trì trong cùng một dự_án để mở_rộng phạm_vi cho kiểm thử tự_động khó hơn nhiều so với kiểm thử thủ_công khả_năng bao_phủ thấp do khó ứng_dụng khó mở_rộng và đòi_hỏi nhiều kỹ_thuật lập_trình nên độ bao_phủ của kiểm thử tự_động khá thấp vấn_đề công_cụ và nhân_lực hiện_nay cũng có nhiều công_cụ hỗ_trợ kiểm thử tự_động khá tốt nhưng vẫn còn nhều hạn_chế ngoài_ra nguồn nhân_lực có_thể sử_dụng thành_thạo các công_cụ này cũng không nhiều các chiến_lược kiểm thử phần_mềm ba trong số những chiến_lược kiểm thử thông_thường nhất bao_gồm kiểm thử hộp trắng kiểm thử hộp_đen kiểm thử hộp xám kiểm thử hộp_đen black box testing dùng để kiểm_tra chức_năng mà không xem_xét mã nguồn cũng như cấu_trúc chương_trình bên trong công_việc cần làm là nhập dữ_liệu đầu_vào input và kiểm_tra kết_quả trả về có đúng với kết_quả mong_muốn không kiểm thử hộp_đen bao_gồm kiểm thử chức_năng và kiểm thử hệ_thống kiểm thử quá_tải và kiểm thử hỏng_hóc kiểm thử hiệu_năng các kĩ_thuật trong kiểm thử hộp đen o phân_vùng tương_đương equivalence partitioning ý_tưởng phân_hoạch miền dữ_liệu vào thành các dữ_liệu có liên_hệ với nhau mỗi lớp dùng để kiểm thử chức_năng gọi là lớp tương_đương nguyên_tắc phân_hoạch các lớp tương_đương o nếu dữ_liệu vào thuộc một khoảng xây_dựng một lớp các giá_trị lớn hơn một lớp các giá_trị nhỏ hơn n các giá_trị hợp_lệ o nếu dữ_liệu vào là tập_hợp các giá_trị xây_dựng một lớp tập_rỗng một lớp quá nhiều các giá_trị một lớp hợp_lệ o nếu dữ_liệu vào là điều_kiện ràng_buộc xây_dựng một lớp với ràng_buộc được thỏa_mãn một lớp với ràng_buộc không được thỏa_mãn phân_tích giá_trị biên boundary value analysis ý_tưởng tập chung phân_tích các giá_trị biên của miền dữ_liệu để xây_dựng dữ_liệu kiểm thử nguyên_tắc kiểm thử các dữ_liệu bao_gồm giá_trị nhỏ nhất giá_trị gần_kề lớn hơn giá_trị nhỏ nhất giá_trị bình_thường giá_trị gần kề nhỏ hơn giá_trị lớn nhất giá_trị lớn nhất kiểm thử hộp trắng white box testing kiểm thử hộp trắng xem_xét mọi module trong chương_trình mã nguồn xử_lý dữ_liệu việc kiểm thử được dựa trên các phân_tích về cấu_trúc bên trong của thành_phần hệ_thống kiểm thử hộp trắng bao_gồm kiểm thử đường_dẫn path test kiểm thử bao_quát các dòng source code nhánh và đường_dẫn kiểm thử luồng điều_khiển control flow test xác_nhận truy_cứu các lịch_sử thực_hiện source code bằng cách sử_dụng trình gỡ_lỗi kiểm thử nội_bộ xác_nhận các tham_số counter vòng lặp kiểm thử tính_năng đo thời_gian xử_lý của moudel đường_dẫn dữ_liệu cụ_thể kiểm thử hộp xám gray box testing là kĩ_thuật kiểm thử dựa trên những đặc_tính của cả kiểm thử hộp_đen và kiểm thử hộp trắng mục_đích chính của kiểm thử hộp trắng là kiểm thử các ứng_dụng trên nền web các loại kiểm thử phần_mềm kiểm thử giao_diện interface testing khái_niệm kiểm thử giao_diện kiểm thử giao_diện là kiểm_tra xem giao_diện sử_dụng có nhất_quán rõ_ràng có dễ sử_dụng và đúng như mong_đợi của người sử_dụng hay không đảm_bảo sự giao_tiếp giữa người sử_dụng và ứng_dụng diễn ra ổn_thỏa người dùng có_thể giao_tiếp với ứng_dụng một_cách dễ_dàng mà không gặp bất_cứ sự khó_khăn nào về mặt giao_diện một_số chú_ý khi kiểm thử giao_diện khi kiểm thử giao_diện nên kiểm thử trên nhiều trình duyệt để đảm_bảo sự tin_cậy kiểm thử giao_diện cần và quan_trọng nhất là dựa trên bản đặc_tả kiểm thử chức_năng functional test khái_niệm kiểm thử chức_năng kiểm thử chức_năng là kiểm_tra xem các thành_phần chức_năng của hệ_thống hoạt_động có đúng_đắn hay không có đúng với mục_đích của người sử_dụng hay không đảm_bảo cho các thông_số kĩ_thuật các dữ_liệu đầu_ra đầu_vào chức_năng trong hệ_thống hoạt_động đúng quy_tắc nghiệp_vụ và chính_xác mục_đích của test chức_năng đảm_bảo mục_tiêu đúng_đắn của từng chức_năng của mỗi ứng_dụng bao_gồm định_hướng dữ_liệu vào xử_lý và dữ_liệu nhận được kiểm thử phi chức_năng non functional test đề_cập đến các khía_cạnh của phần_mềm có_thể không liên_quan đến một chức_năng cụ_thể hoặc hoạt_động người dùng chẳng_hạn như khả_năng mở_rộng và hiệu_suất khác hành_vi dưới những hạn_chế hoặc bảo_mật nhất_định kiểm thử cấu_hình và khả_năng tương_thích khái_niệm kiểm thử cấu_hình test configuration và khả_năng tương_thích compatibility testing kiểm thử cấu_hình là kiểm_tra hoạt_động của phần_mềm với tất_cả các máy_tính kiểm thử khả_năng tương_thích là kiểm_tra xem phần_mềm có tương_tác và chia_sẻ thông_tin chính_xác với các pần mềm khác hay không sự tương_tác này có_thể xảy ra giữa hai chương_trình trên cùng máy_tính hoặc trên các máy_tính khác nhau được kết_nối internet cách nhau tới hàng nghìn_dặm mục_đích mục_đích là để đảm_bảo rằng ứng_dụng có_thể được thực_thi với nhiều cấu_hình nhất với mỗi cấu_hình được hỗ_trợ hy_vọng rằng ứng dụnghoạt động như người dùng mong_đợi kiểm thử hiệu_năng performance testing khái_niệm kiểm thử hiệu_năng kiểm thử hiệu_năng là một dạng kiểm_tra hiệu_suất trong đó thời_gian phản_hồi tỷ_lệ giao_dịch và các yêu_cầu phụ_thuộc thời_gian khác được đo_đạc và đánh_giá performance testing là kiểm_tra các yêu_cầu về hiệu_suất có đạt được hay không các yếu_tố quan_trọng của kiểm thử hiệu_năng kiểm thử hiệu_năng liên_quan đến ba thành_phần chính sức tải công_việc môi_trường của hệ_thống và nguồn tài_nguyên có sẵn thời_gian đáp_ứng của hệ_thống ba giai_đoạn của kiểm thử hiệu_năng tiến_trình của kiểm thử hiệu_năng có_thể chia thành ba giai_đoạn lập kế_hoạch kiểm thử và phân_tích giai_đoạn lập kế_hoạch định_nghĩa các mục_tiêu và kết_quả xác_định mong_đợi thu_thập yêu_cầu kiểm thử và hệ_thống định_nghĩa sức tải chọn đơn_vị đo hiệu_năng xác_định các kiểm thử cần thực_thi và thiết_kế kịch_bản người sử_dụng và tạo các script kiểm thử giai_đoạn kiểm thử chuẩn_bị sẵn_sàng nghĩa_là cài_đặt môi_trường kiểm thử và các trình giám_sát hiệu_năng trên mạng và trình chủ thực_thi các kiểm thử thu_thập_dữ_liệu giai_đoạn phân_tích phân_tích kết_quả thay_đổi hệ_thống để tối_ưu hiệu_năng thiết_kế các kiểm thử mới kiểm thử bảo_mật security testing khái_niệm kiểm thử bảo_mật là một tiến_trình nhằm xác_định rằng một hệ_thống thông_tin bảo_mật dữ_liệu cần phải đảm_bảo tính_đồng_nhất và duy_trì những chức_năng như đã chỉ_định mục_đích của kiểm thử bảo_mật bảo_mật mức ứng_dụng đảm_bảo rằng một người dùng chỉ có_thể truy_cập vào những chức_năng hoặc dữ_liệu mà nhóm người dùng đó được phép bảo_mật mức hệ_thống đảm_bảo rằng chỉ có những người được phép truy_cập hệ_thống và ứng_dụng được phép truy_cập chúng kiểm thử khả_năng phục_hồi recovery test khái_niệm kiểm thử khả_năng phục_hồi bảo_đảm hệ_thống có khả_năng khôi_phục trạng_thái ổn_định trước đó trong tình_huống mất tài_nguyên hoặc dữ_liệu đặc_biệt quan_trọng đối_với các hệ_thống giao_dịch như ngân_hàng trực_tuyến mục_đích của kiểm thử khả_năng phục_hồi để đảm_bảo các hoạt_động có_thể được tiếp_tục sau khi xảy ra thảm_họa xác_minh quá_trình phục_hồi và hiệu_quả của quá_trình phục_hồi bảo_đảm hệ_thống có khả_năng khôi_phục trạng_thái ổn_định trước đó trong tình_huống mất tài_nguyên hoặc dữ_liệu kiểm thử alpha alpha testing là việc kiểm thử hoạt_động chức_năng thực_tế hoặc giả lập do người dùng khách_hàng tiềm_năng hoặc một nhóm test độc_lập thực_hiện tại nơi sản_xuất phần_mềm alpha testing thường dùng cho phần_mềm đóng_gói sẵn để bán ví_dụ ms office window chương_trình diệt virus là một hình_thức kiểm thử chấp_nhận nội_bộ kiểm thử beta beta testing được thực_hiện sau alpha testing các phiên_bản của phần_mềm được biết là các phiên_bản beta chúng được phát_hành đến một_số người để test nhiều hơn nữa có_thể chắc_chắn sản_phẩm có một_số bug kiểm thử hồi_quy regression testing tập chung vào tìm_kiếm lỗi sau khi xảy ra việc thay_đổi code đặc_biệt nó kiểm_tra theo cách hồi_quy hoặc kiểm_tra các bug cũ có bị lại hay không kiểm thử xác_nhận verification testing phương_pháp này được thực_hiện để xác_nhận một lỗi đã được sửa_chữa thật hay chưa quy_trình kiểm thử phần_mềm phân_tích yêu_cầu việc kiểm thử thường sẽ bắt_đầu từ pha lấy yêu_cầu trong quy_trình phát_triển phần_mềm trong pha thiết_kế các tester làm_việc với dev để xác_định phần_nào của thiết_kế có_thể test và các thông_số mà test sẽ làm_việc lập kế_hoạch test mô_tả nhiều việc như chiến_lược test test plan tạo test case khi có nhiều hoạt_động sẽ thực_hiện trong lúc test thì cần phải có kế_hoạch phát_triển test viết các test procedure test case test dataset test script để sử_dụng cho việc kiểm thử phần_mềm thực_thi test các tester thực_thi phần_mềm dựa trên kế_hoạch và các tài_liệu test sau đó báo_cáo_lỗi tìm thấy cho dev báo_cáo test khi việc kiểm thử kết_thúc các tester sẽ điền kết_quả test vào các test case và tạo báo_cáo kết_quả kết_quả test và cho biết phần_mềm đã test có sẵn_sàng cho phát_hành hay chưa kiểm thử tự_động giới_thiệu về lý_thuyết kiểm thử tự_động kiểm thử phần_mềm tốn nhiều chi_phí nhân_công thời_gian trong một_số dự_án chi_phí kiểm thử phần_mềm chiếm tổng giá_trị dự_án nếu cần ứng_dụng an_toàn hơn chi_phí kiểm thử còn cao hơn nữa do_đó một trong các mục_tiêu của kiểm thử là tự_động_hóa nhiều nhờ đó mà giảm_thiểu chi_phí giảm lỗi đặc_biệt giúp_việc kiểm_tra hồi_quy dễ_dàng và nhanh_chóng hơn tự_động_hóa việc kiểm thử là dùng phần_mềm điều_khiển việc thi_hành kiểm thử so_sánh kết_quả có giống với kết_quả mong_muốn thiết_lập các điều_kiện đầu_vào các kiểm_soát kiểm thử và các chức_năng báo_cáo kết_quả trong lĩnh_vực kiểm thử tự_động hiện có khá nhiều công_cụ test test tool thương_mại nổi_tiếng như quicktest proessional loadrunner winrunner rational robot silktest jtest nunit các công_cụ này đã hỗ_trợ cho tester rất nhiều trong quá_trình kiểm thử vừa đem lại hiệu_quả cao và giảm_thiểu chi_phí thực_hiện kiểm thử tự_động là quá_trình thực_hiện một_cách tự_động các bước trong một kịch_bản kiểm thử kiểm thử tự_động bằng một công_cụ nhằm rút ngắn thời_gian kiểm thử mục_tiêu của kiểm thử tự_động là giảm bớt công_sức và thời_gian thực_hiện quá_trình kiểm thử cho cả một kế_hoạch kiểm thử tăng độ tin_cậy rèn_luyện kĩ_năng lập_trình cho tester giảm chi_phí cho tổng quá_trình kiểm thử ưu nhược_điểm của kiểm thử tự_động là các ưu_điểm của kiểm thử tự_động kiểm thử chính_xác và có_thể bao_quát thông_tin không cần đến sự can_thiệp của kiểm thử viên giảm chi_phí khi thực_hiện kiểm_tra số_lượng lớn test case hoặc test case lặp lại nhiều lần giả lập tình_huống khó có_thể kiểm thử bằng tay theo_dõi được chính_xác kết_quả từng giai_đoạn và các báo_cáo tổng_hợp các nhược_điểm của kiểm thử tự_động chi_phí cao cho việc chuyển_giao công_nghệ và đào_tạo nhân_viên tốn chi_phí đầu_tư lớn cho việc phát_triển công_cụ kiểm thử tự_động tốn chi_phí và thời_gian cho việc tạo các kịch_bản kiểm thử và bảo_trì các kịch_bản kiểm thử giai_đoạn chuẩn_bị kiểm thử yêu_cầu nhiều nhân_lực khu_vực kiểm thử tự_động có_thể không bao_quát đầy_đủ không áp_dụng được trong việc tìm lỗi mới của phần_mềm đòi_hỏi kiểm thử viên phải có kỹ_năng tạo các script kiểm thử tự_động các trường_hợp của kiểm thử tự_động không đủ tài_nguyên kiểm_tra hồi_quy kiểm_tra khả_năng vận_hành trong môi_trường đặc_biệt phân_loại kiểm thử tự_động công_cụ kiểm thử tự_động mã_trình bộ phân_tích tĩnh phân_tích cấu_trúc và định_dạng của chương_trình bộ kiểm_toán mã xem phần_mềm có phù_hợp với các chuẩn mã tối_thiểu chưa bộ xử_lý khai_báo xem những khai_báo xử_lý ứng_xử của chương_trình có thật_sự phù_hợp với sự_thực_hiện chương_trình thực hay không công_cụ kiểm thử tự_động dữ_liệu bộ sinh tệp kiểm thử cho ra các giá_trị tiền xác_định các tệp vào điển_hình cho chương_trình chịu kiểm thử bộ sinh dữ_liệu thử giúp lựa_chọn dữ_liệu để làm chương_trình ứng_xử theo một_cách đặc_biệt bộ xác_minh kết_quả đưa ra báo_cáo giá_trị trung_bình kết_quả cho chuyên_gia bảo_đảm chất_lượng phần_mềm công_cụ kiểm thử tự_động cài_đặt các trợ_giúp cho quá_trình kiểm thử cài_đặt một chương_trình dự_định trong một môi_trường kiểm thử nuôi chương_trình đó bằng dữ_liệu vào mô_phỏng ứng_xử của các môđun phụ bộ so_sánh đầu_ra so_sánh một tập_dữ_liệu ra với một tập khác để xác_định sự khác_biệt hệ tiến_hành ký_hiệu dùng đặc_tả đại_số mô_phỏng môi_trường là một hệ_thống dựa vào máy_tính chuyên_biệt có_thể kiểm thử các môi_trường bên ngoài của phần_mềm thời_gian thực và vận_hành thực_tại một_cách động bộ phân_tích dòng dữ_liệu phân_tích quy_mô và tần_suất dòng dữ liêu dựa trên việc theo_dõi dấu_vết luồng dữ_liệu đi qua hệ_thống kiến_trúc chung của một bộ công_cụ kiểm thử tự_động trong thực_tế có rất nhiều bộ công_cụ hỗ_trợ kiểm thử tự_động được phát_triển nhằm góp_phần giải_quyết các vấn_đề khó_khăn của quy_trình kiểm thử hình dưới đây mô_tả kiến_trúc chung nhất của một bộ kiểm thử tự_động trong kiến_trúc này các công_cụ kiểm thử được tích_hợp trong một quy_trình thống_nhất nhằm hỗ_trợ đầy_đủ các hoạt_động kiểm thử trong quy_trình kiểm thử các sản_phẩm phần_mềm hình kiến_trúc chung của một công_cụ kiểm thử tự_động các công_cụ cơ_bản trong kiến_trúc bao_gồm quản_lý kiểm thử quản_lý việc thực_hiện thực_thi các ca kiểm thử nó giám_sát việc thực_hiện từng ca kiểm thử ứng với bộ giá_trị đầu_vào giá_trị đầu_ra mong_muốn và giá_trị đầu_ra thực_tế sinh các ca kiểm thử đây là một trong những công_cụ quan_trọng nhất của các bộ kiểm thử tự_động tùy thuộc vào các kỹ_thuật kiểm thử được áp_dụng công_cụ này sẽ sinh ra tập các ca kiểm thử chưa gồm giá_trị đầu_ra mong_muốn cho chương trìnhđơn vị chương_trình cần kiểm thử các ca kiểm thử được sinh ra chỉ chứa giá_trị đầu_vào để thực_hiện nó các giá_trị này có_thể được lựa_chọn trong cơ_sở dữ_liệu hoặc được sinh một_cách ngẫu_nhiên sinh giá_trị đầu_ra mong_muốn các ca kiểm thử được sinh ra bởi công_cụ trên chỉ chứa các giá_trị đầu_vào công_cụ này cho_phép sinh ra giá_trị đầu_ra mong_muốn ứng với mỗi bộ dữ_liệu đầu_vào của mỗi ca kiểm thử giá_trị đầu_ra mong_muốn này sẽ được so_sánh với giá_trị đầu_ra thực_tế khi thực_hiện ca kiểm thử này nhằm phát_hiện ra các lỗikhiếm khuyết của sản_phẩm so_sánh kết_quả kiểm thử công_cụ này so_sánh giá_trị đầu_ra thực_tế và giá_trị đầu_ra mong_muốn của mỗi ca kiểm thử khi nó được thực_hiện trên chương trìnhđơn vị chương_trình cần kiểm thử tạo báo_cáo kiểm thử một trong những ưu_điểm của các bộ công_cụ kiểm thử tự_động là nó có cơ_chế sinh báo_cáo kiểm thử một_cách chính_xác và nhất_quán dựa vào kết_quả của công_cụ so_sánh kết_quả kiểm thử công_cụ này sẽ tự_động sinh ra báo_cáo kết_quả kiểm thử theo định_dạng mong_muốn của đơn_vị phát_triển phân_tích động công_cụ này cung_cấp một cơ_chế nhằm kiểm_tra việc thực_hiện của các câu_lệnh của chương_trình cần kiểm thử nhằm phát_hiện ra các lỗi và phát_hiện các câu lệnhđoạn lệnh không được thực_hiện bới một tập các ca kiểm thử cho trước công_cụ này cũng rất hiệu_quả trong việc đánh_giá tính hiệu_quả của một bộ kiểm thử cho trước bộ mô_phỏng có nhiều loại mình mô_phỏng được cung_cấp trong các bộ kiểm thử tự_động mục_đích của các công_cụ này là mô_phỏng quá_trình thực_hiện của chương_trình cần kiểm thử ví_dụ các công_cụ mô_phỏng giao_diện người dùng cho_phép thực_hiện tự_động các tương_tác giữa người dùng và sản_phẩm selenium là một ví_dụ về một công_cụ mô_phỏng giao_diện người dùng cho các ứng_dụng web quy_trình kiểm thử tự_động bảng dưới đây mô_tả rõ hơn các bước kiểm thử tự_động bảng bảng quy_trình kiểm thử tự_động stt bước thực_hiện mô_tả chuẩn_bị chuẩn_bị môi_trường và điều_kiện test tạo kịch_bản test case giai_đoạn này dùng công_cụ kiểm thử để ghi lại các thao_tác lên phần_mềm cần kiểm_tra và tự_động sinh ra kịch_bản kiểm thử chỉnh sửa kịch_bản kiểm thử chỉnh sửa kịch_bản kiểm thử thực_hiện kiểm_tra theo đúng yêu_cầu đặt ra cụ_thể làm theo trường_hợp kiểm thử cần thực_hiện chạy kịch_bản kiểm thử chạy kịch_bản kiểm thử để kiểm_tra phần_mềm có đưa ra đúng như kết_quả mong_muốn không đánh_giá kết_quả đánh_giá kết_quả sau khi chạy kịch_bản kiểm thử mối tương_quan giữa kiểm thử tự_động kttđ và toàn_bộ chu_trình kiểm thử phần_mềm ktpm hình mối tương_quan kttđ và chu_trình ktpm lập kế_hoạch test thu_thập các đặc_tả yêu_cầu lựa_chọn những thành_phần cần thực_hiện kiểm thử phân_tích thiết_kế mô_hình kiểm thử tự_động thiết_kế test case xây_dựng mô_hình phát_triển mô_hình phát_triển kiểm thử tự_động thiết_kế và xây_dựng các test case để thực_thi phát_triển testscript tạo testscrpit giai đoan này chúng_ta sẽ sử_dụng test tool để ghi lại các thao_tác lên phần_mềm cần kiểm_tra và tự_động sinh ra test script chỉnh sửa testscript chỉnh sửa để testscript thực_hiện kiểm_tra theo đúng yêu_cầu đặt ra cụ_thể là làm theo test case cần thực_hiện chạy testscript giám_sát các hoạt_động kiểm thử phần_mềm của testscript kiểm_tra kết_quả kiểm_tra kết_quả thông_báo ngay sau khi thực_hiện kiểm thử tự_động đánh_giá kết_quả kiểm thử thông_qua báo_cáo kết_quả kiểm thử bổ_sung chỉnh sửa những sai_sót kiểm thử chấp_nhận acceptance testing khái_niệm kiểm thử chấp_nhận kiểm thử chấp_nhận acceptance testing là kiểm thử chức_năng được thực_hiện để kiểm_tra xem phần_mềm đáp_ứng các yêu_cầu của khách_hàng kiểm thử chấp_nhận được thực_hiện bởi khách_hàng người dùng và các bên liên_quan kịch_bản kiểm thử chấp_nhận hình dưới đây mô_tả kịch_bản kiểm thử chấp_nhận hình kịch_bản kiểm thử chấp_nhận các yếu_tố trong kiểm thử chấp_nhận kiểm thử chấp_nhận là kiểm thử dựa vào các yêu_cầu người dùng user requirements các yêu_cầu hệ_thống system requirements các trường_hợp sử_dụng use cases các qui_trình xử_lý công_việc business processes các báo_cáo phân_tích rủi_ro risk analysis reports mục_tiêu của kiểm thử chấp_nhận mục_tiêu của acceptance testing là xác_nhận lại sự tin_tưởng vào hệ_thống các đặc_tính thuộc về chức_năng hoặc phi chức_năng của hệ_thống tìm_kiếm lỗi không phải là trọng_tâm chính của acceptance testing acceptance testing có_thể đánh_giá sự sẵn_sàng của hệ_thống để triển_khai và sử_dụng mặc_dù không nhất_thiết phải là mức cuối_cùng của việc kiểm thử ví_dụ một cuộc kiểm thử tích_hợp hệ_thống ở quy_mô lớn có_thể được thực_hiện sau khi đã thực_hiện acceptance test đối_với một hệ_thống một_số loại kiểm thử chấp_nhận thông_thường user acceptance testing kiểm thử chấp_nhận người dùng thông_thường dùng để kiểm_tra tính phù_hợp với người dùng của hệ_thống công_việc này được thực_hiện bởi người dùng của doanh_nghiệp operational acceptance testing kiểm thử chấp_nhận hoạt_động chấp_nhận hệ_thống bởi các quản_trị viên hệ_thống system administrators bao_gồm kiểm thử phần backuprestore sao lưu phục_hồi hệ_thống khôi_phục lại hệ_thống sau khi có sự_cố disaster recovery như cúp điện hỏa_hoạn quản_trị người dùng user management như phân_quyền lần_lượt login bằng tất_cả các quyền các nhiệm_vụ bảo_trì maintenance tasks các nhiệm_vụ tải data và di_chuyển data data load and migration tasks kiểm_tra các lỗ_hổng bảo_mật định_kỳ periodic checks of security vulnerabilities contract and regulation acceptance testing kiểm thử chấp_nhận hợp_đồng và thỏa_thuận contract acceptance testing được thực_hiện với tiêu_chí chấp_nhận một hợp_đồng nâng_cấp phát_triển phần_mềm tiêu_chuẩn chấp_nhận cần được xác_định khi các bên thỏa_thuận hợp_đồng điều_lệ chấp_nhận thử_nghiệm được thực_hiện đối_với bất_kỳ quy_định phải được dựa vào chẳng_hạn như quy_định của chính_phủ pháp_luật hoặc các điều_lệ an_toàn alpha and beta or field testing kiểm thử alpha và beta phát_triển của thị_trường hoặc cots phần_mềm thường muốn nhận được phản_hồi từ khách_hàng tiềm_năng hoặc khách_hàng trong thị_trường của họ trước khi sản_phẩm phần_mềm được đóng_gói để thương_mại alpha testing được thực_hiện tại nơi tổ_chức phát_triển nhưng không phải do nhóm phát_triển test mà do khách_hàng thực_hiện test beta testing hoặc field testing được thực_hiện bởi khách_hàng hoặc các khách_hàng tiềm_năng tại nơi của họ khách_hàng download bản beta và cài vào máy mình rồi sử_dụng chương nội_dung thực_hiện selenium webdriver khái_quát về selenium selenium là gì selenium là một công_cụ kiểm thử phần_mềm tự_động mã nguồn mở cho việc kiểm thử ứng_dụng web selenium có_thể chạy được trên hầu_hết các trình duyệt như ie mozilla firefox chrome opera và hầu_hết các hệ điều_hành như windows mac linux đặc_điểm của selenium mã nguồn mở đây là điểm mạnh của selenium khi có sự so_sánh với các test tool khác vì là mã nguồn mở nên có_thể sử_dụng mà không cần lo_lắng về phí bản_quyền hay thời_hạn sử_dụng selenium hỗ_trợ nhiều ngôn_ngữ lập_trình selenium hỗ_trợ chạy trên nhiều hệ điều_hành khác nhau cấu_trúc của selenium hình cấu_trúc của selenium selenium gồm thành_phần selenium ide integrated development environment là công_cụ cho_phép chúng_ta recordplayback một test scrpit đây là một add on hỗ_trợ cho firefox chúng_ta chỉ có_thể record trên trình duyệt firefox nhưng lại có_thể playback trên các trình duyệt khác như ie chrome selenium rc selenium webdriver là một thư_viện cho_phép chúng_ta lập_trình scripting test script trên các ngôn_ngữ khác nhau như python java c selenium gird là một hệ_thống hỗ_trợ người dùng thực_thi test script trên nhiều trình duyệt một_cách song_song mà không cần phải chỉnh sửa test scrpit ưu nhược_điểm của selenium ưu_điểm là công_cụ mã nguồn mở đơn_giản dễ cài_đặt dễ làm_việc sử_dụng miễn_phí dễ_dàng ghi và phát lại các thao_tác của người dùng với trình duyệt gỡ_lỗi hặc thiết_lập các điểm dừng tự_động hoàn chình cho tất_cả các lệnh selenium thường gặp hỗ_trợ các tệp tin selenium uer extension js dễ_dàng điều chình thông_qua các plugin nhược_điểm không_thể đảm_bảo bất_kỳ add in nào được yêu_cầu nếu selenium không_thể nhận ra các đối_tượng hỗ_trợ được cung_cấp cho selenium rất ít tìm_hiểu về selenium webdriver giới_thiệu về selenium webdriver webdriver là một công_cụ để kiểm thử tự_động_hóa cho ứng_dụng web nó thường được gọi_là selenium selenium webdriver aka webdriver hoặc selenium là một kế_thừa của selenium rc nó thực_hiện cùng một công_việc nhưng theo một_cách khác thay_vì tiêm một mã javascript vào trình duyệt để mô_phỏng hành_động của người dùng nó sử_dụng các hỗ_trợ của trình duyệt để tự_động_hóa khác nhau cho mỗi trình duyệt nó tương_tác trực_tiếp với các trình duyệt mà không cần bất_kỳ_trung_gian ngoài_ra thay_vì một api dựa trên từ_điển sử_dụng trong selenium rc nó cung_cấp thuận_tiện hơn api hướng đối_tượng tính_năng chính của selenium webdriver là việc tích_hợp webdriver api ngoài việc giải_quyết một_số hạn_chế trong selenium rc api selenium webdriver còn được thiết_kế để mang đến một giao_diện lập_trình đơn_giản hơn nó cho_phép sử_dụng một trong số các ngôn_ngữ lập_trình như html java net ruby để tạo kịch_bản kiểm thử kết_hợp với sử_dụng các điều_kiện vòng lặp khiến cho test script trở_nên chính_xác hơn selenium webdriver còn được phát_triển tốt hơn để hỗ_trợ cho các trang_web động do các phần_tử trong một trang web động có_thể thay_đổi bất_cứ lúc_nào ngay cả khi trang đó không được tải lại vì_vậy selenium webdriver được phát_triển để hỗ_trợ quá_trình kiểm thử mà không cần phải thực_hiện lại khi có thay_đổi xảy ra selenium webdriver sử_dụng ngôn_ngữ lập_trình để tạo ra các script sử_dụng điều_kiện rẽ nhánh sử_dụng vòng lặp kiến_trúc selenium webdriver slenium webdriver được giải_thích với một sơ_đồ kiến_trúc đơn_giản như hình dưới đây hình kiến_trúc selenium webdriver so_sánh selenium webdriver và selenium rc cấu_trúc cấu_trúc của webdriver đơn_giản hơn selenium rc webdriver kiểm_soát trình duyệt từ cấp_độ os tất_cả những gì chúng_ta cần khi sử_dụng webdriver cho việc kiểm thử là tập lệnh selenium và một trình duyệt để thực_hiện các lệnh trên ngược_lại selenium rc có cấu_trúc phức_tạp hơn rất nhiều cụ_thể như sau trước khi bắt_đầu kiểm thử chúng_ta phải chạy một ứng_dụng riêng_biệt được gọi_là selenium rc server đây là một ứng_dụng hoạt_động như một trạm trung_gian giữa các selenium command và trình duyệt khi chúng_ta bắt_đầu thực_hiện kiểm thử selenium rc server gọi tắt là server sẽ truyền một chương_trình javascript gọi là selenium core vào trong trình duyệt selenium core sẽ nhận chỉ_thị được đưa ra bởi server các chỉ_thị được hình_thành khi chạy các selenium command tiếp_theo selenium core sẽ thực_hiện các chỉ_thị này như một lệnh javascript lúc này trình duyệt mới nhận được các lệnh từ selenium core và phản_hồi lại phía server cuối_cùng server mới trả về kết_quả cho chúng_ta như vây thay_vì việc trực_tiếp thực_hiện và nhận phản_hồi từ trình duyệt như một end user thông_thường khi sử_dụng selenium rc chúng_ta phải qua rất nhiều bước trung_gian để mô_tả rõ hơn quy_trình ta xem quy_trình dưới đây tốc_độ như chúng_ta đã thấy từ cấu_trúc hoạt_động được mô_tả như ở trên chắc_chắn tốc_độ thực_thi và nhận phản_hồi từ trình duyệt khi sử_dụng webdriver sẽ nhanh hơn vì nó thực_hiện mọi hành_động trực_tiếp với trình duyệt còn selenium rc thì phải thông_qua trạm trung_gian và mất thời_gian hơn cho việc chuyển_đổi nên thời_gian để nhận phản_hồi từ trình duyệt sẽ dài hơn sự tương_tác thực_tế webdriver có tính tương_tác gần với thực_tế hơn vì nó thực_hiện các hành_động trực_tiếp với trình duyệt giống như các end user trong thực_tế còn selenium rc thì không như vậy khi sử_dụng selenium rc cái trực_tiếp tương_tác với trình duyệt là selenium core và vì_vậy sẽ có một_số trường_hợp kết_quả trả về sai so với thực_tế ví_dụ có một trường trên trang_web bị vô_hiệu_hóa thực_tế end user không_thể nhập bất_cứ dữ_liệu nào vào trong trường đó yêu_cầu của chúng_ta là phải kiểm_tra xem thực_tế trường đó đã bị vô_hiệu_hóa hay chưa th sử_dụng webdriver kết_quả trả về là không nhập được dữ_liệu vào trường đang kiểm_tra th sử_dụng selenium rc một_số kết_quả trả về cho thấy vẫn có trường_hợp cho phép nhập dữ_liệu vào trường đang vô_hiệu_hóa đặc_điểm của selenium webdriver giao_diện webdriver đại_diện cho một trình duyệt web lý_tưởng dùng để kiểm_tra ba loại phương_thức trong lớp này điều_chỉnh trình duyệt lựa_chọn các yếu_tố của trang_web debug webdriver để hỗ_trợ đa_ngôn_ngữ cũng như hỗ_trợ nhiều trình duyệt có nghĩa là nếu có api hỗ_trợ nhiều ngôn_ngữ thì đây sẽ tự_động dẫn đến nhiều nền_tảng hỗ trỡ nhiều ngôn_ngữ hỗ_trợ nhiều trình duyệt hỗ_trợ nhiều nền_tảng các thư_viện cần_thiết để chạy selenium webdriver danh_sách các thư_viện selenium webdriver cần cài_đặt hình các thư_viện chạy selenium webdriver các hàm xử_lý chung trong selenium webdriver locate element sử_dụng webdriver bảng các hàm xử_lý chung trong selenium webdriver by classname value của class attribute findelement by classname someclassname by cssselector locator bằng css findelement by cssselector input email by id value của id attribute findelement by id someid by linktext locator bằng value findelement by linktext registration by tagname name của tag findelement by tagname div by xpath locator bằng xpath findelement by xpath htmlbodydiv by name value của name attribute findelement by name somename các hàm hay sử_dụng bảng các hàm hay sử_dụng trong selenium webdriver init webdriver webdriver driver new chormedriver open url driver get baseurl init webelement webelement element driver findelement by classname someclassname click an element driver findelement by classname someclassname click type text to textbox driver findelement by classname someclassname senkey test refresh current page driver navigate refresh các câu_lệnh trong selenium webdriver các câu_lệnh trình duyệt câu_lệnh get mục_đích câu_lệnh này sử_dụng để mở một trang_web mới trong trình duyệt hiện_tại cú_pháp drive get url url là url để tải trang nên sử_dụng một url đầy_đủ ví_dụ driver get wwww google com câu_lệnh lấy tiêu_đề gettitle mục_đích câu_lệnh này sử_dụng để lấy tiêu_đề của trang_web hiện_tại cú_pháp driver gettitle câu_lệnh đóng trang_web close mục_đích câu_lệnh này dùng để đóng cửa_sổ hiện_tại của trình duyệt cú_pháp driver close các câu_lệnh web element phương_thức findelement tìm phần từ bằng id by id mục_đích tìm vị_trí của phần_tử bằng id nếu tìm được id phù_hợp sẽ trả về vị_trí của phần_tử nếu không có phần từ phù_hợp với id sẽ xuất_hiện nosuchelementexception cú_pháp driver findelement by id tìm phần_tử bằng name by name mục_đích tìm vị_trí của phần_tử bằng name nếu tìm được giá_trị thuộc_tính name phù_hợp sẽ trả về vị_trí của phần_tử nếu không có phần từ phù_hợp với thuộc_tính name sẽ xuất_hiện nosuchelementexception cú_pháp driver findelement by name tìm phần_tử bằng class name classname mục_đích tìm phần_tử dựa trên giá_trị của thuộc_tính class cú_pháp driver findelement by classname tìm phần_tử bằng tag name tagname mục_đích tìm phần_tử dựa vào tag names cú_pháp driver findelement by tagname các câu_lệnh chuyển_hướng trình duyệt câu_lệnh to goto mục_đích lệnh này dùng để chuyển_hướng đến trang_web hoặc url yêu_cầu cú_pháp driver navigate to url dirver navigate gotourl url trong đó url là url để tải trang nên sử_dụng url đầy_đủ câu_lệnh forward mục_đích lệnh này dùng để đi đến trang tiếp_theo giống với nút forward trên trình duyệt cú_pháp driver navigate forward ngôn_ngữ gherkin khái_quát ngôn_ngữ gherkin specflow thực_thi các feature file các feature files chứa các đặc_tả step thực_thi các step này được viết bằng ngôn_ngữ gherkin gherkin là ngôn_ngữ mà specflow đọc ngôn_ngữ ấy chuyển thành test gherkin khá dễ hiểu người đọc có_thể hiểu kịch_bản và hành_động mà không cần biết chi_tiết chúng được cài_đặt như thế_nào hình mô_tả ngôn_ngữ gherkin mục_tiêu của gherkin gherkin thỏa_mãn mục_đích cung_cấp tư_liệu test tự_động các từ khóa trong ngôn_ngữ gherkin từ khóa chính feature ý_nghĩa feature là một đoạn text mô_tả ngắn_gọn về chức_năng thực_hiện ví_dụ feature google search to test google page search functionality we will search as well as navigating to search to search result background ý_nghĩa cho_phép thêm một_số ngữ_cảnh cho tất_cả các scenario trong feature có_thể hiểu đơn_giản là điều_kiện tiên_quyết để thực_hiện tất_cả các scenario trong feature scenario ý_nghĩa kịch_bản mô_phỏng các bước và kết_quả dự_kiến cho một trường_hợp thử_nghiệm cụ_thể ví_dụ scenario google search for execute automation given i have navigated to google page and i see the google page fully loaded when i type search keyword as vietnam given ý_nghĩa mô_tả điều_kiện tiên_quyết để thực_hiện một scenario ví_dụ scenario googletest given i have navigated to google when i have entered into the search field keyword specflow and i click on the search button when ý_nghĩa mô_tả các hành_động chính steps mà người dùng thực_hiện ví_dụ scenario googletest given i have navigated to google when i have entered into the search field keyword specflow and i click on the search button then ý_nghĩa mô_tả kết_quả đầu_ra mong_muốn của scenario ví_dụ scenario google search for execute automation given i have navigated to google page and i see the google page fully loaded when i type search keyword as vietnam then i should see the result for keyword and but steps ý_nghĩa thay_thế cho các từ khóa givenwhenthen để làm cho kịch_bản được mạch_lạc hơn ví_dụ scenario google search for execute automation given i have navigated to google page and i see the google page fully loaded when i type search keyword as vietnam then i should see the result for keyword scenario outline ý_nghĩa để gom nhóm kịch_bản có chung các steps nhưng lại có nhiều input và output _dữ_liệu được cung_cấp bởi một cấu_trúc dạng bảng được ngăn_cách bởi ví_dụ scenario outline successful login with valid credentials given user is at the home page and navigate to login page when user enter and and click on the login button examples username password lanhuong lanhuongtk gmail com examples ý_nghĩa để khai_báo các giá_trị cho các biến trong scenario outline ví_dụ scenario outline successful login with valid credentials given user is at the home page and navigate to login page when user enter and and click on the login button examples username password lanhuong lanhuongtk gmail com các từ khóa khác doc strings data tables tags sử_dụng tags để tổ_chức và sắp_xếp các tính_năng và kịch_bản comments quy_tắc viết gherkin các quy_tắc khi viết gherkin một file gherkin chỉ mô_tả cho một feature file lưu dưới dạng extension là feature mỗi một file feature thường gồm một chức_năng duy_nhất một chức_năng bao_gồm nhiều kịch_bản khác nhau với danh_sách các bước source file gherkin là feature giống như python và yaml gherkin là một ngôn_ngữ kịch_bản được sử_dụng để định_nghĩa logic theo cấu_trúc cũng giống như ruby nên thay_thế kí_tự tab bằng các kí_tự space dòng comment sẽ có kí_tự ở đầu dòng dạng file gherkin thông_thường file gherkin thường như sau hình dạng file gherkin thông_thường tìm_hiểu về specflow specflow là gì specflow là một công_cụ kiểm thử tự_động dựa trên việc thực_thi các chức_năng được mô_tả dưới dạng plain text các plain text này có_thể được đọc bởi mã nguồn được viết bằng nhiều ngôn_ngữ như java net python specflow net hỗ_trợ các ngôn_ngữ gherkin sử_dụng specflow để xác_định quản_lý và thực_hiện tự_động kiểm thử chấp_nhận specflow tích_hợp với visual studio specflow net tự_động tạo ra các mã kiểm_tra nunit khi dự_án được xây_dựng tính_năng của specfow specflow tạo ra một lớp thử_nghiệm đơn_vị cho các yếu_tố tính_năng với tên lớp bắt_nguồn từ tên của tính_năng này specflow tạo ra các bài kiểm_tra đơn_vị thực_thi từ các kịch_bản mà đại_diện tiêu_chuẩn chấp_nhận sơ_đồ wordflow xử_lý các steps trong specflow hình workflow trong specflow cấu_trúc dự_án cài_đặt specflow hình cấu_trúc dự_án cài_đặt specflow ưu_điểm bảng ưu_điểm của specflow so với các công_cụ khác specflow qtp selenium nó miễn_phí qtp đắt tiền nó miễn_phí đó là một công_cụ phát_triển hướng hành_vi đó là một công_cụ tự_động_hóa chức_năng đây là một công_cụ kiểm_tra chức_năng và hiệu_năng plugin trong specflow hoạt_động nhanh hơn plugin hoạt_động chậm hơn so với specflow và selenium plugin hoạt_động chậm hơn specflow specflow hỗ_trợ các ngôn_ngữ khác qtp chỉ hỗ_trợ kịch_bản ngôn_ngữ vb selenium hỗ_trợ java net và nhiều ngôn_ngữ khác specflow viết các bước tự_động_hóa là nỗ_lực chung của các nhà kiểm_tra và phats triển trong qtp chỉ kiểm_tra viết các bước tự_động_hóa selenium viết các bước tự_động_hóa là nỗ_lực chung của các nhà kiểm_tra và nhà phát_triển dưa_chuột chỉ hỗ_trợ môi_trường web hỗ_trợ web máy_tính chỉ hỗ_trợ môi_trường web cài_đặt specflow cài_đặt specflow bao_gồm hai bước sau cài_đặt ide tích_hợp cài_đặt gói tích_hợp ide còn phụ_thuộc vào ide của bạn chọn tool extensions and updates từ trình đơn trong visual studio chuyển sang tìm_kiếm trực_tuyến ở bên trái và nhập từ khóa tìm_kiếm specflow vào tìm_kiếm thiết_lập dự_án visual studio để làm_việc với specflow specflow excel specflow excel là gì specflow excel là một plugin specflow cho_phép bạn xác_định yêu_cầu và bộ dữ_liệu ví_dụ trong các tệp excel các yêu_cầu này có_thể được sử_dụng giống như tệp tin văn_bản_gốc gherkin lợi_ích của specflow excel có hai cách để sử_dụng các tệp excel để mở_rộng các thông_số kỹ_thuật của bạn xác_định toàn_bộ tệp tin tính_năng feauture file trong excel sử_dụng các bảng làm kịch_bản mở_rộng các kịch_bản phác_thảo kịch_bản scenario outline examples trong các tệp tin tính_năng feature file với các bảng excel bài_toán áp_dụng mô_tả tổng_quan về chương_trình xây_dựng framework kiểm thử chấp_nhận tự_động với selenium webdriver và specflow cho ứng_dụng web là sự kết_hợp giữa specflow net selenium webdriver và visual studio hình mô_hình thành_phần_ứng_dụng trong đồ_án này tôi tiến_hành xây_dựng framework kiểm thử chấp_nhận tự_động với selenium webdriver và specflow cho ứng_dụng web phương_pháp này tôi xây_dựng các chương kiểm thử để kiểm_tra xem sản_phẩm phần_mềm là các trang_web có hoạt_động thỏa_mãn yêu_cầu chấp_nhận của người dùng hay không cài_đặt và xây_dựng cài dặt để xây_dựng chương_trình bạn cần cài_đặt cho dự_án các tệp tin hỗ_trợ cho specflow trong visual studio download and install specflow from visual studio gallery from http visualstudiogallery msdn microsoft comd fbc bbc aafbdee download and install nunit test adapter from http visualstudiogallery msdn microsoft comd fbc bbc aafbdee xây_dựng khởi tạo dự_án bước mở visual studio bước tạo dự_án testproject unit test project và đặt tên cho dự_án là flow như hình dưới đây bước remove unittest cs from solution explorer vì không dùng đến bước tiếp_theo thêm specflow net webdriver và nunit sử_dụng nuget nhấp chuột phải vào dự_án fows trong solution explorer và chọn manage nuget packages như thể_hiện trong hình bên dưới bước trên hộp_thoại fows manage nuget packages kích chuột vào search online hoặc nhấn tổ_hợp ctrl e để nhập từ khóa tìm_kiếm specflow kết_quả tìm_kiếm sẽ trả về những gợi_ý sau đây chọn specflow nunit từ danh_sách và nhấn vào nút install nuget sẽ tải về và cài_đặt specflow nunit bước tiếp_theo tìm_kiếm webdriver trên hộp_thoại flows manage nuget packages chọn selenium webdriver and selenium webdriver support classes từ danh_sách và nhấn nút install chú_ý cài_đặt thành_công sẽ xuất_hiện dấu_tích màu xanh như hình dưới đây bước đóng hộp_thoại flow manage nuget packages thêm tập tin feature feature file tập tin feature là các loại tập tin có chứa các kịch_bản mô_tả các hành_vi mong_đợi của phần_mềm bước nhấp chuột phải vào dự_án tên dự_án flow trong solution explorer click vào add new item bước trong hộp_thoại add new item flow chọn specflow feature file và đặt tên demogooglesearch feature cho tập tin ở phía dưới bước nhấn nút add ở góc dưới bên phải để thêm theo mặc định specflow sẽ bổ_sung thêm một tính_năng giả trong các tính_năng của file bước thay_thế kịch_bản kiểm thử của bạn ví_dụ dưới đây là các kịch_bản đã được triển_khai trong dự_án kịch_bản logincustom feature mô_tả kịch_bản kiểm thử chấp_nhận demo cho chức_năng login customer bằng cách lấy dữ_liệu từ excel kịch_bản addcustomer feature mô_tả kịch_bản kiểm thử chấp_nhận cho chức_năng add customer bằng cách lấy dữ_liệu từ excel thêm tập tin định_nghĩa sep defenition step defenition định_nghĩa bước xác_định các bước kiểm_tra trong các tệp tin tính_năng được đưa ra bởi given when then vào mã nó thực_hiện và kiểm_tra các kết_quả từ hệ_thống được kiểm_tra đối_với một định_nghĩa bước sẽ được thực_hiện nó phải phù_hợp với thành_phần nhất_định trong một tính_năng để định_nghĩa feature ta thực_hiện kích chuột phải vào kịch_bản feature chọn generate step definitions hộp_thoại generate step definition skeleton specflow xuất_hiện chứa định_nghĩa các bước trong kịch_bản feature chọn generate sau đó một lớp định_nghĩa step definition được thiết_lập mặc định theo các bước trong kịch_bản thay_đổi nội_dung để định_nghĩa các bước cho kịch_bản ví_dụ lớp định_nghĩa cho kịch_bản logincustom feature trong feature file chạy ứng_dụng test bước chọn test windows trong main menu test explorer bước cửa_sổ mới test explorer hiển_thị như hình bên dưới chọn run all để chạy toàn_bộ hoặc chọn chương_trình cần chạy nhấn chuột phải chọn run selected test để chạy từng ứng_dụng những chương_trình pass sẽ có dấu_tích màu xanh và những chương_trình fail sẽ có dấu x màu đỏ nhấn click vào output để xem test case specflow reports specflow runner tạo ra một báo_cáo thực_hiện nâng cao cho mỗi chạy thử_nghiệm để xem các báo_cáo chọn test trong show output from trong cửa_sổ output click vào liên_kết đến resport file để xem báo_cáo trong visual studio specflow sử_dụng extent html report chương kết_luận kết_quả đạt được của đề_tài sau thời_gian nghiên_cứu và phát_triển tác_giả đã hoàn_thành mục_tiêu và yêu_cầu đặt ra ban_đầu nắm được kiến_thức về kiểm thử chấp_nhận tự_động phần_mềm sử_dụng được ngôn_ngữ gherkin công_cụ specflow và selenium webdriver để kiểm thử chấp_nhận tự_động cho ứng_dụng web xây_dựng được framework kiểm thử chấp_nhận tự_động cho ứng_dụng web hạn_chế của đề_tài ứng_dụng mới dừng lại ở việc tự_động_hóa_kiểm thử chấp_nhận cho ứng_dụng web cho chức_năng đăng nhập và tìm_kiếm hướng phát_triển của đề_tài trong thời_gian nghiên_cứu và thực_hiện đề_tài tác_giả đã vạch ra được hướng phát_triển tiếp_theo của đề_tài như sau xây_dựng một kịch_bản kiểm thử tổng_quát cho mọi chức_năng trên mọi trang_web nào đó xây_dựng và mở_rộng thêm ứng_dụng để thực_hiện kiểm thử chấp_nhận tự_động với selenium webdriver và specflow cho ứng_dụng web cho nhiều chức_năng phức_tạp hơn trên các trang_web tài_liệu tham_khảo x khoa công_nghệ_thông_tin đề_cương kiểm thử phần_mềm tự_động trường đại_học spkt hưng yên unmesh gundecha selenium testing tools cookbook packt publishing kanglin li and mengqi wu effective software test automation developing an automated software testing tool sybex san francisco https specflow org specflow https www youtube complaylist list pltukxtppwrsayynrnkqkvvvqdi http toolsqa comspecflow x phụ_lục kiểm thử chấp_nhận tự_động với selenium webdriver và specflow cho ứng_dụng web