chương tổng_quan về đề_tài lý_do chọn đề_tài hiện_nay chúng_ta đang sống trong thời_kỳ phát_triển rất nhanh_chóng và sôi_động của công_nghệ_thông_tin sự phát_triển mạnh_mẽ không ngừng của công_nghệ_thông_tin trên khắp thế_giới đã làm thay_đổi cản bản đời_sống kinh_tế của các quốc_gia công_nghệ_thông_tin đã và đang đi sâu vào mọi lĩnh_vực của đời_sống xã_hội và ngày_càng khẳng_định được tính phổ_dụng tiện_lợi nhanh_chóng và rẻ_tiền mà không một hình_thức xử_lý thông_tin nào khác có được một trong những vấn_đề quan_trọng nhất đối_với các doanh_nghiệp dù lớn hay nhỏ đó là làm_sao đưa sản_phẩm của mình tới khách_hàng và bày ra được các ưu_thế của nó ngày_nay ứng_dụng công_nghệ_thông_tin và việc tin_học hóa được xem là một trong những yếu_tố mang tính quyết_định trong cuộc_sống hàng ngày nó đóng vai_trò hết_sức quan_trọng có_thể tạo ra những bước đột_phá việc xây_dựng hệ_thống tiếp_thị để hỗ_trợ cho công_việc bán hàng là nhu_cầu tất_yếu doanh_thu của doanh_nghiệp sẽ tăng nhanh nếu có sự hỗ_trợ từ hệ_thống tiếp_thị đặc_biệt trong lĩnh_vực smartphone luôn cạnh_tranh gay_gắt việc tiếp_thị sản_phẩm tới được nhiều khách_hàng hơn và bay ra chi được cách điểm mạnh của sản_phẩm sẽ luôn là nhân_tố quyết_định doanh_thu tất_cả những việc đó đều phải làm một_cách thủ_công dẫn đến mất rất nhiều thời_gian và chi_phí cho nhân_công và khách_hàng cũng không hài long khi phải chờ lâu với mong_muốn áp_dụng những kiến_thức mình đã học được tạo ra sản_phẩm hoàn_thiện có tính thực_tế đồng_thời giúp nâng cao khả_năng lập_trình và đúc_rút được nhiều kinh_nghiệm cho những công_việc trong tương_lai sau khi ra trường cùng_với sự đồng_ý của giáo_viên hướng_dẫn đề_tài em quyết_định lựa_chọn đề_tài hệ_thống giới thị và bán điện_thoại online sspo để làm đề_tài đồ_án tốt_nghiệp mục_tiêu của đề_tài hệ_thống quản_lý cần đạt được những mục_tiêu sau phải có chức_năng đăng nhập phải có chức_năng tra_cứu sản_phẩm phải có chức_năng quản_lý giỏ hàng phải có chức_năng cập_nhật tài_khoản phải có chức_năng quản_lý đơn hàng phải có chức_năng quản_lý sản_phẩm phải có chức_năng quản_lý_tài_khoản phải có chức_năng quản_lý quảng_cáo giới_hạn và phạm_vi của đề_tài đề_tài xây_dựng dựng một hệ_thống quản_lý nhà_hàng sử_dụng các công_nghệ phổ_biến nhất trong lập_trình như android studio intellij idea cơ_sở dữ_liệu mysql và xây_dựng webservice php nội_dung thực_hiện xâu dựng được server chạy trên local host đối_với server bán hàng hoàn_thiện được các chức_năng đăng nhập đăng_ký quản_lý_tài_khoản quản_lý quầy hàng quản_lý đơn hàng thống_kê đối_với app người mua trên android hoàn_thiện được các chức_năng đăng nhập đăng_ký quản_lý_tài_khoản tra_cứu quản_lý giỏ hàng xem đơn hàng phương_pháp tiếp_cận cách tiếp_cận nghiên_cứu ngôn_ngữ lập_trình android công_nghệ ứng_dụng vào hệ_thống như php mysql mô_hình phát_triển mvc sử_dụng các phương_pháp nghiên_cứu o phương_pháp đọc tài_liệu o phương_pháp thực_nghiệm o phương_pháp phân_tích mẫu chương cơ_sở lý_thuyết tổng_quan về android android là gì android là một hệ điều_hành dựa trên nền_tảng linux được thiết_kế dành cho các thiết_bị di_động có màn_hình cảm_ứng như điện_thoại thông_minh và máy_tính bảng ban_đầu android được phát_triển bởi tổng_công_ty android với sự hỗ_trợ tài_chính từ google và sau_này được chính google mua lại vào năm android ra_mắt vào năm cùng với tuyên_bố thành_lập liên_minh thiết_bị cầm tay mở một hiệp_hội gồm các công_ty phần_cứng phần_mềm và viễn_thông với mục_tiêu đẩy_mạnh các tiêu_chuẩn mở cho các thiết_bị di_động chiếc điện_thoại đầu_tiên chạy android được bán vào năm android có mã nguồn mở và google phát_hành mã nguồn theo giấy_phép apache chính mã nguồn mở cùng với một giấy_phép không có nhiều ràng_buộc đã cho_phép các nhà phát_triển thiết_bị mạng di_động và các lập_trình_viên nhiệt_huyết được điều_chỉnh và phân_phối android một_cách tự_do ngoài_ra android còn có một cộng_đồng lập_trình_viên đông_đảo chuyên viết các ứng_dụng để mở_rộng chức_năng của thiết_bị bằng một loại ngôn_ngữ lập_trình java có sửa_đổi vào tháng năm có khoảng ứng_dụng trên android và số lượt tải ứng_dụng từ google play cửa_hàng ứng_dụng chính của android ước_tính khoảng tỷ lượt android cung_cấp một phương_pháp tiếp_cận thống_nhất để lập_trình ứng_dụng cho các thiết_bị di_động nghĩa_là các lập_trình_viên chỉ cần lập_trình cho android và các ứng_dụng của họ sẽ có_thể chạy trên các thiết_bị khác nhau được hỗ_trợ bởi android những yếu_tố này đã giúp android trở_thành nền_tảng điện_thoại thông_minh phổ_biến nhất thế_giới vượt qua symbian os vào quý năm và được các công_ty công_nghệ lựa_chọn khi họ cần một hệ điều_hành không nặng_nề có khả_năng tinh_chỉnh và giá rẻ chạy trên các thiết_bị công_nghệ_cao thay_vì tạo_dựng từ đầu kết_quả là mặc_dù được thiết_kế để chạy trên điện_thoại và máy_tính bảng android đã xuất_hiện trên tv máy chơi game và các thiết_bị điện_tử khác bản_chất mở của android cũng khích_lệ một đội_ngũ đông_đảo lập_trình_viên và những người đam_mê sử_dụng mã nguồn mở để tạo ra những dự_án do cộng_đồng quản_lý những dự_án này bổ_sung các tính_năng cao_cấp cho những người dùng thích tìm_tòi hoặc đưa android vào các thiết_bị ban_đầu chạy hệ điều_hành khác android chiếm thị_phần điện_thoại thông_minh trên toàn thế_giới vào thời_điểm quý năm với tổng_cộng tỷ thiết_bị đã được kích_hoạt và triệu lượt kích_hoạt mỗi ngày sự thành_công của hệ điều_hành cũng khiến nó trở_thành mục_tiêu trong các vụ kiện liên_quan đến bằng phát_minh góp_mặt trong cái gọi_là cuộc_chiến điện_thoại thông_minh giữa các công_ty công_nghệ các tính_năng của hệ điều_hành android giao_diện người dùng đẹp màn_hình cơ_bản hệ điều_hành android cung_cấp một giao_diện người dùng đẹp và trực_quan kết_nối gsmedge iden cdma ev do umts bluetooth wi fi lte nfc and wimax lưu_trữ sqlite một cơ_sở dữ_liệu quan_hệ nhẹ được sử_dụng cho mục_đích lưu_trữ dữ_liệu hỗ_trợ phương_tiện truyền_thông h h mpeg sp amr amr wb aac he aac aac mp midi ogg vorbis wav jpeg png gif and bmp tin nhắn sms and mms trình duyệt web dựa vào cơ_chế webkit mã nguồn mở kết_hợp với công_cụ v javascript của chrome hỗ_trợ html và css cảm_ứng đa điểm android có hỗ_trợ cho cảm_ứng đa điểm mà ban_đầu đã được thực_hiện có sẵn trong điện_thoại như htc hero multi tasking người dùng có_thể nhảy từ một nhiệm_vụ nàyđến nhiệm_vụ khác và cùng một thời_gian các ứng_dụng khác nhau có_thể chạy đồng_thời resizable widgets widget là thay_đổi kích_thước vì_vậy người dùng có_thể mở_rộng chúng để hiển_thị nội_dung nhiều hơn hoặc thu_nhỏ chúng để tiết_kiệm không_gian đa_ngôn_ngữ hỗ_trợ thư_mục đơn và văn_bản hai chiều gcm google cloud messaging gcm là một dịch_vụ cho_phép các nhà phát_triển gửi tin nhắn_dữ_liệu lên user của họ trên các thiết_bị android mà không cần một giải_pháp đồng_bộ hóa độc_quyền wi fi direct một công_nghệ cho_phép các ứng_dụng tìm thấy và ghép đôi trực_tiếp qua một băng thông cao kết_nối peer to peer android beam một công_nghệ nfc cho_phép người dùng chia_sẻ ngay_lập_tức chỉ bằng cách chạm hai điện_thoại nfc với nhau kiến_trúc hệ điều_hành android kiến_trúc hệ điều_hành android gồm phần chính mô_hình dưới đây sẽ cho ta cái nhìn tổng_quan về kiến_trúc android _nhân của android được phát_triển dựa vào kernel linux mỗi tầng trong kiến_trúc android hoạt_động dựa vào tầng bên dưới nó hình kiến_trúc hệ điều_hành android có_thể ban_đầu bạn thấy sơ_đồ hơi rối_mắt nhưng không sao chúng_ta sẽ lần_lượt tìm_hiểu theo thứ_tự từ dưới lên _nhân linux linux kernel nằm ở tầng dưới cùng là lớp linux kernal linux với khoảng patches lớp này liên_hệ với phần_cứng và nó chứa tất_cả driver phần_cứng cần_thiết như camera bàn_phím màn_hình thư_viện android android libraries và android runtime phía trên tầng linux kernel là tầng libraries chứa những thư_viện hỗ_trợ một_số có_thể kể đến như_là bộ_máy trình duyệt web mã nguồn mở webkit thư_viện libc cơ_sở dữ_liệu sqlite tiện_lợi cho việc lưu_trữ và chia_sẻ dữ_liệu thư_viện hỗ_trợ thu_phát âm_thanh và video thư_viện ssl giúp bảo_mật mạng tầng này chứa tất_cả các thư_viện java được viết đặc_biệt cho android như các thư_viện framework các thư_viện xây_dựng giao_diện đồ_họa và cơ_sở dữ_liệu dưới đây là một_số thư_viện quan_trọng mà các lập_trình_viên nên biết android app cung_cấp quyền truy_cập tới mô_hình ứng_dụng và là nền_tảng của mọi ứng_dụng android applications android content cho_phép truy_cập nội_dung phát_hành và tin nhắn giữa các ứng_dụng và các thành_phần trong một ứng dung android database được dùng để truy_cập vào dữ_liệu được đưa ra bởi bộ_phận cung_cấp nội_dung bao_gồm các lớp quản_lý cơ_sở dữ_liệu sqlite android opengl cho_phép tương_tác với thư_viện đồ_họa opengl es d android os giúp ứng_dụng truy_cập những dịch_vụ cơ_bản của hệ điều_hành bao_gồm tin nhắn dịch_vụ hệ_thống và liên_lạc nội_bộ inter process communication android text được dùng để vẽ và thao_tác văn_bản trên màn_hình android view các khối xây_dựng cơ_bản của giao_diện người dùng android widget một tập_hợp rất nhiều thành_phần giao_diện được xây_dựng sẵn như nút_bấm button nhãn label danh_sách hiển_thị list views quản_lý bố_cục layout managers android webkit tập_hợp các lớp classes cho_phép trình duyệt web được nhúng vào ứng_dụng trong tầng này còn có một phần không kém phần quan_trọng là android runtime bây_giờ chúng_ta sẽ tìm_hiểu các thư_viện cc trong tầng này android runtime chứa dalvik virtual machine dvm một biến_thể của java virtual machine đặc biêt thiết_kế và tối_ưu_hóa cho android dvm giúp mỗi ứng_dụng android chạy trong chính tiến_trình process của nó với một đại_diện instance của dvm ngoài_ra android runtime cũng chứa tập_hợp các thư_viện quan trong cho_phép người lập_trình viết ứng_dụng sử_dụng ngôn_ngữ lập_trình java application framework application framework cung_cấp nhiều dịch_vụ cấp cao dưới dạng các lớp viết bằng java java classes lập_trình_viên được phép sử_dụng các lớp này để tạo ra các ứng_dụng android framework chứa các dịch_vụ quan_trọng như activity manager quản_lý tất_cả các phần của vòng đời lifecycle ứng_dụng và các hoạt_động ngăn xếp activity stack content providers cho_phép ứng_dụng phát_hành và chia_sẻ dữ_liệu với ứng_dụng khác resource manager cho_phép truy_cập tới những tài_nguyên không phải là mã nguồn như chuỗi cài_đặt màu bố_cục giao_diện notifications manager giúp ứng_dụng hiển_thị thông_báo và nhắc_nhở người dùng view system một tập_hợp mở_rộng giúp tạo giao_diện người dùng ứng_dụng applications ở tầng trên cùng là các ứng_dụng android đi kèm với hệ điều_hành như contacts books browser games thiết_nghĩ không cần nói nhiều thêm về tầng này tổng_quan về webservice webservice là gì web service là một khái_niệm rộng hơn so với khái_niệm web thông_thường nó là sự kết_hợp các máy_tính cá_nhân với các thiết_bị khác các cơ_sở dữ_liệu và các mạng máy_tính để tạo thành một cơ_cấu tính_toán ảo mà người sử_dụng có_thể làm_việc thông_qua các trình duyệt mạng các web service thường cung_cấp các dữ_liệu thô mà nó khó hiểu đối_với đa_số người dùng thông_thường chúng thường được trả về dưới dạng xml hoặc json hiện_nay web service trở_thành dịch_vụ mạnh_mẽ cung_cấp lợi_ích cho cả doanh nghiepj khách_hàng cá_nhân trong nhiều lĩnh_vực thực_tế thông_tin thương_mại dịch_vụ du_lịch tỉ_giá chứng_khoán so_sánh websevice và api api và web service hoạt_động như một phương_tiện giao_tiếp sự khác_biệt duy_nhất là một web service là tạo điều_kiện cho sự tương_tác giữa hai máy trên mạng api hoạt_động như một giao_diện giữa hai ứng_dụng khác nhau để chúng có_thể giao_tiếp với nhau api là phương_thức tạo điều_kiện cho các nhà_cung_cấp bên thứ ba có_thể viết các chương_trình giao_diện dễ_dàng giao_tiếp với các chương_trình khác một web service được thiết_kế để có một giao_diện được mô_tả trong một định_dạng có_thể xử_lý bằng máy_thường được chỉ_định trong ngôn_ngữ mô_tả dịch_vụ web wsdl thông_thường http là giao thức được sử_dụng phổ_biến nhất để giao_tiếp web service cũng sử_dụng soap rest và xml rpc như một phương_tiện giao_tiếp api có_thể sử_dụng bất_kỳ phương_tiện giao_tiếp nào để bắt_đầu tương_tác giữa các ứng_dụng ví_dụ các lời gọi hệ_thống được gọi bằng cách sử_dụng các ngắt chương_trình interrupt của api hạt_nhân linux một api xác_định chính_xác các phương_thức cho một chương_trình phần_mềm để tương_tác với một chương_trình phần_mềm khác khi hành_động này api liên_quan đến việc gửi dữ_liệu qua mạng thì đó chính là bạn đã sử_dụng một web service một api thường liên_quan đến các chức_năng gọi từ bên trong một chương_trình phần_mềm trong trường_hợp các ứng_dụng web api được sử_dụng là dựa trên web các ứng_dụng dành cho máy_tính để bàn như bảng tính và tài_liệu từ sử_dụng vba và api dựa trên com không liên_quan đến web service một ứng_dụng máy_chủ như joomla có_thể sử_dụng một api dựa trên nền php trong máy_chủ không yêu_cầu web service một web service chỉ đơn_thuần là một api được bao_bọc trong http api không phải lúc_nào cũng cần dựa trên web một api bao_gồm một bộ đầy_đủ các quy_tắc và thông_số kỹ_thuật cho một chương_trình phần_mềm làm theo để tạo điều_kiện tương_tác web service có_thể không chứa một bộ thông_số kỹ_thuật hoàn_chỉnh và đôi_khi có_thể không thực_hiện được tất_cả các tác vụ có_thể thực_hiện được từ api hoàn_chỉnh hình mô_hình client web service một_số thư_viện xử_lý server client cho android retrofit retrofit là gì retrofit là một type safe http client cho android và java retrofit giúp dễ_dàng kết_nối tới một dịch_vụ rest ở trên web bằng cách dịch api thành các interface của java thư_viện mạnh_mẽ này giúp bạn lấy dữ_liệu trả về dạng json hoặc xml sau đó phần tích cú_pháp thành plain old java objects pojos các request get post put patch delete đều có_thể được thực_thi retrofit được xây_dựng trên nền một_số thư_viện mạnh_mẽ và công_cụ khác đằng sau nó có sử_dụng okhttp ngoài_ra retrofit không tích_hợp sẵn bộ_chuyển_đổi json java thay vào đó ta có_thể sử_dụng các thư_viện sau o gson com squareup retrofit converter gson o jackson com squareup retrofit converter jackson o moshi com squareup retrofit converter moshi o vs protocol buffers retrofit hỗ_trợ o protobuf com squareup retrofit converter protobuf o wire com squareup retrofit converter wire và đối_với xml retrofit hỗ_trợ simple framework com squareup retrofit converter simpleframework tại_sao lại dung retrofit o retrofit đơn_giản trong việc setup và sử_dụng phát_triển thư_viện type safe http của riêng của bạn để giao_tiếp với một rest api có_thể thật_sự rất khó bạn phải xử_lý nhiều khía_cạnh chẳng_hạn như kết_nối bộ_nhớ đệm thử lại yêu_cầu sai luồng phân_tích phản_hồi xử_lý lỗi và nhiều thứ khác mặt_khác retrofit là một thư_viện được tổ_chức tốt tài_liệu hướng đầy_đủ và đã thử_nghiệm sẽ giúp bạn tiết_kiệm rất nhiều thời_gian quý_báu và những đau_đầu không cần_thiết o retrofit là một type safe http client trình biên_dịch sẽ xác_nhận hợp_lệ các kiểu dữ_liệu trong khi biên_dịch và ném một lỗi nếu bạn cố gán kiểu sai cho một biến o retrofit nhanh hơn rất nhiều so với việc sử_dụng volley aysnctask volley volley là gì volley là một http library giúp các app android kết_nối mạng đơn_giản developer viết code ít hơn đặc_biệt là thư_viện volley giúp tăng tốc_độ ứng_dụng nhờ hỗ_trợ cache hình thư_viện volley một_số tính_năng nổi_bật của volley o hỗ_trợ lên schedule để tạo request o cho_phép cùng lúc thực_hiện nhiều request trên các thread khác nhau theo độ ưu_tiên o cache trên disk hay ram o cho_phép hủy một request o dễ_dàng tùy chỉnh cho phù_hợp với yêu_cầu của ứng_dụng như thiết_lập retry back off o dễ debug tổng_quan về jpa java persistence api khái_quát về jpa jpa là một đặc_tả của sun ra_đời cùng với bản đặc_tả jee jpa không phải là một sản_phẩm và không_thể nó như thành_phần persistence nó cần phải có một cài_đặt orm để hoạt_động và persist các đối_tượng java các framework orm có_thể sử_dụng cho jpa như hibernate toplink open jpa ngày_nay đa_số các nhà_cung_cấp đều hỗ_trợ cài_đặt jpa cho framework persistence của họ vì vây người lập_trình có_thể lựa_chọn nhà cung_cấp tốt nhất tùy thuộc yêu_cầu ứng_dụng của mình lợi_ích của jpa đơn_giản_hóa công_nghệ cho tầng persistence tầng dữ_liệu không phụ_thuộc vào các framework orm có nhiều nhà cung_cấp hỗ_trợ cài_đặt jpa dữ_liệu có_thể được lưu_trữ thông_qua việc orm phiên_bản hiện_tại của jpa hiện_tại jpa đã có phiên_bản cung_cấp nhiều tính_năng hữu_ích cho người lập_trình kiến_trúc jpa jpa sử_dụng metadata để ánh_xạ các đối_tượng persistence với các bảng trong cơ_sở dữ_liệu jpa hỗ_trợ sql như_là một ngôn_ngữ truy_vấn để dễ_dàng xử_lý các truy_vấn cơ_sở dữ_liệu ngôn_ngữ truy_vấn jpa có_thể dùng thực_thi cả truy_vấn tĩnh và truy_vấn động các khái_niệm jpa entity entity là các đối_tượng persistence thể_hiện một mẫu tin trong cơ_sở dữ_liệu entity chỉ là các lớp pojo đơn_giản dễ_dàng tạo dưới đây là một_số đặc_điểm của một entity o entity có_thể tương_tác với cơ_sở dữ_liệu quan_hệ o entity được xác_định thông_qua một định_danh tương_đương với khóa chính trong table của cơ_sở dữ_liệu quan_hệ o entity hỗ_trợ giao_tác transaction o entity hỗ_trợ kế_thừa giống như những lớp thường khác entitymanager entitymanager là một giao_diện interface cung_cấp các api cho việc tương_tác với các entity một_số chức_năng cơ_bản của entitymanager như o persist phương_thức này dùng để lưu một thực_thể mới tạo vào cơ_sở dữ_liệu o merge dùng để cập_nhật trạng_thái của entity vào cơ_sở dữ_liệu o remove xóa một thể_hiện của entity enitymanagerfactory entitymanagerfactory được dùng để tạo ra một thể_hiện của entitymanager các tính_năng của jpa việc giới_thiệu jpa vào trong đặc_tả jee là một bước tiến lớn trong việc đơn_giản_hóa các quy_trình phát_triển ứng_dụng jpa đơn_giản_hóa mô_hình thực_thể dữ_liệu và cộng thểm một_số tính_năng mới mà phiên_bản ejb trước ejb không có giờ_đây người lập_trình có_thể ánh_xạ trực_tiếp các đối_tượng persistence với cơ_sở dữ_liệu quan_hệ jpa có_thể sử_dụng bên ngoài container điều này không dễ thực_hiện trong ejb bạn cũng có_thể sử_dụng jpa trong các ứng_dụng swing một_số tính_năng của jpa jpa hỗ_trợ pluggable tức_là có_thể sử_dụng nhiều nhà hãng cung_cấp thứ ba như hibernate hay toplink hỗ_trợ annotation giảm bớt số lớp yêu_cầu cho việc phát_triển persistence không cần phải viết các mô_tả triển_khai trong xml annotation dựa trên metadata đã hỗ_trợ trong các ứng_dụng jpa đã chuẩn hóa_orm và dễ_dàng phát_triển hơn jpa hỗ_trợ truy_vấn động và tĩnh nhiều ide hỗ_trợ phát_triển ứng_dụng jpa và có_thể tự_động sinh code ánh_xạ từ cơ_sở dữ_liệu thành các entity và ngược_lại các jpa anotation chính các anotation liên_quan đến khai_báo entity o entity biến một javabean trở_thành một entity để chúng_ta có thể thao_tác với database thông_qua việc sử_dụng entity này o table định_nghĩa một entity tương_ứng với một bảng trong cơ_sở dữ_liệu nếu một entity không có anotation này mặc định tên bảng trong database được map có tên tương_ứng với tên của entity o column định_nghĩa một thuộc_tính trong một entity sẽ tương_ứng là một trường của một bảng tương_ứng trong cơ_sở dữ_liệu o id định_nghĩa một thuộc_tính trong một entity sẽ là trường khóa chính tương_ứng trong cơ_sở dữ_liệu o generatedvalue định_nghĩa một thuộc_tính có giá_trị tăng tự_động tương_ứng với trường tăng tự_động trong cơ_sở dữ_liệu tùy cơ_sở dữ_liệu khác nhau các strategy truyền vào cũng khác nhau o embeddable định_nghĩa một composite key chứa các thuộc_tính là các khóa chính của một bảng trong cơ_sở dữ_liệu o idclass chức_năng tương_tự như embeddable tuy_nhiên nó chỉ khai_báo một class khác là composite key của một entity và class khác đó có định_nghĩa các thuộc_tính là khóa chính các anotation liên_quan đến relationship o manytoone định_nghĩa mối quan_hệ nhiều một giữa các entity tương_ứng với mối quan_hệ gữa các bảng trong cơ_sở dữ_liệu o onetomany định_nghĩa mối quan_hệ một nhiều giữa các entity tương_ứng với mối quan_hệ gữa các bảng trong cơ_sở dữ_liệu o onetoone định_nghĩa mối quan_hệ một một giữa các entity tương_ứng với mối quan_hệ gữa các bảng trong cơ_sở dữ_liệu o manytomany định_nghĩa mối quan_hệ nhiều nhiều giữa các entity tương_ứng với mối quan_hệ gữa các bảng trong cơ_sở dữ_liệu _hình ví_dụ về định_nghĩa một entity với các jpa anotation hibernate framework khái_quát về hibernate hibernate ra_đời năm bởi nhà sáng_lập gavin king như một sự thay_thế cho ejb kiểu thực_thể bean hiện_nay phiên_bản mới nhất của hibernate là final hibernate framework là một giải_pháp orm mã nguồn mở gọn_nhẹ hibernate giúp đơn_giản_hóa_sự phát_triển của ứng_dụng java để tương_tác với cơ_sở dữ_liệu giúp đơn_giản_hóa_việc tạo dữ_liệu thao_tác_dữ_liệu và truy_cập dữ_liệu đó là một kĩ_thuật lập_trình để ánh_xạ đối_tượng vào dữ_liệu được lưu_trữ trong cơ_sở dữ_liệu các tool orm sử_dụng jdbc api để tương_tác với cơ_sở dữ_liệu _hình mô_hình tương_tác của hibernate trong ứng_dụng lợi_ích của hibernate framework hibernate framework có các lợi_ích như dưới đây mã nguồn mở và nhẹ hibernate framework là mã nguồn mở có giấy_phép lgpl và nhẹ hiệu_suất nhanh hiệu_suất của hibernate freameworj là nhanh bởi_vì bộ_nhớ cache được sử_dụng trong nội_bộ framework có hai loại bộ_nhớ cahce trong hibernate gồm bộ_nhớ cache cấp một và bộ_nhớ cache cấp hai bộ_nhớ cache cấp một được bật bằng lệnh mặc định truy_vấn cơ_sở dữ_liệu đọc lập hql là phiên_bản hướng đối_tượng cả sql nó tạo ra các truy_vấn dữ_liệu độc_lập vì_vậy bạn không cần phải viết các truy_vấn cơ_sở dữ_liệu cụ_thể trước hibernate nếu dự_án có cơ_sở dữ_liệu bị thay_đổi chúng_ta cần phải thay_đổi truy_vấn sql dẫn đến sự_cố bảo_trì tạo bảng tự_động hibernate framework cung_cấp phương_tiện để tạo ra các bảng cơ_sở dữ_liệu tự_động vì_vậy không cần phải tạo ra các bảng trong cơ_sở dữ_liệu bằng tay đơn_giản lệnh join phức_tạp có_thể lấy dữ_liệu từ nhiều bảng một_cách dễ_dàng với hibernate framework cung_cấp thống_kê truy_vấn và trạng_thái cơ_sở dữ_liệu hibernate hỗ_trợ bộ_nhớ cache truy_vấn và cung_cấp số_liệu thống_kê về truy_vấn và trạng_thái cơ_sở dữ_liệu nhược_điểm của hibernate không hỗ_trợ các câu truy_vấn phức_tạp một_số trường_hợp vẫn phải dùng native sql do hibernate không_thể cover hết tất_cả các cú_pháp của các hệ quản_trị cơ sử dữ_liệu bị hạn_chế sự can_thiệp vào câu_lệnh sql do nó được tự_động sinh ra các database mà hibernate hỗ_trợ hibernate hỗ_trợ hầu_hết các rbdms chính dưới đây là danh_sách vài cơ_sở dữ_liệu quan_hệ được hỗ_trợ bới hibernate hsql database engine dbnt mysql postgresql oracle microsoft sql server database sybase sql server informix dynamic server kiến_trúc của hibernate kiến_trúc hibernate bao_gồm nhiều đối_tượng như đối_tượng persistent session factory transaction factory connection factory session transaction có tầng trong kiến_trúc hibernate đó là tầng ứng_dụng java tầng hibernate framework tầng backhand api và tầng database dưới đây là sơ_đồ kiến_trúc hibernate hình kiến_trúc của hibernate dưới đây là một hình_ảnh chi_tiết về kiến_trúc ứng_dụng hibernate với vài lớp core quan_trọng hình kiến_trúc chi_tiết của hibernate hibernate sử_dụng các api java hiện có như jdbc java transaction api jta và jndi jdbc cung_cấp một mức_độ trừu_tượng cơ_bản của cơ_sở dữ_liệu quan_hệ cho_phép hầu_hết các cơ_sở dữ_liệu với trình điều_khiển jdbc được hỗ_trợ bởi hibernate jndi và jta cho_phép hibernate được tích_hợp với các máy_chủ ứng_dụng jee các thành_phần trong kiến_trúc của hibernate để tạo ứng_dụng hibernate đầu_tiên chúng_ta phải biết các thành_phần của kiến_trúc hibernate chúng là như sau đối_tượng configuration là đối_tượng hibernate đầu_tiên bạn tạo trong bất_kỳ ứng_dụng hibernate nào và chỉ cần tạo một lần trong quá_trình khởi tạo ứng_dụng nó đại_diện cho một tập tin cấu_hình hoặc thuộc_tính yêu_cầu của hibernate đối_tượng configuration cung_cấp hai thành_phần chính o database connection thao_tác này được xử_lý thông_qua một hoặc nhiều tệp cấu_hình được hibernate hỗ_trợ các tệp này là hibernate properties và hibernate cfg xml o class mapping setup thành_phần này tạo ra kết_nối giữa các lớp java và các bảng cơ_sở dữ_liệu sessionfactory là một đối_tượng luồng an_toàn và được sử_dụng bởi tất_cả các luồng của một ứng_dụng sessionfactory là đối_tượng nặng nên thường nó được tạo ra trong quá_trình khởi_động ứng_dụng và lưu_giữ để sử_dụng sau_này bạn sẽ cần một đối_tượng sessionfactory cho mỗi cơ_sở dữ_liệu bằng cách sử_dụng một tập tin cấu_hình riêng_biệt vì_vậy nếu bạn đang sử_dụng nhiều cơ_sở dữ_liệu thì bạn sẽ phải tạo nhiều đối_tượng sessionfactory session sử_dụng để có được một kết_nối vật_lý với một cơ_sở dữ_liệu đối_tượng session là nhẹ và được thiết_kế để được tạo ra thể_hiện mỗi khi tương_tác với cơ_sở dữ_liệu các đối_tượng liên_tục được lưu và truy_xuất thông_qua một đối_tượng session transaction đại_diện cho một đơn_vị làm_việc với cơ_sở dữ_liệu và hầu_hết các rdbms hỗ_trợ chức_năng transaction các transaction trong hibernate được xử_lý bởi trình quản_lý transaction và transaction từ jdbc hoặc jta đây là một đối_tượng tùy chọn và các ứng_dụng hibernate có_thể chọn không sử_dụng interface này thay vào đó quản_lý transaction trong code ứng_dụng riêng query các đối_tượng query sử_dụng chuỗi truy_vấn sql hoặc hql để lấy dữ_liệu từ cơ_sở dữ_liệu và tạo các đối_tượng ví_dụ truy_vấn được sử_dụng để ràng_buộc các tham_số truy_vấn giới_hạn số_lượng kết_quả được trả về bởi truy_vấn và cuối_cùng thực_hiện truy_vấn criteria đối_tượng criteria được sử_dụng để tạo và thực_hiện truy_vấn các tiêu_chí định_hướng đối_tượng để lấy các đối_tượng cấu_hình hibernate khi tích_hợp hibernate vào trong ứng_dụng các cấu_hình của hibernate phải được thiết_lập mặc định trong file xml với tên mặc định là hibernate cfg xml cấu_trúc của file hibernate cfg xml gồm phần chính phần khai_báo thẻ head thẻ và thẻ là các thẻ bắt_buộc của file xml phục_vụ cho việc cấu_hình của hibernate các thẻ là các thẻ thực_hiện cấu_hình cho hibernate bao_gồm cấu_hình các thuộc_tính như tên driver class url của database username của database password dialect các thẻ mapping các thẻ này sẽ khai_báo các entity đã được cấu_hình bởi jpa anotation hình nội_dung một file cấu_hình cho kết với mysql database mapping dữ_liệu với jpa anotation trong hibernate như đã nói trong phần java persistence api hay jpa là một đăc tả java cho việc ánh_xạ giữa các đối_tượng java tới cơ_sở dữ_liệu quan_hệ sử_dụng cộng nghệ phổ_biến là orm object relational mapping jpa api cung_cấp đầy_đủ các công_cụ cho_phép người lập_trình có_thể tạo cơ_sở dữ_liệu một_cách đơn_giản và nhanh_chóng jpa api có_thể dùng để persist một đối_tượng business pojo vào trong cơ_sở dữ_liệu hoặc lấy dữ_liệu từ cơ_sở dữ_liệu và ánh_xạ ra các đối_tượng business một_cách đơn_giản bất_kỳ một ứng_dụng doanh_nghiệp enterprise nào cũng đều cần phải thực_hiện các tháo tác crud đến database bằng việc lưư trữ trích rút lượng lớn dữ_liệu các nhà phát_triển developers cần phải viết nhiều code để thực_hiện các việc này với công_nghệ jdbc trước đây developers sẽ phải chủ_động thực_hiện các việc từ mở kết_nối vào database tạo các statement resultset cho đến đóng tất_cả các thứ đó lại và code sẽ trở_nên cồng_kềnh developers cần phải làm_việc với cả java code và sql thực_tế từng database khác nhau thì câu sql có một_số phần khác nhau nên đòi_hỏi developers phải nắm được sự khác_biệt này để viết code cho phù_hợp khi ứng_dụng muốn chuyển từ database sang database khác ví_dụ từ oracle sang ms sql server thì chắc_chắn sẽ có một_số phần của câu sql cần phải đổi công_việc sửa code lại đòi_hỏi developers phải test lại ứng_dụng điều này sẽ tốn thời_gian phát_triển để khắc_phục nhược_điểm này đã có rất nhiều frameworks ra_đời với mục_đích giúp xóa đi vấn để về tương_thích giữa các database giúp developers tập_trung vào phần xử_lý nghiệp_vụ tổng_quan về servlet định servlet servlet có_thể xem như_là một sự mở_rộng của cgi tùy vào ngữ_cảnh sevlet có_thể được mô_tả bằng nhiều cách servlet là một công_nghệ được sử_dụng để tạo ra ứng_dụng web servlet là một api cung_cấp các interface và lớp bao_gồm các tài_liệu servlet là một thành_phần web được triển_khai trên máy_chủ để tạo ra trang web động có nhiều interface và các lớp trong api servlet như servlet genericservlet httpservlet servletrequest servletresponse kiến_trúc của servlet hình vị_trí của servlet trong một ứng_dụng web trong công_nghệ servlet có hai gói quan_trọng là javax servlet và javax servlet http hai gói này cung_cấp các interface và lớp để tạo ra các servlet interface servlet định_nghĩa các phương_thức trong vòng đời của một servlet lớp genericservlet thực_thi servlet lớp httpservlet kế_thừa genericservlet cung_cấp các phương_thức để xử_lý các phương_thức http như doget xử_lý get dopost xử_lý post để tạo một servlet chúng_ta cần phải thực_thi interface servlet trực_tiếp hoặc gián_tiếp thông_qua genericservlet hoặc httpservlet trong thực_tế lớp servlet của chúng_ta thường kế_thừa httpservlet để có_thể xử_lý các phương_thức http nhiệm_vụ của servlet servlet thực_hiện các nhiệm_vụ chính sau đây đọc dữ_liệu rõ_ràng do khách_hàng trình duyệt gửi điều này bao_gồm một mẫu html trên một trang_web hoặc nó cũng có_thể đến từ một applet hoặc một chương_trình khách_hàng http tùy chỉnh đọc dữ_liệu yêu_cầu http ẩn được gửi bởi khách_hàng trình duyệt điều này bao_gồm các cookie loại phương_tiện truyền_thông và các chương_trình nén mà trình duyệt hiểu được xử_lý dữ_liệu và tạo ra các kết_quả quá_trình này có_thể yêu_cầu nói_chuyện với một cơ_sở dữ_liệu thực_hiện một cuộc gọi rmi hoặc corba gọi một dịch_vụ web hoặc tính trực_tiếp phản_hồi gửi dữ_liệu rõ_ràng tức_là tài_liệu tới khách_hàng trình duyệt tài_liệu này có_thể được gửi bằng nhiều định_dạng bao_gồm văn_bản html hoặc xml nhị_phân hình_ảnh gif excel gửi phản_hồi http ẩn cho khách_hàng trình duyệt điều này bao_gồm nói với trình duyệt hoặc các trình khách khác loại tài_liệu đang được trả về ví_dụ html thiết_lập cookie và các tham_số bộ_nhớ đệm và các tác vụ khác nhược_điểm của servlet lập_trình_viên phải code và html trong cùng một java file làm cho việc phát_triển cũng như bảo_trì phần_mềm trở_nên khó_khăn tổng_quan về jsp giới_thiệu về jsp jsp javaserver pages là một công_nghệ để phát_triển các trang web động jsp giúp các nhà phát_triển chèn java code vào các trang html bằng cách sử_dụng các thẻ jsp đặc_biệt jsp là một kiểu java servlet được thiết_kế để tạo ra giao_diện người dùng cho một ứng_dụng java web các nhà phát_triển web viết các jsp như các tệp văn_bản kết_hợp mã html hoặc xhtml các phần_tử xml các action và lệnh jsp sử_dụng jsp bạn có_thể thu_thập_dữ_liệu đầu_vào từ người dùng thông_qua các form của trang_web trình_bày các bản ghi từ một cơ_sở dữ_liệu hoặc một nguồn khác và tạo các trang web động các thẻ jsp có_thể được sử_dụng cho nhiều mục_đích khác nhau chẳng_hạn như truy_xuất thông_tin từ cơ_sở dữ_liệu hoặc đăng_ký mới truy_cập các thành_phần javabeans kiểm_soát giữa các trang và chia_sẻ thông_tin giữa các request các trang các trang javaserver thường_phục_vụ cùng một mục_đích như các chương_trình được thực_hiện bằng cách sử_dụng cgi nhưng jsp cung_cấp một_số lợi_thế so với cgi hiệu_suất tốt hơn đáng_kể vì jsp cho_phép nhúng các thành_phần động trong các trang html thay_vì có các tệp cgi riêng_biệt jsp luôn được biên_soạn trước khi chúng được xử_lý bởi máy_chủ không giống như cgi perl yêu_cầu máy_chủ tải một trình thông_dịch và tập lệnh đích mỗi khi trang được request giống như servlet jsp cũng có quyền truy_cập vào tất_cả các enterprise java apis bao_gồm jdbc jndi ejb jaxp các trang jsp có_thể được sử_dụng kết_hợp với các servlet xử_lý logic nghiệp_vụ model được hỗ_trợ bởi java servlet jsp là một phần của java ee một nền_tảng hoàn_chỉnh cho các ứng_dụng enterprise kiến_trúc của jsp sơ_đồ sau cho thấy vị_trí của jsp container và các tệp jsp trong một ứng_dụng web hình kiến_trúc của jsp quá_trình xử_lý của một trang jsp giống như trang bình_thường trình duyệt của bạn gửi một http request đến máy_chủ web máy_chủ web nhận ra rằng yêu_cầu http là dành cho một trang jsp và chuyển nó tới một công_cụ jsp điều này được thực_hiện bằng cách sử_dụng url hoặc trang jsp kết_thúc bằng jsp thay_vì html công_cụ jsp tải trang jsp từ đĩa và chuyển nó sang một nội_dung servlet chuyển_đổi này rất đơn_giản trong đó tất_cả các văn_bản được chuyển_đổi thành các câu_lệnh println và tất_cả các phần_tử jsp được chuyển_đổi sang mã java mã này thực_hiện hành_vi tương_ứng của trang công_cụ jsp biên_dịch servlet thành một lớp thực_thi và chuyển_tiếp yêu_cầu ban_đầu đến một công_cụ servlet một phần của máy_chủ web được gọi_là công_cụ servlet nạp lớp servlet và thực_thi nó trong quá_trình thực_thi servlet tạo ra một đầu_ra ở định_dạng html kết_quả đầu_ra được chuyển_tiếp đến máy_chủ web bằng servlet engine bên trong http response máy_chủ web chuyển_tiếp phản_hồi http tới trình duyệt của bạn về nội_dung html cuối_cùng trình duyệt web xử_lý và hiển_thị trang html tới người dùng hình sơ_đồ xử_lý một trang jsp thông_thường jsp container kiểm_tra xem liệu một servlet cho tệp jsp đã tồn_tại và liệu ngày sửa_đổi trên jsp cũ hơn servlet hay không nếu jsp lớn hơn servlet được tạo ra của nó jsp container giả_định rằng jsp không thay_đổi và servlet được tạo ra vẫn phù_hợp với nội_dung của jsp điều này làm cho quá_trình này hiệu_quả hơn với các ngôn_ngữ kịch_bản khác như php và do_đó nhanh hơn vì_vậy nói cách khác một trang jsp thực_sự là một cách khác để viết một servlet mà không cần phải là một chương_trình lập_trình java ngoại_trừ giai_đoạn dịch từ jsp sang servlet một trang jsp được xử_lý chính_xác như một servlet thông_thường ưu_điểm của jsp các lợi_ích khác của việc sử_dụng jsp đối_với các công_nghệ khác active server pages asp có lợi_thế của jsp so với asp thứ nhất phần động được viết bằng java không phải visual basic hoặc ngôn_ngữ cụ_thể khác vì_vậy nó mạnh hơn và dễ sử_dụng hơn thứ hai nó là khả_chuyển cho hệ điều_hành khác và máy_chủ web không phải của microsoft servlet thuần jsp thuận_tiện hơn servlet thuần để viết và để sửa_đổi html hơn là sử_dụng lệnh println để tạo ra html rối_rắm server side includes ssi ssi thực_sự chỉ dành cho những thứ đơn_giản không phải cho các chương_trình thực sử_dụng form dữ_liệu tạo các kết_nối cơ_sở dữ_liệu và những thứ tương_tự tổng_quan về spring framework giới_thiệu về spring framework spring framework là một framework phát_triển các ứng_dụng java enterprise ban_đầu nó được viết bới rod johnson và lần đầu_tiên được phát_hành theo giấy_phép apache vào tháng năm spring có kích_thước thường nhẹ phiên_bản cơ_bản của nó có kích_thước khoảng mb ngoài_ra nó còn là một java platform mã nguồn mở một giải_pháp gọn_nhẹ dành cho java enterprise với spring framework các nhà phát_triển có_thể tạo ra các mã có hiệu_suất cao dễ kiểm thử và có_thể sử_dụng lại được các tính_năng core của spring có_thể sử_dụng trong việc phát_triển bất_kì các ứng_dụng java bên cạnh đó phần mở_rộng được sử_dụng để xây_dựng các ứng_dụng web trên nền_tảng java ee mục_tiêu của spring là làm cho việc phát_triển ứng_dụng jee dễ_dàng hơn và thúc_đẩy việc lập_trình tốt hơn bằng mô_hình pojo based lợi_ích của spring spring cho_phép các nhà phát_triển tạo các ứng_dụng cấp enterprise sử_dụng các pojo lợi_ích của việc sử_dụng các pojo là bạn không cần một sản_phẩm chứa ejb như một máy_chủ ứng_dụng mà bạn chỉ có_thể sử_dụng một bộ chứa servlet mạnh_mẽ như tomcat hoặc một_số sản_phẩm thương_mại khác spring được tổ_chức theo kiểu module mặc_dù số_lượng các gói và các lớp là khá nhiều nhưng bạn chỉ cần quan_tâm đến những gì bạn cần và không cần quan_tâm đến phần còn lại spring sử_dụng một_số công_nghệ hiện có như một_số orm framework logging frameworks jee quartz jdk timers và các công_nghệ view khác dễ_dàng kiểm thử một chương_trình được viết bằng spring web framework của spring là một web mvc framework có thiết_kế tốt nó là một thay_thế tuyệt_vời cho struts và các công_nghệ kém phổ_biến khác spring cung_cấp một api thuận_tiện để dịch các ngoại_lệ công_nghệ cụ_thể ném bởi jdbc hibernate hoặc jdo chẳng_hạn vào các trường_hợp ngoại_lệ nhất_quán không được kiểm_soát ioc container có trọng_lượng nhẹ điều này có lợi cho việc phát_triển và triển_khai các ứng_dụng trên các máy_tính có bộ_nhớ và tài_nguyên cpu hạn_chế spring cung_cấp một giao_diện quản_lý transaction nhất_quán có_thể mở_rộng đến một local transaction ví_dụ như sử_dụng một cơ_sở dữ_liệu và mở_rộng lên các global transaction sử_dụng jta sơ qua về di và ioc di dependency injection là một design pattern để loại_bỏ sự phụ_thuộc vào mã lập_trình vì_vậy nó giúp rễ ràng quản_lý và test ứng_dụng dependency injection giúp mã lập_trình liên_kết lỏng với nhau ioc inversion of control hay ioc container có trách_nhiệm khởi tạo configure gắn_kết các đối_tượng có hai kiểu của ioc containers là beanfactory và applicationcontext các module của spring framework spring framework bao_gồm nhiều tính_năng được tổ_chức thành khoảng module các module này được phân nhóm thành core container data accessintegration web aop instrumentation messaging và test spring được chia làm nhiều module khác nhau tùy theo mục_đích sử_dụng mà ta dùng trong trong các module đó dưới đây là kiến_trúc tổng_thể của spring framework hình các module của spring framework core container bao_gồm các module spring core spring beans spring context springcontext support và spring expression spring expression language o module spring core và spring beans cung_cấp những phần cơ_bản của framework bao_gồm ioc và dependency injection o module spring context xây_dựng trên một nền_tảng vững_chắc được cung_cấp bởi các module core và beans được sử_dụng để truy_cập vào các đối_tượng trong framework style tương_tự như việc đăng_ký một jndi spring context support hỗ_trợ tích_hợp libraries của bên thứ third party vào ứng_dụng spring như caching ehcache guava jcache mailing javamail schedule commonj quatz và các template engine freemarker jasperreports velocity o module spring expression cung_cấp một expression language mạnh_mẽ cho việc truy_vấn và tính_toán một đồ_thị đối_tượng lúc runtime nó được kế_thừa và mở_rộng từ unified expression language unified el ngôn_ngữ này hỗ_trợ setting và getting giá_trị các property gọi phương_thức truy_cập vào nội_dung của mảng tập_hợp và chỉ mục operator logic và tính_toán đặt tên biến và truy_xuất các đối_tượng theo tên từ ioc container của spring core container bao_gồm các module jdbc orm oxm jms và transaction o module spring jdbc cung_cấp một lớp jdbc abstraction để loại_bỏ những code tẻ_nhạt cả jdbc và phân_tích những mã lỗi cụ_thể của database vendor o module spring orm cung_cấp lớp tích_hợp với các orm api phổ_biến như jpa jdo và hibernate o module spring oxm cung_cấp lớp abstraction hỗ_trợ triển_khai objectxml mapping o module spring jms chứa các tính_năng tạo và sử_dụng các message từ spring framework nó được tích_hợp với spring messaging o module spring transaction hỗ_trợ quản_lý giao_dịch theo chương_trình và khai_báo cho các lớp mà thực_hiện các giao_diện đặc_biệt và cho tất_cả các pojo của bạn web tầng này bao_gồm các module spring web spring webmvc spring websocket và springwebmvc portlet o module spring web cung_cấp tính_năng tích_hợp web theo định_hướng cơ_bản như chức_năng tập tin tải lên nhiều phần dữ_liệu và khởi tạo các container ioc sử_dụng nghe servlet và một bối_cảnh ứng_dụng web theo định_hướng o module spring webmvc bao_gồm việc triển_khai model view controller mvc của spring cho các ứng_dụng web o module spring websocket cung_cấp hỗ_trợ cho websocket based giao_tiếp hai chiều giữa client và server trong các ứng_dụng web o module springwebmvc portlet cung_cấp việc triển_khai mvc được sử_dụng trong môi_trường portlet và ánh_xạ chức_năng của module web servlet các module khác có vài module quan_trọng khác như module aop các khía_cạnh instrumentation web và test mô_tả chi_tiết như sau o module aop cung_cấp một thực_hiện lập_trình hướng khía_cạnh cho_phép bạn xác_định phương pháp chặn và pointcuts để sạch tách mã thực_hiện chức_năng đó nên được tách ra o module aspects cung_cấp tích_hợp với aspectj mà_lại là một khuôn_khổ aop mạnh_mẽ và trưởng_thành o module instrumentation cung_cấp thiết_bị đo_đạc lớp hỗ_trợ và triển_khai lớp bộ nạp được sử_dụng trong các máy_chủ ứng_dụng nhất_định o module messaging cung_cấp hỗ_trợ cho stomp như websocket sub protocol để sử_dụng trong các ứng_dụng nó cũng hỗ_trợ một mô_hình lập_trình chú_thích cho việc định_tuyến và xử_lý tin nhắn stomp từ các máy khách websocket o module test hỗ_trợ việc kiểm_tra các thành_phần mùa xuân với junit hoặc testng khuôn_khổ các project trong hệ_sinh_thái của spring spring mvc giúp cho các nhà phát_triển xây_dựng ứng_dụng web thao mô_hình mvc mà vẫn giữ được các đặc_điểm của spring dựa trên mô_hình mvc kinh_điển spring mvc sẽ giúp các nhà phát_triển xấy dựng các web spring security cung_cấp các cơ_chế xác_thực authentication và phân_quyền authorization cho ứng_dụng web spring boot dựa vào spring sử_dụng automatic configuration để loại_bỏ configuration truyền_thống chuyển_đổi application thành dạng executable spring test với unit test bạn có một tập_hợp các mock implementation để viết unit test tương_thích với jndi servlet portlets còn với integration test module này hỗ_trợ việc load các bean theo nhiều context khác nhau ngoài_ra còn rất nhiều các dự_án khác như spring integration spring io spring cload spring mobile spring restful service spring social tổng_quan về spring mvc giới_thiệu về spring mvc spring mvc là một framework project mã nguồn mở của spring framework mvc lần_lượt là ba chữ_cái đầu_tiên của ba từ model view và controller mvc là một mô_hình ứng_dụng mà ở đó các thành_phần được phân_tách ra thành các lớp riêng_biệt với các nhiệm_vụ đặc_trưng view sẽ là lớp cho các thành_phần có chức_năng hiển_thị giao_tiếp trực_tiếp với người dùng nhiệm_vụ của các thành_phần trong view là trình_bày các dữ_liệu từ model đến người dùng cuối model là các thành_phần có khả_năng lưu_trữ và vận_chuyển thông_tin quá_trình ném dữ_liệu vào model sẽ được thực_hiện bởi controller controller là các thành_phần giúp cho việc xử_lý logic các thao_tác_nghiệp_vụ nhiệm_vụ của controller là lấy dữ_liệu từ model xử_lý dữ_liệu và cập_nhật lại dữ_liệu vào model đối_với spring mvc view sẽ là các trang jsp giúp cho việc hiển_thị dữ_liệu lên browser _dữ_liệu được lấy ra từ model là các pojo hay ta còn gọi_là các domain object cụ_thể hơn nó là các đối_tượng có các thuộc_tính có khả_năng mang vác dữ_liệu trong các luồng nghiệp_vụ của ứng_dụng cuối_cùng là controller là các lớp đặc_biệt có chứa các phương_thức có khả_năng nhận yêu_cầu xử_lý yêu_cầu cập_nhật dữ_liệu và chuyển_tiếp dữ_liệu trong ứng_dụng flow trong spring mvc hình luồng thực_thi trong spring mvc bất_kỳ request nào tới ứng_dụng web đều sẽ được gửi tới front controller dispatcher servlet front controller sẽ sử_dụng handler mapping để biết được controller nào sẽ xử_lý request đó controller nhận request gọi tới các class service thích_hợp xử_lý yêu_cầu sau khi xử_lý xong controller sẽ nhận được model từ tầng service hoặc tầng dao controller gửi model vừa nhận tới front controller dispatcher servlet dispatcher servlet sẽ tìm các mẫu view sử_dụng view resolver và truyền model vào nó view template model view page được build và gửi trả lại front controller front controller gửi một page view tới trình duyệt để hiển_thị nó cho người dùng trong mô_hình mvc thì model là các file pojo service dao thực_hiện truy_cập database xử_lý business view là các file jsp html control là dispatcher controller handler mapping controller thực_hiện điều hướn các request lợi_ích của spring mvc các tầng trong spring mvc độc_lập nên việc unit test dễ_dàng hơn phần view có_thể tích_hợp với nhiều framework về giao_diện như jsf freemarker themeleaf spring mvc base trên các pojo class nên các hành_động của nó khá đơn_giản hỗ_trợ cả annotation và xml config giúp_việc phát_triển nhanh hơn sạch hơn cung_cấp việc phân_chia một_cách rõ_ràng linh_hoạt giữa controller service data access layer chương nội_dung thực_hiện phát_biểu bài_toán tổng_quan về hệ_thống mới hệ_thống được mô_tả như sau ứng_dụng chia làm giao_diện một cho khách sử_dụng một cho người quản_lý tương_ứng với loại tài_khoản đăng nhập đối_với giao_diện cho khách_hàng khi muốn đặt mua sản_phẩm thì khách_hàng cần đăng nhập nếu chưa có tài_khoản người dùng chọn đăng_ký thông_tin đăng_ký bao_gồm tên tài_khoản mật_khẩu họ tên người dùng địa_chỉ số điện_thoại sau khi đăng nhập sẽ vào giao_diện khách giao_diện khách có các chức_năng chức_năng tra_cứu sản_phẩm sản_phẩm gồm loại điện_thoại và phụ_kiện đối_với điện_thoại trang_chủ sẽ hiển_thị mục bán_chạy nhất giảm_giá nhiều nhất và mới nhất đối_với linh_kiện chia thành pin sạc cáp sạc tai_nghe thẻ nhớ phầm mềm hỗ_trợ tìm_kiếm theo tên sắp_xếp theo giá bộ lọc khi khách_hàng nhấn vào một sản_phẩm_loại hàng điện_thoại sẽ hiển_thị thông_tin gồm tên điện_thoại giá tiền số sao ảnh mô_tả mô_tả về sản_phẩm đặt mua sau khi chọn đặt mua sản_phẩm sẽ được thêm vào giỏ hàng thông_tin chi_tiết gồm hãng sản_xuất phụ_kiện đi kèm công_nghệ màn_hình kích_thước màn_hình độ phân_giải màn_hình camera trước camera sau đèn flash chip ram bộ_nhớ trong hỗ_trợ thẻ nhớ ngoài hệ điều_hành dung_lượng pin kết_nối dữ_liệu loại sim fm radio chức_năng khác đánh_giá sản_phẩm khách_hàng bình_chọn số sao về sản_phẩm khi khách_hàng nhấn vào một phụ_kiện sẽ hiển_thị thông_tin gồm tên linh_kiện giá tiền số sao ảnh đặt mua thông_số kỹ_thuật đánh_giá sản_phẩm khách_hàng bình_chọn số sao về sản_phẩm chức_năng quản_lý giỏ hàng khi khách_hàng vào giỏ hàng sẽ hiển_thị danh_sách các sản_phẩm đặt mua và tổng_giá khách_hàng có_thể điểu chỉnh số_lượng sản_phẩm đặt mua xóa sản_phẩm khỏi giỏ hàng tiến_hành đặt_hàng chức_năng cập_nhật tài_khoản cập_nhật thông_tin tài_khoản đổi mật_khẩu đăng xuất chức_năng xem đơn hàng xem_lại danh_sách đơn hàng đã đặt đối_với giao_diện cho người quản_lý giao_diện quản_lý gồm các chức_năng quản_lý sản_phẩm thêm sửa sản_phẩm quản_lý đơn hàng hiển_thị danh_sách tất_cả đơn hàng theo tình_trạng cập_nhật_trình trạng đơn hàng cập_nhật tài_khoản cập_nhật thông_tin tài_khoản đổi mật_khẩu quản_lý_tài_khoản thay_đổi mật_khẩu hoặc xóa tài_khoản người dùng quản_lý quảng_cáo thêm sửa xóa quảng_cáo môi_trường phát_triển môi_trường phần_cứng cpu snapdragon hoặc cao hơn ram tối_thiểu mb bộ_nhớ trong tối_thiểu mb môi_trường phần_mềm hệ điều_hành android trở lên công_cụ phát_triển android studio biểu_đồ use case biểu_đồ use case tổng_quát hình usecase mức tổng_quát đặc_tả use case dangnhap biểu_đồ use case của use case đặc_tả hình uc dangnhap tóm_tắt use case này để đăng nhập vào ứng_dụng dòng sự_kiện dòng sự_kiện chính khách_hàng chọn đăng_ký khách_hàng điền thông_tin và chọn đăng_ký system hệ_thống lưu_thông_tin về tài_khoản mới đăng_ký này người dùng điền tài_khoản mật_khẩu rồi đăng nhập system nếu thông_tin tài_khoản mật_khẩu đúng và loại tài_khoản admin thì vào giao_diện quản_lý nếu thông_tin tài_khoản mật_khẩu đúng và không là admin thì vào giao_diện khách_hàng nếu không thông_báo đăng nhập không thành_công trạng_thái hệ_thống khi bắt_đầu thực_hiện use case khi chọn vào cập_nhật tài_khoản sẽ hiện lên use case này trạng_thái hệ_thống sau khi thực_hiện use case sau khi đăng nhập thành người dùng sẽ tiến giao_diện chính của phần_mềm đặc_tả use case tracuusanpham biểu_đồ use case của use case đặc_tả hình uc tracuusanpham tóm_tắt use case này hỗ_trợ khách_hàng tra_cứu thông_tin sản_phẩm dòng sự_kiện dòng sự_kiện chính người dùng chọn vào một danh_mục sản_phẩm người dùng chọn sắp_xếp người dùng chọn_lọc người dùng chọn tìm_kiếm người dùng nhập từ khóa system hệ_thống hiển_thị danh_sách sản_phẩm thỏa_mãn người dùng chọn vào sản_phẩm system hệ_thống hiển_thị giao_diện thông_tin chi_tiết sản_phẩm người dùng chọn đánh_giá người dùng chọn số sao system hệ_thống lưu đánh_giá và cập_nhật lại số sao của sản_phẩm trạng_thái hệ_thống khi bắt_đầu thực_hiện use case danh_sách các sản_phẩm theo mục trạng_thái hệ_thống sau khi thực_hiện use case hệ_thống hiển_thị danh_sách sản_phẩm thỏa_mãn các tiêu_chí người dùng đã sàng_lọc đặc_tả use case quanlygiohang biểu_đồ use case của use case đặc_tả hình uc quanlygiohang tóm_tắt use case này để người dùng điều_chỉnh các mặt_hàng muốn mua và tiến_hành đặt_hàng dòng sự_kiện dòng sự_kiện chính người dùng chọn biểu_tượng giỏ hàng người điều_chỉnh số_lượng các sản_phẩm đã cho vào giỏ system hệ_thống tính giá tiền tổng người dùng hủy_bỏ sản_phẩm khỏi giỏ system hệ_thống tính giá tiền tổng người dùng chọn đặt_hàng system nếu khách_hàng chưa đăng nhập thì hệ_thống yêu_cầu khách_hàng đăng nhập system hệ_thống khởi tạo đơn hàng theo thông_tin của tài_khoản trạng_thái hệ_thống khi bắt_đầu thực_hiện use case sau khi sản_phẩm được thêm vào giỏ hàng trạng_thái hệ_thống sau khi thực_hiện use case sau khi khi xác_nhận hệ_thống sẽ tạo đơn hàng và các sản_phẩm trong giỏ sẽ biến mất đặc_tả use case capnhattaikhoan biểu_đồ use case của use case đặc_tả hình uc capnhattaikhoan tóm_tắt use case này để thay_đổi thông_tin của người dùng hoặc đổi mật_khẩu tài_khoản dòng sự_kiện dòng sự_kiện chính người dùng chọn cập_nhật tài_khoản người dùng chọn cập_nhật thông_tin người dùng điền thông_tin mới người dùng chọn ok system hệ_thống lưu_thông_tin mới của người dùng người dùng chọn đổi mật_khẩu người dùng điền mật_khẩu mới và xác_thực system hệ_thống cập_nhật mật_khẩu mới của người dùng trạng_thái hệ_thống khi bắt_đầu thực_hiện use case thông_tin của người dùng chưa cập_nhật trạng_thái hệ_thống sau khi thực_hiện use case thông_tin mới của người dùng đã được hệ_thống cập_nhật đặc_tả use case quanlydonhang biểu_đồ use case của use case đặc_tả hình uc quanlydonhang tóm_tắt use case này khách_hàng xem lại đơn hàng mình đã đặt còn đối_với người quản_lý thì để xem danh_sách các đơn hàng được đặt theo ngày dòng sự_kiện dòng sự_kiện chính người dùng chọn xem đơn hàng system hệ_thống kiểm_tra loại tài_khoản system hệ_thống trả về danh_sách đơn hàng tương_ứng với loại tài_khoản người quản_lý chọn cập_nhật tình_trạng đơn hàng system hệ_thống cập_nhật tình_trạng đơn hàng trạng_thái hệ_thống khi bắt_đầu thực_hiện use case người dùng đã đăng nhập trạng_thái hệ_thống sau khi thực_hiện use case danh_sách đơn hàng tương_ứng với loại tài_khoản đặc_tả use case quanlysanpham biểu_đồ use case của use case đặc_tả hinh uc quanlysanpham tóm_tắt use case này để thêm sản_phẩm mới dòng sự_kiện dòng sự_kiện chính người quản_lý chọn quản_lý sản_phẩm người quản_lý chọn thêm người quản_lý chọn nhập thông_tin sản_phẩm mới người quản_lý xác_nhận thêm sản_phẩm system hệ_thống lưu_thông_tin về sản_phẩm mới người quản_lý chọn chọn một sản_phẩm người quản_lý chọn chọn sửa người quản_lý nhập thông_tin mới cho sản_phẩm system hệ_thống lưu_thông_tin mới của sản_phẩm trạng_thái hệ_thống khi bắt_đầu thực_hiện use case người quản_lý trong giao_diện quản_lý sản_phẩm trạng_thái hệ_thống sau khi thực_hiện use case thông_tin sản_phẩm được cập_nhật đặc_tả use case quanlytaikhoan biểu_đồ use case của use case đặc_tả hình uc quanlytaikhoan tóm_tắt use case này để admin quản_lý nhân_viên dòng sự_kiện dòng sự_kiện chính người quản_lý chọn quản_lý_tài_khoản người quản_lý chọn tìm_kiếm người quản_lý nhập tên tài_khoản system hệ_thống hiển_thị tài_khoản cần tìm người quản_lý chọn đổi mật_khẩu người quản_lý nhập mật_khẩu mới và xác_nhận system hệ_thống cập_nhật mật_khẩu mới cho tài_khoản khách người quản_lý chọn xóa tài_khoản system hệ_thống xóa tài_khoản được chọn trạng_thái hệ_thống khi bắt_đầu thực_hiện use case danh_sách tài_khoản của khách_hàng trạng_thái hệ_thống sau khi thực_hiện use case danh_sách tài_khoản khách_hàng được cập_nhật đặc_tả use case quanlyquangcao biểu_đồ use case của use case đặc_tả hình uc quanlyquangcao tóm_tắt use case này để người quản_lý thêm sửa xóa quảng_cáo dòng sự_kiện dòng sự_kiện chính người quản_lý chọn quản_lý quảng_cáo người quản_lý chọn thêm người quản_lý dán link hình_ảnh quảng_cáo system quảng_cáo được thêm người quản_lý chọn sửa người quản_lý nhập lại link hình_ảnh quảng_cáo system quảng_cáo được cập_nhật người quản_lý chọn xóa system hệ_thống xóa quảng_cáo được chọn trạng_thái hệ_thống khi bắt_đầu thực_hiện use case người quản_lý đang ở giao_diện quản_lý quảng_cáo trạng_thái hệ_thống sau khi thực_hiện use case danh_sách quảng_cáo được cập_nhật biểu_đồ lớp hình biểu_đồ lớp mức phân_tích danh_sách các lớp đối_tượng và quan_hệ stt tên lớpquan hệ loại ý nghĩaghi chú taikhoan entity tài_khoản nguoiquanly entity tài_khoản người quản_lý khachhang entity tài_khoản khách_hàng sanpham entity sản_phẩm dienthoai entity điện_thoại phukien entity phụ_kiện ctphukien entity chi_tiết_phụ_kiện ctdienthoai entity chi_tiết điện_thoại tonghopdanhgia entity đánh_giá quangcao entity quảng_cáo biểu_đồ tuần_tự uc đăng nhập hình biểu_đồ tuần_tự uc dangnhap uc tra_cứu sản_phẩm hình biểu_đồ tuần_tự uc tracuusanpham uc quản_lý giỏ hàng hình biểu_đồ tuần_tự uc quanlygiohang uc cập_nhật tài_khoản hình biểu_đồ tuần_tự uc capnhattaikhoan khách_hàng hình biểu_đồ tuần_tự uc capnhattaikhoan admin uc quản_lý đơn hàng hình biểu_đồ tuần_tự uc quanlydonhang khách_hàng hình biểu_đồ tuần_tự uc quanlydonhang admin uc quản_lý sản_phẩm hình biểu_đồ tuần_tự uc quanlysanpham uc quản_lý_tài_khoản hình biểu_đồ tuần_tự uc quanlytaikhoan uc quản_lý quảng_cáo hình biểu_đồ tuần_tự uc quanlyquangcao thiết_kế cơ_sở dữ_liệu hình lược_đồ quan_hệ bảng taikhoan stt tên trường kiểu dữ_liệu ràng_buộc mô_tả tentaikhoan varchar not null khóa chính matkhau varchar not null hoten text not null diachi text not null sodienthoai text not null loaitaikhoan text not null bảng tonghopdanhgia stt tên trường kiểu dữ_liệu ràng_buộc mô_tả masp varchar not null khóa ngoại tentaikhoan varchar not null khóa ngoại sosao float not null bảng sanpham stt tên trường kiểu dữ_liệu ràng_buộc mô_tả masp nvarchar not null khóa chính tensp text not null loaisp text not null gia integer not null mota text not null ngaythem date not null giamgia integer not null sosao double not null số sao được đánh_giá soluongxuat integer not null soluonghientai integer not null url text not null url hình_ảnh bảng ctphukien stt tên trường kiểu dữ_liệu ràng_buộc mô_tả mactsp varchar not null khóa chính masp varchar not null khóa ngoại thongsokythuat text not null bảng quangcao stt tên trường kiểu dữ_liệu ràng_buộc mô_tả maqc varchar not null khóa chính url text not null bảng ctdienthoai stt tên trường kiểu dữ_liệu ràng_buộc mô_tả mactsp varchar not null khóa chính masp varchar not null khóa ngoại hangsx text not null phukiendikem text not null congnghemh text not null kichthuocmh text not null dophangiaimh text not null cameratruoc text not null camerasau text not null denflash text not null chip text not null ram text not null bonhotrong text not null hotrothenhongoai text not null hedieuhanh text not null dungluongpin text not null ketnoidulieu text not null loaisim text not null fmradio text not null chucnangkhac text not null bảng donhang stt tên trường kiểu dữ_liệu ràng_buộc mô_tả madonhang varchar not null khóa chính tentaikhoan varchar not null khóa ngoại thoigian text not null tinhtrang text not null bảng ctdonhang stt tên trường kiểu dữ_liệu ràng_buộc mô_tả mactdonhang varchar not null khóa chính madonhang varchar not null khóa ngoại masp varchar not null khóa ngoại soluong integer not null gia integer not null thiết_kế giao_diện hình giao_diện trang_chủ app khách_hàng hình giao_diện tracuusanpham hình giao_diện quanlygiohang hình giao_diện dangnhap hình giao_diện capnhattaikhoan hình giao_diện quanlysanpham hình giao_diện quanlyquangcao khách hình giao_diện xemdonhang khách_hàng người quản_lý hình giao_diện xemdonhang admin chương kết_luận kết_quả đạt được của đề_tài sau thời_gian nghiên_cứu và phát_triển ứng_dụng đã hoàn_thành cơ_bản các mục_tiêu ban_đầu đề ra của đề_tài chức_năng đăng nhập đã hoàn_thành đăng nhập cho tài_khoản khách tài_khoản người quản_lý và chức_năng đăng_ký cho khách chức_năng tra_cứu sản_phẩm đã hoàn_thành chức_năng sắp_xếp tìm_kiếm lọc và hiển_thị chi_tiết chức_năng quản_lý giỏi hàng quản_lý được các sản_phẩm trong giỏ hàng và tiến_hành đặt_hàng chức_năng cập_nhật tài_khoản đã hoản thành cập_nhật thông_tin đổi mật_khẩu và đăng xuất cho người dùng chức_năng xem đơn hàng đã hiển_thị danh_sách đơn hàng của khách_hàng người quản_lý có_thể cập_nhật tình_trạng đơn hàng chức_năng quản_lý sản_phẩm quản_lý được danh_sách sản_phẩm chức_năng quản_lý_tài_khoản người quản_lý đã có_thể quản_lý_tài_khoản của khách_hàng chức_năng quản_lý quảng_cáo người quản_lý đã có_thể quản_lý danh_sách quảng_cáo hạn_chế của đề_tài xây_dựng trên localhost nên phạm_vi sử_dụng còn hạn_chế tốc_độ tải còn chậm chưa có module hỗ_trợ trao_đổi trực_tuyến với khác hàng hướng phát_triển của đề_tài trong thời_gian nghiên_cứu và thực_hiện đề_tài tác_giả đã vạch ra được hướng phát_triển tiếp_theo của đề_tài như sau nghiên_cứu và triển_khai ứng_dụng trên hệ_thống web thêm các module chăm_sóc khách_hàng xây_dựng thành hệ_thống bán điện_thoại cho doanh_nghiệp lớn tài_liệu tham_khảo khoa cntt giáo_trình lập_trình hướng đối_tượng đại_học sư_phạm kỹ_thuật hưng yên nguyễn_văn_hậu giáo_trình java nâng cao hưng yên việt nam khoa công_nghệ_thông_tin utehy nguyễn_hoàng điệp lập_trình mạng trên android hưng yên việt nam khoa công_nghệ_thông_tin utehy nguyễn_thị_hải_năng giáo_trình lập_trình đa_phương_tiện hưng yên việt nam khoa công_nghệ_thông_tin utehy youtobe lập_trình android demo ứng_dụng bán hàng online link https www youtube comwatch v jeqbwwwsm list plzrvyrairitnjdzdv fxicsazmyprn index hệ_thống giới_thiệu và bán điện_thoại online sspo